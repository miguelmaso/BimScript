import typing
from System.Collections.Generic import ICollection_1, IList_1
from Autodesk.Revit.DB import ElementId, Document, ElementFilter, DocumentType, IPrintSetting, SynchronizeWithCentralOptions, FailuresAccessor, FailureProcessingResult, ImportExportFileFormat, ExternalResourceType, View
from System import EventArgs, IDisposable

class ApplicationInitializedEventArgs(RevitAPISingleEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...


class CreateRelatedFileProgressChangedEventArgs(DataTransferProgressChangedEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def CreatingCloudSharedLocal(self) -> bool: ...
    @property
    def DownloadFinished(self) -> bool: ...
    @property
    def FinishedSize(self) -> float: ...
    @property
    def FullDownload(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Location(self) -> str: ...
    @property
    def Speed(self) -> float: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...
    @property
    def TotalSize(self) -> float: ...
    @property
    def TransferMode(self) -> DataTransferMode: ...


class DataTransferMode(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Download : DataTransferMode # 0
    Upload : DataTransferMode # 1
    Undefined : DataTransferMode # -1


class DataTransferProgressChangedEventArgs(WorksharedOperationProgressChangedEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def FinishedSize(self) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Location(self) -> str: ...
    @property
    def Speed(self) -> float: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...
    @property
    def TotalSize(self) -> float: ...
    @property
    def TransferMode(self) -> DataTransferMode: ...


class DocumentChangedEventArgs(RevitAPISingleEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Operation(self) -> UndoOperation: ...
    def GetDeletedElementIds(self) -> ICollection_1[ElementId]: ...
    def GetDocument(self) -> Document: ...
    def GetTransactionNames(self) -> IList_1[str]: ...
    # Skipped GetAddedElementIds due to it being static, abstract and generic.

    GetAddedElementIds : GetAddedElementIds_MethodGroup
    class GetAddedElementIds_MethodGroup:
        @typing.overload
        def __call__(self) -> ICollection_1[ElementId]:...
        @typing.overload
        def __call__(self, filter: ElementFilter) -> ICollection_1[ElementId]:...

    # Skipped GetModifiedElementIds due to it being static, abstract and generic.

    GetModifiedElementIds : GetModifiedElementIds_MethodGroup
    class GetModifiedElementIds_MethodGroup:
        @typing.overload
        def __call__(self) -> ICollection_1[ElementId]:...
        @typing.overload
        def __call__(self, filter: ElementFilter) -> ICollection_1[ElementId]:...



class DocumentClosedEventArgs(RevitAPIPostEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def DocumentId(self) -> int: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...


class DocumentClosingEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def DocumentId(self) -> int: ...
    @property
    def IsValidObject(self) -> bool: ...


class DocumentCreatedEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...


class DocumentCreatingEventArgs(RevitAPIPreEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def DocumentType(self) -> DocumentType: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Template(self) -> str: ...


class DocumentOpenedEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...


class DocumentOpeningEventArgs(RevitAPIPreEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def DocumentType(self) -> DocumentType: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def PathName(self) -> str: ...


class DocumentPrintedEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...
    def GetFailedViewElementIds(self) -> IList_1[ElementId]: ...
    def GetPrintedViewElementIds(self) -> IList_1[ElementId]: ...


class DocumentPrintingEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    def GetSettings(self) -> IPrintSetting: ...
    def GetViewElementIds(self) -> IList_1[ElementId]: ...


class DocumentReloadedLatestEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Location(self) -> str: ...
    @Location.setter
    def Location(self, value: str) -> str: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...


class DocumentReloadingLatestEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...


class DocumentReloadLatestProgressChangedEventArgs(DataTransferProgressChangedEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def FinishedSize(self) -> float: ...
    @property
    def IsMerging(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Location(self) -> str: ...
    @property
    def ReloadLatestFinished(self) -> bool: ...
    @property
    def RetryTimes(self) -> int: ...
    @property
    def Speed(self) -> float: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...
    @property
    def TotalSize(self) -> float: ...
    @property
    def TransferMode(self) -> DataTransferMode: ...


class DocumentSavedAsEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsSavingAsCentralFile(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def OriginalPath(self) -> str: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...


class DocumentSavedEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...


class DocumentSaveToCentralProgressChangedEventArgs(DataTransferProgressChangedEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def FailureDueToConflicts(self) -> bool: ...
    @property
    def FinishedSize(self) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Location(self) -> str: ...
    @property
    def RetryTimes(self) -> int: ...
    @property
    def SaveToCentralFinished(self) -> bool: ...
    @property
    def Speed(self) -> float: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...
    @property
    def TotalSize(self) -> float: ...
    @property
    def TransferMode(self) -> DataTransferMode: ...


class DocumentSaveToLocalProgressChangedEventArgs(WorksharedOperationProgressChangedEventArgs):
    @property
    def BeforeSaveToCentral(self) -> bool: ...
    @property
    def Cancellable(self) -> bool: ...
    @property
    def FinishedStreams(self) -> int: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Location(self) -> str: ...
    @property
    def SaveToLocalFinished(self) -> bool: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...
    @property
    def TotalStreams(self) -> int: ...


class DocumentSavingAsEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsSavingAsCentralFile(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def PathName(self) -> str: ...


class DocumentSavingEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...


class DocumentSynchronizedWithCentralEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...


class DocumentSynchronizingWithCentralEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Comments(self) -> str: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Location(self) -> str: ...
    @property
    def Options(self) -> SynchronizeWithCentralOptions: ...


class DocumentWorksharingEnabledEventArgs(RevitAPISingleEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    def GetDocument(self) -> Document: ...


class ElementTypeDuplicatedEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def NewElementTypeId(self) -> ElementId: ...
    @property
    def NewName(self) -> str: ...
    @property
    def OriginalElementTypeId(self) -> ElementId: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...


class ElementTypeDuplicatingEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def ElementTypeId(self) -> ElementId: ...
    @property
    def IsValidObject(self) -> bool: ...


class EventStatus(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Succeeded : EventStatus # 0
    Cancelled : EventStatus # 1
    Failed : EventStatus # -1


class ExternalDataInstanceAddedIntoDocumentEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def ItemId(self) -> str: ...
    @property
    def NewInstanceId(self) -> ElementId: ...
    @property
    def ProjectId(self) -> str: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...
    @property
    def TypeId(self) -> ElementId: ...


class ExternalDataInstanceAddingIntoDocumentEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def TypeId(self) -> ElementId: ...


class ExternalDataInstanceRemovedFromDocumentEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...
    @property
    def TypeId(self) -> ElementId: ...


class ExternalDataInstanceRemovingFromDocumentEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def InstanceId(self) -> ElementId: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def TypeId(self) -> ElementId: ...


class ExternalDataTypeServerFailureResolutionExecutingEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...


class FailuresProcessingEventArgs(RevitAPISingleEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    def GetFailuresAccessor(self) -> FailuresAccessor: ...
    def GetProcessingResult(self) -> FailureProcessingResult: ...
    def SetProcessingResult(self, result: FailureProcessingResult) -> None: ...


class FamilyLoadedIntoDocumentEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def FamilyPath(self) -> str: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def NewFamilyId(self) -> ElementId: ...
    @property
    def OriginalFamilyId(self) -> ElementId: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...


class FamilyLoadingIntoDocumentEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def FamilyPath(self) -> str: ...
    @property
    def IsValidObject(self) -> bool: ...


class FileExportedEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Format(self) -> ImportExportFileFormat: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Path(self) -> str: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...


class FileExportingEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Format(self) -> ImportExportFileFormat: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Path(self) -> str: ...


class FileImportedEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Format(self) -> ImportExportFileFormat: ...
    @property
    def ImportedInstanceId(self) -> ElementId: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Path(self) -> str: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...


class FileImportingEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Format(self) -> ImportExportFileFormat: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Path(self) -> str: ...


class LinkedResourceOpenedEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LinkedResourcePathName(self) -> str: ...
    @property
    def ResourceType(self) -> ExternalResourceType: ...
    @property
    def ResourceTypeId(self) -> ElementId: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...


class LinkedResourceOpeningEventArgs(RevitAPIPreEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LinkedResourcePathName(self) -> str: ...
    @property
    def ResourceType(self) -> ExternalResourceType: ...


class PostDocEventArgs(PostEventArgs):
    @property
    def Cancel(self) -> bool: ...
    @Cancel.setter
    def Cancel(self, value: bool) -> bool: ...
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Status(self) -> EventStatus: ...


class PostEventArgs(RevitEventArgs):
    @property
    def Cancel(self) -> bool: ...
    @Cancel.setter
    def Cancel(self, value: bool) -> bool: ...
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Status(self) -> EventStatus: ...


class PreDocEventArgs(PreEventArgs):
    @property
    def Cancel(self) -> bool: ...
    @Cancel.setter
    def Cancel(self, value: bool) -> bool: ...
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...


class PreEventArgs(RevitEventArgs):
    @property
    def Cancel(self) -> bool: ...
    @Cancel.setter
    def Cancel(self, value: bool) -> bool: ...
    @property
    def Cancellable(self) -> bool: ...


class ProgressChangedEventArgs(RevitAPISingleEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Caption(self) -> str: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LowerRange(self) -> int: ...
    @property
    def Position(self) -> int: ...
    @property
    def Stage(self) -> ProgressStage: ...
    @property
    def UpperRange(self) -> int: ...
    def Cancel(self) -> None: ...


class ProgressStage(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Started : ProgressStage # 0
    RangeChanged : ProgressStage # 1
    PositionChanged : ProgressStage # 2
    CaptionChanged : ProgressStage # 3
    Unchanged : ProgressStage # 4
    Finished : ProgressStage # 5


class RevitAPIEventArgs(EventArgs, IDisposable):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    def Dispose(self) -> None: ...
    def IsCancelled(self) -> bool: ...


class RevitAPIEventStatus(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Succeeded : RevitAPIEventStatus # 0
    Cancelled : RevitAPIEventStatus # 1
    Failed : RevitAPIEventStatus # -1


class RevitAPIPostDocEventArgs(RevitAPIPostEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...


class RevitAPIPostEventArgs(RevitAPIEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...


class RevitAPIPreDocEventArgs(RevitAPIPreEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...


class RevitAPIPreEventArgs(RevitAPIEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    def Cancel(self) -> None: ...


class RevitAPISingleEventArgs(RevitAPIEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...


class RevitEventArgs(EventArgs):
    @property
    def Cancel(self) -> bool: ...
    @Cancel.setter
    def Cancel(self, value: bool) -> bool: ...
    @property
    def Cancellable(self) -> bool: ...


class UndoOperation(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    TransactionCommitted : UndoOperation # 0
    TransactionRolledBack : UndoOperation # 1
    TransactionGroupRolledBack : UndoOperation # 2
    TransactionUndone : UndoOperation # 3
    TransactionRedone : UndoOperation # 4


class ViewExportedEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...
    @property
    def ViewId(self) -> ElementId: ...


class ViewExportingEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def ViewId(self) -> ElementId: ...


class ViewPrintedEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Index(self) -> int: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...
    @property
    def TotalViews(self) -> int: ...
    @property
    def View(self) -> View: ...


class ViewPrintingEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Index(self) -> int: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def TotalViews(self) -> int: ...
    @property
    def View(self) -> View: ...
    def GetSettings(self) -> IPrintSetting: ...


class ViewsExportedByContextEventArgs(RevitAPIPostDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...
    def GetViewIds(self) -> IList_1[ElementId]: ...


class ViewsExportingByContextEventArgs(RevitAPIPreDocEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def Document(self) -> Document: ...
    @property
    def IsValidObject(self) -> bool: ...
    def GetViewIds(self) -> IList_1[ElementId]: ...


class WorksharedOperationProgressChangedEventArgs(RevitAPISingleEventArgs):
    @property
    def Cancellable(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Location(self) -> str: ...
    @property
    def Status(self) -> RevitAPIEventStatus: ...

