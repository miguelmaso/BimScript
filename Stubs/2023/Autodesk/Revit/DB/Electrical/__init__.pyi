import typing, clr, abc
from System import IDisposable, Guid
from Autodesk.Revit.DB import ElementId, Element, BoundingBoxXYZ, Category, DesignOption, Document, GeometryElement, Location, Parameter, ParameterSet, ParameterMap, WorksetId, ConnectorManager, XYZ, MEPSystem, Level, MEPCurve, MEPSize, MEPCurveType, FamilySymbol, JunctionType, RoutingPreferenceManager, ConnectorProfileType, TableCellCombinedParameterData, APIObject, ElementType, MEPModel, SpatialElementDomainData, FamilyInstance, Connector, ElementSet, View, TableData, SectionType, TableSectionData, TableView, ViewDetailLevel, ViewDiscipline, DisplayStyle, BoundingBoxUV, PartsVisibility, SketchPlane, SunAndShadowSettings, TemporaryViewModes, ViewType
from System.Collections.Generic import ISet_1, IEnumerator_1, IEnumerable_1, IList_1, KeyValuePair_2, ICollection_1
from Autodesk.Revit.DB.Mechanical import ZoneElementDomainData
from System.Collections import IEnumerable, IEnumerator

class AnalyticalBusData(AnalyticalDistributionNodePropertyData):
    @property
    def CurrentRating(self) -> float: ...
    @CurrentRating.setter
    def CurrentRating(self, value: float) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def NumberOfPhases(self) -> int: ...
    @property
    def TotalConnectedCurrent(self) -> float: ...
    @property
    def Voltage(self) -> float: ...
    @Voltage.setter
    def Voltage(self, value: float) -> float: ...


class AnalyticalDistributionNodePropertyData(IDisposable):
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def NumberOfPhases(self) -> int: ...
    def Dispose(self) -> None: ...


class AnalyticalEquipmentLoadData(AnalyticalDistributionNodePropertyData):
    @property
    def ApparentLoad(self) -> float: ...
    @ApparentLoad.setter
    def ApparentLoad(self, value: float) -> float: ...
    @property
    def Current(self) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LoadClassification(self) -> ElementId: ...
    @LoadClassification.setter
    def LoadClassification(self, value: ElementId) -> ElementId: ...
    @property
    def LoadType(self) -> ElectricalLoadType: ...
    @property
    def NumberOfPhases(self) -> int: ...
    @property
    def PowerFactor(self) -> float: ...
    @PowerFactor.setter
    def PowerFactor(self, value: float) -> float: ...
    @property
    def TrueLoad(self) -> float: ...
    @property
    def Voltage(self) -> float: ...
    @Voltage.setter
    def Voltage(self, value: float) -> float: ...


class AnalyticalPowerSourceData(AnalyticalDistributionNodePropertyData):
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def NumberOfPhases(self) -> int: ...
    @property
    def TotalConnectedCurrent(self) -> float: ...
    @property
    def Voltage(self) -> float: ...
    @Voltage.setter
    def Voltage(self, value: float) -> float: ...


class AnalyticalTransferSwitchData(AnalyticalDistributionNodePropertyData):
    @property
    def CurrentRating(self) -> float: ...
    @CurrentRating.setter
    def CurrentRating(self, value: float) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def NumberOfPhases(self) -> int: ...
    @property
    def TotalConnectedCurrent(self) -> float: ...
    @property
    def Voltage(self) -> float: ...
    @Voltage.setter
    def Voltage(self, value: float) -> float: ...


class AreaBasedLoadBoundaryLineData(IDisposable):
    @property
    def BottomLevelId(self) -> ElementId: ...
    @BottomLevelId.setter
    def BottomLevelId(self, value: ElementId) -> ElementId: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def TopLevelId(self) -> ElementId: ...
    @TopLevelId.setter
    def TopLevelId(self, value: ElementId) -> ElementId: ...
    def Dispose(self) -> None: ...
    def GetLevelIdsInRange(self) -> ISet_1[ElementId]: ...
    def IsElevationWithinRange(self, elev: float) -> bool: ...
    def IsLevelWithinRange(self, levelId: ElementId) -> bool: ...


class AreaBasedLoadData(ZoneElementDomainData):
    @property
    def ApparentLoad(self) -> float: ...
    @property
    def ApparentPowerDensity(self) -> float: ...
    @property
    def AreaBasedLoadType(self) -> ElementId: ...
    @AreaBasedLoadType.setter
    def AreaBasedLoadType(self, value: ElementId) -> ElementId: ...
    @property
    def Current(self) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LoadClassification(self) -> ElementId: ...
    @property
    def LoadDensity(self) -> float: ...
    @property
    def LoadType(self) -> ElectricalLoadType: ...
    @property
    def PhasesNumber(self) -> int: ...
    @property
    def PowerFactor(self) -> float: ...
    @property
    def TrueLoad(self) -> float: ...
    @property
    def Voltage(self) -> float: ...
    @Voltage.setter
    def Voltage(self, value: float) -> float: ...
    def AddElectricalLoadArea(self, electricalLoadAreaId: ElementId) -> None: ...
    def GetElectricalLoadAreas(self) -> ISet_1[ElementId]: ...
    def RemoveElectricalLoadArea(self, electricalLoadAreaId: ElementId) -> None: ...


class AreaBasedLoadType(Element):
    @property
    def ApparentPowerDensity(self) -> float: ...
    @ApparentPowerDensity.setter
    def ApparentPowerDensity(self, value: float) -> float: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LoadClassification(self) -> ElementId: ...
    @LoadClassification.setter
    def LoadClassification(self, value: ElementId) -> ElementId: ...
    @property
    def LoadDensity(self) -> float: ...
    @LoadDensity.setter
    def LoadDensity(self, value: float) -> float: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def PowerFactor(self) -> float: ...
    @PowerFactor.setter
    def PowerFactor(self, value: float) -> float: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(document: Document, name: str) -> AreaBasedLoadType: ...


class CableTray(CableTrayConduitBase):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def CurveNormal(self) -> XYZ: ...
    @CurveNormal.setter
    def CurveNormal(self, value: XYZ) -> XYZ: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Diameter(self) -> float: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Height(self) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LevelOffset(self) -> float: ...
    @LevelOffset.setter
    def LevelOffset(self, value: float) -> float: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MEPSystem(self) -> MEPSystem: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ReferenceLevel(self) -> Level: ...
    @ReferenceLevel.setter
    def ReferenceLevel(self, value: Level) -> Level: ...
    @property
    def RungSpace(self) -> float: ...
    @RungSpace.setter
    def RungSpace(self, value: float) -> float: ...
    @property
    def RunId(self) -> ElementId: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Width(self) -> float: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(document: Document, cabletrayType: ElementId, startPoint: XYZ, endPoint: XYZ, levelId: ElementId) -> CableTray: ...
    def GetShapeType(self) -> CableTrayShape: ...
    @staticmethod
    def IsValidCableTrayType(document: Document, cabletrayType: ElementId) -> bool: ...
    def IsValidRungSpace(self, rungSpace: float) -> bool: ...


class CableTrayConduitBase(MEPCurve):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Diameter(self) -> float: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Height(self) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LevelOffset(self) -> float: ...
    @LevelOffset.setter
    def LevelOffset(self, value: float) -> float: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MEPSystem(self) -> MEPSystem: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ReferenceLevel(self) -> Level: ...
    @ReferenceLevel.setter
    def ReferenceLevel(self, value: Level) -> Level: ...
    @property
    def RunId(self) -> ElementId: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Width(self) -> float: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def IsValidEndPoints(startPoint: XYZ, endPoint: XYZ) -> bool: ...
    @staticmethod
    def IsValidLevelId(document: Document, levelId: ElementId) -> bool: ...
    def IsWithFitting(self) -> bool: ...


class CableTrayConduitRunBase(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Length(self) -> float: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class CableTrayRun(CableTrayConduitRunBase):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Length(self) -> float: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class CableTraySettings(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorSeparator(self) -> str: ...
    @ConnectorSeparator.setter
    def ConnectorSeparator(self, value: str) -> str: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FittingAnnotationSize(self) -> float: ...
    @FittingAnnotationSize.setter
    def FittingAnnotationSize(self, value: float) -> float: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def RiseDropAnnotationSize(self) -> float: ...
    @RiseDropAnnotationSize.setter
    def RiseDropAnnotationSize(self, value: float) -> float: ...
    @property
    def SizeSeparator(self) -> str: ...
    @SizeSeparator.setter
    def SizeSeparator(self, value: str) -> str: ...
    @property
    def SizeSuffix(self) -> str: ...
    @SizeSuffix.setter
    def SizeSuffix(self, value: str) -> str: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def UseAnnotationScaleForSingleLineFittings(self) -> bool: ...
    @UseAnnotationScaleForSingleLineFittings.setter
    def UseAnnotationScaleForSingleLineFittings(self, value: bool) -> bool: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def GetCableTraySettings(document: Document) -> CableTraySettings: ...


class CableTrayShape(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Invalid : CableTrayShape # 0
    Channel : CableTrayShape # 1
    Ladder : CableTrayShape # 2


class CableTraySizeIterator(IEnumerator_1[MEPSize]):
    @property
    def Current(self) -> MEPSize: ...
    @property
    def IsValidObject(self) -> bool: ...
    def Dispose(self) -> None: ...
    def GetCurrent(self) -> MEPSize: ...
    def HasCurrent(self) -> bool: ...
    def IsDone(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class CableTraySizes(Element, IEnumerable_1[MEPSize]):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddSize(self, sizeInfo: MEPSize) -> None: ...
    def ClearAll(self) -> None: ...
    def Contains(self, nominalDiameter: float) -> bool: ...
    @staticmethod
    def GetCableTraySizes(aDoc: Document) -> CableTraySizes: ...
    def GetCableTraySizesIterator(self) -> CableTraySizeIterator: ...
    def GetEnumerator(self) -> IEnumerator_1[MEPSize]: ...
    def GetSizeCount(self) -> int: ...
    def RemoveSize(self, sizeInfo: MEPSize) -> None: ...


class CableTrayType(MEPCurveType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BendMultiplier(self) -> float: ...
    @BendMultiplier.setter
    def BendMultiplier(self, value: float) -> float: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def Cross(self) -> FamilySymbol: ...
    @Cross.setter
    def Cross(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Elbow(self) -> FamilySymbol: ...
    @Elbow.setter
    def Elbow(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def IsWithFitting(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MultiShapeTransition(self) -> FamilySymbol: ...
    @MultiShapeTransition.setter
    def MultiShapeTransition(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def PreferredJunctionType(self) -> JunctionType: ...
    @PreferredJunctionType.setter
    def PreferredJunctionType(self, value: JunctionType) -> JunctionType: ...
    @property
    def Roughness(self) -> float: ...
    @Roughness.setter
    def Roughness(self, value: float) -> float: ...
    @property
    def RoutingPreferenceManager(self) -> RoutingPreferenceManager: ...
    @property
    def Shape(self) -> ConnectorProfileType: ...
    @property
    def ShapeType(self) -> CableTrayShape: ...
    @property
    def Tap(self) -> FamilySymbol: ...
    @Tap.setter
    def Tap(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Tee(self) -> FamilySymbol: ...
    @Tee.setter
    def Tee(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Transition(self) -> FamilySymbol: ...
    @Transition.setter
    def Transition(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Union(self) -> FamilySymbol: ...
    @Union.setter
    def Union(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def IsValidBendMultiplier(self, bendMultiplier: float) -> bool: ...


class CapitalizationForLoadNames(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    SourceParameters : CapitalizationForLoadNames # 0
    Initial : CapitalizationForLoadNames # 1
    Sentence : CapitalizationForLoadNames # 2
    Upper : CapitalizationForLoadNames # 3


class CircuitConnectionType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    NotApplicable : CircuitConnectionType # 0
    Breaker : CircuitConnectionType # 1
    FeedThruLugs : CircuitConnectionType # 2


class CircuitLoadCalculationMethod(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    SumTrueLoadAndReactiveLoad : CircuitLoadCalculationMethod # 0
    SumApparentLoad : CircuitLoadCalculationMethod # 1


class CircuitNaming(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Prefixed : CircuitNaming # 0
    Standard : CircuitNaming # 1
    PanelName : CircuitNaming # 2
    Phase : CircuitNaming # 3
    ProjectSetting : CircuitNaming # 4
    Customized : CircuitNaming # 5
    Undefined : CircuitNaming # -1


class CircuitNamingScheme(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(document: Document, name: str, data: IList_1[TableCellCombinedParameterData]) -> CircuitNamingScheme: ...
    def GetCombinedParameters(self) -> IList_1[TableCellCombinedParameterData]: ...
    @staticmethod
    def IsNameUnique(aDocument: Document, name: str) -> bool: ...
    @staticmethod
    def IsValidCombinedParameters(aDocument: Document, data: IList_1[TableCellCombinedParameterData]) -> bool: ...
    def SetCombinedParameters(self, data: IList_1[TableCellCombinedParameterData]) -> None: ...


class CircuitNamingSchemeSettings(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CircuitNamingSchemeId(self) -> ElementId: ...
    @CircuitNamingSchemeId.setter
    def CircuitNamingSchemeId(self, value: ElementId) -> ElementId: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def GetCircuitNamingSchemeSettings(cda: Document) -> CircuitNamingSchemeSettings: ...
    @staticmethod
    def IsValidCircuitNamingSchemeId(aDocument: Document, circuitNamingSchemeId: ElementId) -> bool: ...


class CircuitNumberingOption(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Default : CircuitNumberingOption # 0
    Continuous : CircuitNumberingOption # 1


class CircuitSequence(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Numerical : CircuitSequence # 0
    GroupByPhase : CircuitSequence # 1
    OddThenEven : CircuitSequence # 2


class CircuitType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Circuit : CircuitType # 0
    Spare : CircuitType # 1
    Space : CircuitType # 2


class Conduit(CableTrayConduitBase):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Diameter(self) -> float: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Height(self) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LevelOffset(self) -> float: ...
    @LevelOffset.setter
    def LevelOffset(self, value: float) -> float: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MEPSystem(self) -> MEPSystem: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ReferenceLevel(self) -> Level: ...
    @ReferenceLevel.setter
    def ReferenceLevel(self, value: Level) -> Level: ...
    @property
    def RunId(self) -> ElementId: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Width(self) -> float: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(document: Document, conduitType: ElementId, startPoint: XYZ, endPoint: XYZ, levelId: ElementId) -> Conduit: ...
    @staticmethod
    def IsValidConduitType(document: Document, conduitType: ElementId) -> bool: ...


class ConduitRun(CableTrayConduitRunBase):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Length(self) -> float: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class ConduitSettings(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorSeparator(self) -> str: ...
    @ConnectorSeparator.setter
    def ConnectorSeparator(self, value: str) -> str: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FittingAnnotationSize(self) -> float: ...
    @FittingAnnotationSize.setter
    def FittingAnnotationSize(self, value: float) -> float: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def RiseDropAnnotationSize(self) -> float: ...
    @RiseDropAnnotationSize.setter
    def RiseDropAnnotationSize(self, value: float) -> float: ...
    @property
    def SizePrefix(self) -> str: ...
    @SizePrefix.setter
    def SizePrefix(self, value: str) -> str: ...
    @property
    def SizeSuffix(self) -> str: ...
    @SizeSuffix.setter
    def SizeSuffix(self, value: str) -> str: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def UseAnnotationScaleForSingleLineFittings(self) -> bool: ...
    @UseAnnotationScaleForSingleLineFittings.setter
    def UseAnnotationScaleForSingleLineFittings(self, value: bool) -> bool: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def GetConduitSettings(document: Document) -> ConduitSettings: ...


class ConduitSize(IDisposable):
    def __init__(self, nominalDiameter: float, innerDiameter: float, outerDiameter: float, bendRadius: float, usedInSizeLists: bool, usedInSizing: bool) -> None: ...
    @property
    def BendRadius(self) -> float: ...
    @property
    def InnerDiameter(self) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def NominalDiameter(self) -> float: ...
    @property
    def OuterDiameter(self) -> float: ...
    @property
    def UsedInSizeLists(self) -> bool: ...
    @property
    def UsedInSizing(self) -> bool: ...
    def Dispose(self) -> None: ...


class ConduitSizeIterator(IEnumerator_1[ConduitSize]):
    @property
    def Current(self) -> ConduitSize: ...
    @property
    def IsValidObject(self) -> bool: ...
    def Dispose(self) -> None: ...
    def GetCurrent(self) -> ConduitSize: ...
    def HasCurrent(self) -> bool: ...
    def IsDone(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class ConduitSizes(IEnumerable_1[ConduitSize], IDisposable):
    @property
    def Count(self) -> int: ...
    @property
    def IsValidObject(self) -> bool: ...
    def Contains(self, nominalDiameter: float) -> bool: ...
    def Dispose(self) -> None: ...
    def GetConduitSizesIterator(self) -> ConduitSizeIterator: ...
    def GetEnumerator(self) -> IEnumerator_1[ConduitSize]: ...


class ConduitSizeSettingIterator(IEnumerator_1[KeyValuePair_2[str, ConduitSizes]]):
    @property
    def Current(self) -> KeyValuePair_2[str, ConduitSizes]: ...
    @property
    def IsValidObject(self) -> bool: ...
    def Dispose(self) -> None: ...
    def HasCurrent(self) -> bool: ...
    def IsDone(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class ConduitSizeSettings(Element, IEnumerable_1[KeyValuePair_2[str, ConduitSizes]]):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddSize(self, standardName: str, sizeInfo: ConduitSize) -> None: ...
    def CreateConduitStandardTypeFromExisingStandardType(self, pADoc: Document, newStandardName: str, existingStandardName: str) -> bool: ...
    def DoesConduitStandardTypeExist(self, standardName: str) -> bool: ...
    @staticmethod
    def GetConduitSizeSettings(aDoc: Document) -> ConduitSizeSettings: ...
    def GetConduitSizeSettingsIterator(self) -> ConduitSizeSettingIterator: ...
    def GetEnumerator(self) -> IEnumerator_1[KeyValuePair_2[str, ConduitSizes]]: ...
    def GetSizeCount(self, standardName: str) -> int: ...
    def RemoveConduitStandardType(self, pADoc: Document, standardName: str) -> bool: ...
    def RemoveSize(self, standardName: str, nominalDiameter: float) -> None: ...


class ConduitType(MEPCurveType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def Cross(self) -> FamilySymbol: ...
    @Cross.setter
    def Cross(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Elbow(self) -> FamilySymbol: ...
    @Elbow.setter
    def Elbow(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def IsWithFitting(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MultiShapeTransition(self) -> FamilySymbol: ...
    @MultiShapeTransition.setter
    def MultiShapeTransition(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def PreferredJunctionType(self) -> JunctionType: ...
    @PreferredJunctionType.setter
    def PreferredJunctionType(self, value: JunctionType) -> JunctionType: ...
    @property
    def Roughness(self) -> float: ...
    @Roughness.setter
    def Roughness(self, value: float) -> float: ...
    @property
    def RoutingPreferenceManager(self) -> RoutingPreferenceManager: ...
    @property
    def Shape(self) -> ConnectorProfileType: ...
    @property
    def Tap(self) -> FamilySymbol: ...
    @Tap.setter
    def Tap(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Tee(self) -> FamilySymbol: ...
    @Tee.setter
    def Tee(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Transition(self) -> FamilySymbol: ...
    @Transition.setter
    def Transition(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Union(self) -> FamilySymbol: ...
    @Union.setter
    def Union(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class CorrectionFactor(APIObject):
    @property
    def Factor(self) -> float: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def GetTemperature(self) -> float: ...


class CorrectionFactorSet(APIObject, IEnumerable):
    def __init__(self) -> None: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Size(self) -> int: ...
    def Clear(self) -> None: ...
    def Contains(self, item: CorrectionFactor) -> bool: ...
    def Erase(self, item: CorrectionFactor) -> int: ...
    def ForwardIterator(self) -> CorrectionFactorSetIterator: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def Insert(self, item: CorrectionFactor) -> bool: ...
    def ReverseIterator(self) -> CorrectionFactorSetIterator: ...


class CorrectionFactorSetIterator(APIObject, IEnumerator, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def Current(self) -> typing.Any: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class DistributionSysType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def ElectricalPhase(self) -> ElectricalPhase: ...
    @ElectricalPhase.setter
    def ElectricalPhase(self, value: ElectricalPhase) -> ElectricalPhase: ...
    @property
    def ElectricalPhaseConfiguration(self) -> ElectricalPhaseConfiguration: ...
    @ElectricalPhaseConfiguration.setter
    def ElectricalPhaseConfiguration(self, value: ElectricalPhaseConfiguration) -> ElectricalPhaseConfiguration: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsInUse(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def NumWires(self) -> int: ...
    @NumWires.setter
    def NumWires(self, value: int) -> int: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def VoltageLineToGround(self) -> VoltageType: ...
    @VoltageLineToGround.setter
    def VoltageLineToGround(self, value: VoltageType) -> VoltageType: ...
    @property
    def VoltageLineToLine(self) -> VoltageType: ...
    @VoltageLineToLine.setter
    def VoltageLineToLine(self, value: VoltageType) -> VoltageType: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class DistributionSysTypeSet(APIObject, IEnumerable):
    def __init__(self) -> None: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Size(self) -> int: ...
    def Clear(self) -> None: ...
    def Contains(self, item: DistributionSysType) -> bool: ...
    def Erase(self, item: DistributionSysType) -> int: ...
    def ForwardIterator(self) -> DistributionSysTypeSetIterator: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def Insert(self, item: DistributionSysType) -> bool: ...
    def ReverseIterator(self) -> DistributionSysTypeSetIterator: ...


class DistributionSysTypeSetIterator(APIObject, IEnumerator, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def Current(self) -> typing.Any: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class ElectricalAnalyticalNode(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def NodeType(self) -> ElectricalAnalyticalNodeType: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def TotalLoad(self) -> float: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def CanConnectToUpstreamNode(self, upstreamNodeId: ElementId) -> bool: ...
    def CanDisconnectFromUpstreamNode(self, upstreamNodeId: ElementId) -> bool: ...
    def ConnectToUpstreamNode(self, upstreamNodeId: ElementId) -> None: ...
    @staticmethod
    def Create(document: Document, type: ElectricalAnalyticalNodeType, name: str) -> ElectricalAnalyticalNode: ...
    def DisconnectFromUpstreamNode(self, upstreamNodeId: ElementId) -> None: ...
    def GetAnalyticalPropertyData(self) -> AnalyticalDistributionNodePropertyData: ...
    def GetDownstreamNodeIds(self) -> IList_1[ElementId]: ...
    def GetUpstreamNodeIds(self) -> IList_1[ElementId]: ...


class ElectricalAnalyticalNodeType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    PowerSource : ElectricalAnalyticalNodeType # 0
    Bus : ElectricalAnalyticalNodeType # 1
    Transformer : ElectricalAnalyticalNodeType # 2
    TransferSwitch : ElectricalAnalyticalNodeType # 3
    EquipmentLoad : ElectricalAnalyticalNodeType # 4


class ElectricalCircuitPathMode(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Custom : ElectricalCircuitPathMode # 0
    FarthestDevice : ElectricalCircuitPathMode # 1
    AllDevices : ElectricalCircuitPathMode # 2


class ElectricalDemandFactorDefinition(Element):
    def __init__(self) -> None: ...
    @property
    def AdditionalLoad(self) -> float: ...
    @AdditionalLoad.setter
    def AdditionalLoad(self, value: float) -> float: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IncludeAdditionalLoad(self) -> bool: ...
    @IncludeAdditionalLoad.setter
    def IncludeAdditionalLoad(self, value: bool) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def RuleType(self) -> ElectricalDemandFactorRule: ...
    @RuleType.setter
    def RuleType(self, value: ElectricalDemandFactorRule) -> ElectricalDemandFactorRule: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddValue(self, dfValue: ElectricalDemandFactorValue) -> None: ...
    def ClearValues(self) -> None: ...
    @staticmethod
    def Create(ADoc: Document, strName: str) -> ElectricalDemandFactorDefinition: ...
    def GetApplicableDemandFactor(self, numberOrLoad: float) -> float: ...
    def GetValues(self) -> ICollection_1[ElectricalDemandFactorValue]: ...
    def GetValuesCount(self) -> int: ...
    def RemoveValue(self, dfValue: ElectricalDemandFactorValue) -> None: ...
    def SetValues(self, values: ICollection_1[ElectricalDemandFactorValue]) -> None: ...


class ElectricalDemandFactorRule(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Constant : ElectricalDemandFactorRule # 0
    QuantityTable : ElectricalDemandFactorRule # 1
    LoadTable : ElectricalDemandFactorRule # 2
    QuantityTablePerPortion : ElectricalDemandFactorRule # 3
    LoadTablePerPortion : ElectricalDemandFactorRule # 4


class ElectricalDemandFactorValue(IDisposable):
    @typing.overload
    def __init__(self) -> None: ...
    @typing.overload
    def __init__(self, minRange: float, maxRange: float, factor: float) -> None: ...
    @property
    def Factor(self) -> float: ...
    @Factor.setter
    def Factor(self, value: float) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def MaxRange(self) -> float: ...
    @MaxRange.setter
    def MaxRange(self, value: float) -> float: ...
    @property
    def MinRange(self) -> float: ...
    @MinRange.setter
    def MinRange(self, value: float) -> float: ...
    def Dispose(self) -> None: ...
    def SetMaxRangeToUnlimited(self) -> None: ...


class ElectricalEquipment(MEPModel):
    @property
    def CircuitNamingSchemeId(self) -> ElementId: ...
    @CircuitNamingSchemeId.setter
    def CircuitNamingSchemeId(self, value: ElementId) -> ElementId: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def DistributionSystem(self) -> DistributionSysType: ...
    @DistributionSystem.setter
    def DistributionSystem(self, value: DistributionSysType) -> DistributionSysType: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def IsSwitchboard(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def MaxNumberOfCircuits(self) -> int: ...
    @MaxNumberOfCircuits.setter
    def MaxNumberOfCircuits(self, value: int) -> int: ...
    def GetCircuitNamingSchemeType(self) -> CircuitNaming: ...
    @staticmethod
    def IsValidCircuitNamingSchemeId(aDocument: Document, circuitNamingSchemeId: ElementId) -> bool: ...
    def IsValidDistributionSystem(self, distributionSystem: DistributionSysType) -> bool: ...
    def SetCircuitNamingSchemeType(self, circuitNamingType: CircuitNaming) -> None: ...


class ElectricalLoadAreaData(SpatialElementDomainData):
    @property
    def IsValidObject(self) -> bool: ...
    @staticmethod
    def CreateElectricalLoadAreas(doc: Document, levelId: ElementId, phaseId: ElementId) -> ISet_1[ElementId]: ...
    def GetAreaBasedLoadIds(self) -> ISet_1[ElementId]: ...
    @staticmethod
    def HasCircuitsWithoutElectricalLoadAreas(doc: Document, levelId: ElementId, phaseId: ElementId) -> bool: ...


class ElectricalLoadClassification(Element):
    @property
    def Abbreviation(self) -> str: ...
    @Abbreviation.setter
    def Abbreviation(self, value: str) -> str: ...
    @property
    def ActualElectricalLoadLabel(self) -> str: ...
    @ActualElectricalLoadLabel.setter
    def ActualElectricalLoadLabel(self, value: str) -> str: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemandFactorId(self) -> ElementId: ...
    @DemandFactorId.setter
    def DemandFactorId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LoadSummaryDemandFactorLabel(self) -> str: ...
    @LoadSummaryDemandFactorLabel.setter
    def LoadSummaryDemandFactorLabel(self, value: str) -> str: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Motor(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def PanelConnectedCurrentLabel(self) -> str: ...
    @PanelConnectedCurrentLabel.setter
    def PanelConnectedCurrentLabel(self, value: str) -> str: ...
    @property
    def PanelConnectedLabel(self) -> str: ...
    @PanelConnectedLabel.setter
    def PanelConnectedLabel(self, value: str) -> str: ...
    @property
    def PanelEstimatedCurrentLabel(self) -> str: ...
    @PanelEstimatedCurrentLabel.setter
    def PanelEstimatedCurrentLabel(self, value: str) -> str: ...
    @property
    def PanelEstimatedLabel(self) -> str: ...
    @PanelEstimatedLabel.setter
    def PanelEstimatedLabel(self, value: str) -> str: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def SpaceLoadClass(self) -> ElectricalLoadClassificationSpace: ...
    @SpaceLoadClass.setter
    def SpaceLoadClass(self, value: ElectricalLoadClassificationSpace) -> ElectricalLoadClassificationSpace: ...
    @property
    def Spare(self) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(ADoc: Document, strName: str) -> ElectricalLoadClassification: ...


class ElectricalLoadClassificationData(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Name : ElectricalLoadClassificationData # 0
    SpaceLoadClass : ElectricalLoadClassificationData # 1
    DemandFactor : ElectricalLoadClassificationData # 2
    LoadSummaryDemandFactorLabel : ElectricalLoadClassificationData # 3
    PanelConnectedLabel : ElectricalLoadClassificationData # 4
    PanelEstimatedLabel : ElectricalLoadClassificationData # 5
    PanelConnectedCurrentLabel : ElectricalLoadClassificationData # 6
    PanelEstimatedCurrentLabel : ElectricalLoadClassificationData # 7
    ActualElecLoadNameLabel : ElectricalLoadClassificationData # 8
    Abbreviation : ElectricalLoadClassificationData # 9


class ElectricalLoadClassificationSpace(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    None_ : ElectricalLoadClassificationSpace # 0
    Lighting : ElectricalLoadClassificationSpace # 1
    Power : ElectricalLoadClassificationSpace # 2


class ElectricalLoadType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    EquipmentLoad : ElectricalLoadType # 0
    AreaBasedLoad : ElectricalLoadType # 1


class ElectricalPhase(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    SinglePhase : ElectricalPhase # 0
    ThreePhase : ElectricalPhase # 1


class ElectricalPhaseConfiguration(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Undefined : ElectricalPhaseConfiguration # 0
    Wye : ElectricalPhaseConfiguration # 1
    Delta : ElectricalPhaseConfiguration # 2


class ElectricalSetting(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CircuitLoadCalculationMethod(self) -> CircuitLoadCalculationMethod: ...
    @CircuitLoadCalculationMethod.setter
    def CircuitLoadCalculationMethod(self, value: CircuitLoadCalculationMethod) -> CircuitLoadCalculationMethod: ...
    @property
    def CircuitNamePhaseA(self) -> str: ...
    @CircuitNamePhaseA.setter
    def CircuitNamePhaseA(self, value: str) -> str: ...
    @property
    def CircuitNamePhaseB(self) -> str: ...
    @CircuitNamePhaseB.setter
    def CircuitNamePhaseB(self, value: str) -> str: ...
    @property
    def CircuitNamePhaseC(self) -> str: ...
    @CircuitNamePhaseC.setter
    def CircuitNamePhaseC(self, value: str) -> str: ...
    @property
    def CircuitPathOffset(self) -> float: ...
    @CircuitPathOffset.setter
    def CircuitPathOffset(self, value: float) -> float: ...
    @property
    def CircuitRating(self) -> float: ...
    @CircuitRating.setter
    def CircuitRating(self, value: float) -> float: ...
    @property
    def CircuitSequence(self) -> CircuitSequence: ...
    @CircuitSequence.setter
    def CircuitSequence(self, value: CircuitSequence) -> CircuitSequence: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def DistributionSysTypes(self) -> DistributionSysTypeSet: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def VoltageTypes(self) -> VoltageTypeSet: ...
    @property
    def WireConduitTypes(self) -> WireConduitTypeSet: ...
    @property
    def WireMaterialTypes(self) -> WireMaterialTypeSet: ...
    @property
    def WireTypes(self) -> WireTypeSet: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddDistributionSysType(self, name: str, phase: ElectricalPhase, phaseConfig: ElectricalPhaseConfiguration, numWire: int, volLineToLine: VoltageType, volLineToGround: VoltageType) -> DistributionSysType: ...
    def AddVoltageType(self, name: str, actualValue: float, minValue: float, maxValue: float) -> VoltageType: ...
    def AddWireMaterialType(self, name: str, baseMaterial: WireMaterialType) -> WireMaterialType: ...
    def AddWireType(self, name: str, materialType: WireMaterialType, temperatureRating: TemperatureRatingType, insulation: InsulationType, maxSize: WireSize, neutralMultiplier: float, neutralRequired: bool, neutralMode: NeutralMode, conduit: WireConduitType) -> WireType: ...
    @staticmethod
    def GetCircuitNamingSchemeSettings(cda: Document) -> CircuitNamingSchemeSettings: ...
    @staticmethod
    def GetElectricalSettings(document: Document) -> ElectricalSetting: ...
    def GetSpecificFittingAngles(self) -> IList_1[float]: ...
    def GetSpecificFittingAngleStatus(self, angle: float) -> bool: ...
    def IsValidSpecificFittingAngle(self, angle: float) -> bool: ...
    def RemoveDistributionSysType(self, distributionSysType: DistributionSysType) -> None: ...
    def RemoveVoltageType(self, voltageType: VoltageType) -> None: ...
    def RemoveWireMaterialType(self, materialType: WireMaterialType) -> None: ...
    def RemoveWireType(self, wireType: WireType) -> None: ...
    def SetSpecificFittingAngleStatus(self, angle: float, bStatus: bool) -> None: ...


class ElectricalSystem(MEPSystem):
    @property
    def ApparentCurrent(self) -> float: ...
    @property
    def ApparentCurrentPhaseA(self) -> float: ...
    @property
    def ApparentCurrentPhaseB(self) -> float: ...
    @property
    def ApparentCurrentPhaseC(self) -> float: ...
    @property
    def ApparentLoad(self) -> float: ...
    @property
    def ApparentLoadPhaseA(self) -> float: ...
    @property
    def ApparentLoadPhaseB(self) -> float: ...
    @property
    def ApparentLoadPhaseC(self) -> float: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BalancedLoad(self) -> bool: ...
    @property
    def BaseEquipment(self) -> FamilyInstance: ...
    @property
    def BaseEquipmentConnector(self) -> Connector: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CircuitConnectionType(self) -> CircuitConnectionType: ...
    @CircuitConnectionType.setter
    def CircuitConnectionType(self, value: CircuitConnectionType) -> CircuitConnectionType: ...
    @property
    def CircuitNamingIndex(self) -> int: ...
    @property
    def CircuitNumber(self) -> str: ...
    @property
    def CircuitPathMode(self) -> ElectricalCircuitPathMode: ...
    @CircuitPathMode.setter
    def CircuitPathMode(self, value: ElectricalCircuitPathMode) -> ElectricalCircuitPathMode: ...
    @property
    def CircuitType(self) -> CircuitType: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Elements(self) -> ElementSet: ...
    @property
    def Frame(self) -> float: ...
    @Frame.setter
    def Frame(self, value: float) -> float: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroundConductorsNumber(self) -> int: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HasCustomCircuitPath(self) -> bool: ...
    @property
    def HasDesignParts(self) -> bool: ...
    @property
    def HasFabricationParts(self) -> bool: ...
    @property
    def HasPathOffset(self) -> bool: ...
    @property
    def HasPlaceholders(self) -> bool: ...
    @property
    def HotConductorsNumber(self) -> int: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsBasePanelFeedThroughLugsOccupied(self) -> bool: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsMultipleNetwork(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Length(self) -> float: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LoadClassificationAbbreviations(self) -> str: ...
    @property
    def LoadClassifications(self) -> str: ...
    @property
    def LoadName(self) -> str: ...
    @LoadName.setter
    def LoadName(self, value: str) -> str: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def NeutralConductorsNumber(self) -> int: ...
    @NeutralConductorsNumber.setter
    def NeutralConductorsNumber(self, value: int) -> int: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def PanelName(self) -> str: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def PathOffset(self) -> float: ...
    @PathOffset.setter
    def PathOffset(self, value: float) -> float: ...
    @property
    def PhaseLabel(self) -> str: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def PolesNumber(self) -> int: ...
    @property
    def PowerFactor(self) -> float: ...
    @property
    def PowerFactorState(self) -> PowerFactorStateType: ...
    @property
    def PressureLossOfCriticalPath(self) -> float: ...
    @property
    def Rating(self) -> float: ...
    @Rating.setter
    def Rating(self, value: float) -> float: ...
    @property
    def RunsNumber(self) -> int: ...
    @property
    def SectionsCount(self) -> int: ...
    @property
    def SlotIndex(self) -> str: ...
    @property
    def StartSlot(self) -> int: ...
    @property
    def SystemType(self) -> ElectricalSystemType: ...
    @property
    def TrueCurrent(self) -> float: ...
    @property
    def TrueCurrentPhaseA(self) -> float: ...
    @property
    def TrueCurrentPhaseB(self) -> float: ...
    @property
    def TrueCurrentPhaseC(self) -> float: ...
    @property
    def TrueLoad(self) -> float: ...
    @TrueLoad.setter
    def TrueLoad(self, value: float) -> float: ...
    @property
    def TrueLoadPhaseA(self) -> float: ...
    @property
    def TrueLoadPhaseB(self) -> float: ...
    @property
    def TrueLoadPhaseC(self) -> float: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Voltage(self) -> float: ...
    @property
    def VoltageDrop(self) -> float: ...
    @property
    def Ways(self) -> int: ...
    @property
    def WireSizeString(self) -> str: ...
    @property
    def WireType(self) -> WireType: ...
    @WireType.setter
    def WireType(self, value: WireType) -> WireType: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddToCircuit(self, components: ElementSet) -> bool: ...
    def DisconnectPanel(self) -> None: ...
    def GetCircuitPath(self) -> IList_1[XYZ]: ...
    def IsCircuitPathValid(self, nodes: IList_1[XYZ]) -> bool: ...
    def NewWires(self, view: View, wiringType: WiringType) -> WireSet: ...
    def RemoveFromCircuit(self, components: ElementSet) -> None: ...
    def SelectPanel(self, panel: FamilyInstance) -> None: ...
    def SetCircuitPath(self, nodes: IList_1[XYZ]) -> None: ...
    # Skipped Create due to it being static, abstract and generic.

    Create : Create_MethodGroup
    class Create_MethodGroup:
        @typing.overload
        def __call__(self, connector: Connector, elecSysType: ElectricalSystemType) -> ElectricalSystem:...
        @typing.overload
        def __call__(self, document: Document, electComponents: IList_1[ElementId], elecSysType: ElectricalSystemType) -> ElectricalSystem:...



class ElectricalSystemType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    UndefinedSystemType : ElectricalSystemType # 0
    Data : ElectricalSystemType # 5
    PowerCircuit : ElectricalSystemType # 6
    Telephone : ElectricalSystemType # 9
    Security : ElectricalSystemType # 10
    FireAlarm : ElectricalSystemType # 11
    NurseCall : ElectricalSystemType # 12
    Controls : ElectricalSystemType # 13
    Communication : ElectricalSystemType # 14
    PowerBalanced : ElectricalSystemType # 30
    PowerUnBalanced : ElectricalSystemType # 31


class GroundConductorSize(APIObject):
    @property
    def Ampacity(self) -> int: ...
    @property
    def ConductorSize(self) -> str: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def MaterialBelongTo(self) -> WireMaterialType: ...


class GroundConductorSizeSet(APIObject, IEnumerable):
    def __init__(self) -> None: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Size(self) -> int: ...
    def Clear(self) -> None: ...
    def Contains(self, item: GroundConductorSize) -> bool: ...
    def Erase(self, item: GroundConductorSize) -> int: ...
    def ForwardIterator(self) -> GroundConductorSizeSetIterator: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def Insert(self, item: GroundConductorSize) -> bool: ...
    def ReverseIterator(self) -> GroundConductorSizeSetIterator: ...


class GroundConductorSizeSetIterator(APIObject, IEnumerator, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def Current(self) -> typing.Any: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class InsulationType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsInUse(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class InsulationTypeSet(APIObject, IEnumerable):
    def __init__(self) -> None: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Size(self) -> int: ...
    def Clear(self) -> None: ...
    def Contains(self, item: InsulationType) -> bool: ...
    def Erase(self, item: InsulationType) -> int: ...
    def ForwardIterator(self) -> InsulationTypeSetIterator: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def Insert(self, item: InsulationType) -> bool: ...
    def ReverseIterator(self) -> InsulationTypeSetIterator: ...


class InsulationTypeSetIterator(APIObject, IEnumerator, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def Current(self) -> typing.Any: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class LightingDevice(MEPModel):
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...


class LightingFixture(MEPModel):
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...


class LoadClassification(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Undefined : LoadClassification # 0
    Power : LoadClassification # 1
    Lighting : LoadClassification # 2
    Hvac : LoadClassification # 3


class LoadClassificationType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Other : LoadClassificationType # 0
    Power : LoadClassificationType # 1
    Lighting : LoadClassificationType # 2
    HVAC : LoadClassificationType # 3


class NeutralMode(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    HotConductorSize : NeutralMode # 0
    UnbalancedCurrent : NeutralMode # 1


class PanelConfiguration(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    OneColumn : PanelConfiguration # 0
    TwoColumnsCircuitsAcross : PanelConfiguration # 1
    TwoColumnsCircuitsDown : PanelConfiguration # 2


class PanelScheduleData(TableData):
    @property
    def BodyShowsVerticalHeaders(self) -> bool: ...
    @property
    def BorderAroundSchedule(self) -> ElementId: ...
    @property
    def BorderAroundSections(self) -> ElementId: ...
    @property
    def FreezeColumnsAndRows(self) -> bool: ...
    @FreezeColumnsAndRows.setter
    def FreezeColumnsAndRows(self, value: bool) -> bool: ...
    @property
    def IsAutoShadingForLoadDisplay(self) -> bool: ...
    @IsAutoShadingForLoadDisplay.setter
    def IsAutoShadingForLoadDisplay(self, value: bool) -> bool: ...
    @property
    def IsFooterSectionHidden(self) -> bool: ...
    @property
    def IsHeaderSectionHidden(self) -> bool: ...
    @property
    def IsPanelSinglePhase(self) -> bool: ...
    @IsPanelSinglePhase.setter
    def IsPanelSinglePhase(self, value: bool) -> bool: ...
    @property
    def IsSummarySectionHidden(self) -> bool: ...
    @property
    def IsUnusedPhaseHidden(self) -> bool: ...
    @IsUnusedPhaseHidden.setter
    def IsUnusedPhaseHidden(self, value: bool) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def NumberOfSections(self) -> int: ...
    @property
    def NumberOfSlots(self) -> int: ...
    @property
    def PanelConfiguration(self) -> PanelConfiguration: ...
    @property
    def PhaseLoadType(self) -> PanelSchedulePhaseLoadType: ...
    @property
    def PhasesAsCurrents(self) -> bool: ...
    @property
    def ScheduleType(self) -> PanelScheduleType: ...
    @property
    def ShowCircuitNumberOnOneRowForMultiphaseCircuits(self) -> bool: ...
    @ShowCircuitNumberOnOneRowForMultiphaseCircuits.setter
    def ShowCircuitNumberOnOneRowForMultiphaseCircuits(self, value: bool) -> bool: ...
    @property
    def ShowMultipleRowsForMultiphaseCircuits(self) -> bool: ...
    @ShowMultipleRowsForMultiphaseCircuits.setter
    def ShowMultipleRowsForMultiphaseCircuits(self, value: bool) -> bool: ...
    @property
    def ShowSlotFromDeviceInsteadOfTemplate(self) -> bool: ...
    @ShowSlotFromDeviceInsteadOfTemplate.setter
    def ShowSlotFromDeviceInsteadOfTemplate(self, value: bool) -> bool: ...
    @property
    def SummaryShowsGroups(self) -> bool: ...
    @SummaryShowsGroups.setter
    def SummaryShowsGroups(self, value: bool) -> bool: ...
    @property
    def SummaryShowsOnlyConnectedLoads(self) -> bool: ...
    @SummaryShowsOnlyConnectedLoads.setter
    def SummaryShowsOnlyConnectedLoads(self, value: bool) -> bool: ...
    @property
    def SummaryShowsVerticalHeaders(self) -> bool: ...
    @property
    def Width(self) -> float: ...
    @Width.setter
    def Width(self, value: float) -> float: ...
    @property
    def WidthInPixels(self) -> int: ...
    @property
    def ZoomLevel(self) -> int: ...
    @ZoomLevel.setter
    def ZoomLevel(self, value: int) -> int: ...
    def AddLoadClassification(self, loadClassficationId: ElementId) -> bool: ...
    def GetLoadClassifications(self) -> IList_1[ElementId]: ...
    def GetNumberOfCircuitRows(self) -> int: ...
    def IsSymmetric(self) -> bool: ...
    def RemoveLoadClassification(self, nIndex: int) -> None: ...
    def SetBorderAroundSchedule(self, borderId: ElementId) -> None: ...
    def SetBorderAroundSections(self, borderId: ElementId) -> None: ...
    def SetLoadClassifications(self, loadClassificaions: IList_1[ElementId]) -> None: ...
    def UpdateCircuitTableForInstance(self, pPanel: FamilyInstance) -> None: ...
    def UpdateCircuitTableForTemplate(self, newType: PanelSchedulePhaseLoadType, nNumSlots: int, bPhasesAsCurrents: bool) -> None: ...
    def UpdateIsSectionHidden(self, sectionType: SectionType, bHide: bool) -> None: ...
    def UpdateLoadSummary(self) -> None: ...
    def UpdateVerticalHeadersInSection(self, sectionType: SectionType, bVertical: bool) -> None: ...


class PanelSchedulePhaseLoadType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    NoLoadInformation : PanelSchedulePhaseLoadType # 0
    LoadsByPhaseInSplitColumns : PanelSchedulePhaseLoadType # 1
    MirroredPhaseColumns : PanelSchedulePhaseLoadType # 2
    LoadsByPhaseInSharedColumns : PanelSchedulePhaseLoadType # 3
    LoadsByPhase : PanelSchedulePhaseLoadType # 4
    TotalLoadOnlyPerCircuit : PanelSchedulePhaseLoadType # 5
    SeperatePhaseLoadsPerCircuit : PanelSchedulePhaseLoadType # 6


class PanelScheduleSheetInstance(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def Origin(self) -> XYZ: ...
    @Origin.setter
    def Origin(self, value: XYZ) -> XYZ: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ScheduleId(self) -> ElementId: ...
    @ScheduleId.setter
    def ScheduleId(self, value: ElementId) -> ElementId: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(ADoc: Document, scheduleId: ElementId, DBView: View) -> PanelScheduleSheetInstance: ...
    def GetSchedule(self) -> PanelScheduleView: ...
    def SplitSegment(self, iSeg: int) -> bool: ...


class PanelScheduleTemplate(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsBranchPanelSchedule(self) -> bool: ...
    @property
    def IsDataPanelSchedule(self) -> bool: ...
    @property
    def IsDefault(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsSwitchboardSchedule(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def CopyFrom(self, OtherADoc: Document, otherElem: PanelScheduleTemplate) -> None: ...
    @staticmethod
    def Create(document: Document, type: PanelScheduleType, config: PanelConfiguration, strName: str) -> PanelScheduleTemplate: ...
    def GetPanelScheduleType(self) -> PanelScheduleType: ...
    def GetSectionData(self, sectionType: SectionType) -> TableSectionData: ...
    def GetTableData(self) -> PanelScheduleData: ...
    def HasSameType(self, otherTemplate: PanelScheduleTemplate) -> bool: ...
    @staticmethod
    def IsValidPanelConfiguration(scheduleType: PanelScheduleType, configuration: PanelConfiguration) -> bool: ...
    @staticmethod
    def IsValidType(panelScheduleType: PanelScheduleType) -> bool: ...
    def SetTableData(self, Data: PanelScheduleData) -> None: ...


class PanelScheduleType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Branch : PanelScheduleType # 0
    Switchboard : PanelScheduleType # 1
    Data : PanelScheduleType # 2
    Unknown : PanelScheduleType # -1


class PanelScheduleView(TableView):
    @property
    def AnalysisDisplayStyleId(self) -> ElementId: ...
    @AnalysisDisplayStyleId.setter
    def AnalysisDisplayStyleId(self, value: ElementId) -> ElementId: ...
    @property
    def AreAnalyticalModelCategoriesHidden(self) -> bool: ...
    @AreAnalyticalModelCategoriesHidden.setter
    def AreAnalyticalModelCategoriesHidden(self, value: bool) -> bool: ...
    @property
    def AreAnnotationCategoriesHidden(self) -> bool: ...
    @AreAnnotationCategoriesHidden.setter
    def AreAnnotationCategoriesHidden(self, value: bool) -> bool: ...
    @property
    def AreCoordinationModelHandlesHidden(self) -> bool: ...
    @AreCoordinationModelHandlesHidden.setter
    def AreCoordinationModelHandlesHidden(self, value: bool) -> bool: ...
    @property
    def AreImportCategoriesHidden(self) -> bool: ...
    @AreImportCategoriesHidden.setter
    def AreImportCategoriesHidden(self, value: bool) -> bool: ...
    @property
    def AreModelCategoriesHidden(self) -> bool: ...
    @AreModelCategoriesHidden.setter
    def AreModelCategoriesHidden(self, value: bool) -> bool: ...
    @property
    def ArePointCloudsHidden(self) -> bool: ...
    @ArePointCloudsHidden.setter
    def ArePointCloudsHidden(self, value: bool) -> bool: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def AssociatedAssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBePrinted(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def CropBox(self) -> BoundingBoxXYZ: ...
    @CropBox.setter
    def CropBox(self, value: BoundingBoxXYZ) -> BoundingBoxXYZ: ...
    @property
    def CropBoxActive(self) -> bool: ...
    @CropBoxActive.setter
    def CropBoxActive(self, value: bool) -> bool: ...
    @property
    def CropBoxVisible(self) -> bool: ...
    @CropBoxVisible.setter
    def CropBoxVisible(self, value: bool) -> bool: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def DetailLevel(self) -> ViewDetailLevel: ...
    @DetailLevel.setter
    def DetailLevel(self, value: ViewDetailLevel) -> ViewDetailLevel: ...
    @property
    def Discipline(self) -> ViewDiscipline: ...
    @Discipline.setter
    def Discipline(self, value: ViewDiscipline) -> ViewDiscipline: ...
    @property
    def DisplayStyle(self) -> DisplayStyle: ...
    @DisplayStyle.setter
    def DisplayStyle(self, value: DisplayStyle) -> DisplayStyle: ...
    @property
    def Document(self) -> Document: ...
    @property
    def GenLevel(self) -> Level: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsAssemblyView(self) -> bool: ...
    @property
    def IsCallout(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTemplate(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MaximumColumnWidth(self) -> int: ...
    @property
    def MaximumGridWidth(self) -> int: ...
    @property
    def MaximumRowHeight(self) -> int: ...
    @property
    def MinimumColumnWidth(self) -> int: ...
    @property
    def MinimumRowHeight(self) -> int: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def Origin(self) -> XYZ: ...
    @property
    def Outline(self) -> BoundingBoxUV: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def PartsVisibility(self) -> PartsVisibility: ...
    @PartsVisibility.setter
    def PartsVisibility(self, value: PartsVisibility) -> PartsVisibility: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def RevealConstraintsMode(self) -> bool: ...
    @RevealConstraintsMode.setter
    def RevealConstraintsMode(self, value: bool) -> bool: ...
    @property
    def RightDirection(self) -> XYZ: ...
    @property
    def Scale(self) -> int: ...
    @Scale.setter
    def Scale(self, value: int) -> int: ...
    @property
    def ShadowIntensity(self) -> int: ...
    @ShadowIntensity.setter
    def ShadowIntensity(self, value: int) -> int: ...
    @property
    def SketchPlane(self) -> SketchPlane: ...
    @SketchPlane.setter
    def SketchPlane(self, value: SketchPlane) -> SketchPlane: ...
    @property
    def SunAndShadowSettings(self) -> SunAndShadowSettings: ...
    @property
    def SunlightIntensity(self) -> int: ...
    @SunlightIntensity.setter
    def SunlightIntensity(self, value: int) -> int: ...
    @property
    def TargetId(self) -> ElementId: ...
    @TargetId.setter
    def TargetId(self, value: ElementId) -> ElementId: ...
    @property
    def TemporaryViewModes(self) -> TemporaryViewModes: ...
    @property
    def Title(self) -> str: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def UpDirection(self) -> XYZ: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewDirection(self) -> XYZ: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def ViewTemplateId(self) -> ElementId: ...
    @ViewTemplateId.setter
    def ViewTemplateId(self, value: ElementId) -> ElementId: ...
    @property
    def ViewType(self) -> ViewType: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddSpace(self, nRow: int, nCol: int) -> None: ...
    def AddSpare(self, nRow: int, nCol: int) -> None: ...
    def CanMoveSlotTo(self, nMovingRow: int, nMovingCol: int, nToRow: int, nToCol: int) -> bool: ...
    def GenerateInstanceFromTemplate(self, templateId: ElementId) -> None: ...
    def GetApparentPhaseValue(self, circuitId: ElementId, apparentLoadParam: ElementId) -> float: ...
    def GetCellsBySlotNumber(self, nSlotNumber: int, RowArr: clr.Reference[IList_1[int]], ColArr: clr.Reference[IList_1[int]]) -> None: ...
    def GetCircuitByCell(self, nRow: int, nCol: int) -> ElectricalSystem: ...
    def GetCircuitIdByCell(self, nRow: int, nCol: int) -> ElementId: ...
    def GetCombinedParamValue(self, sectionType: SectionType, nRow: int, nCol: int) -> str: ...
    def GetLoadClassificationConnectedCurrent(self, nRow: int, nCol: int) -> str: ...
    def GetLoadClassificationConnectedLoad(self, nRow: int, nCol: int) -> str: ...
    def GetLoadClassificationDemandCurrent(self, nRow: int, nCol: int) -> str: ...
    def GetLoadClassificationDemandFactor(self, nRow: int, nCol: int) -> str: ...
    def GetLoadClassificationDemandLoad(self, nRow: int, nCol: int) -> str: ...
    def GetLoadClassificationId(self, nRow: int) -> ElementId: ...
    def GetLoadClassificationName(self, nRow: int, nCol: int) -> str: ...
    def GetLoadClassificationParamValue(self, parameterId: ElementId, nRow: int, nCol: int) -> str: ...
    def GetPanel(self) -> ElementId: ...
    def GetParamValue(self, sectionType: SectionType, nRow: int, nCol: int) -> str: ...
    def GetSectionData(self, sectionType: SectionType) -> TableSectionData: ...
    def GetSlotNumberByCell(self, nRow: int, nCol: int) -> int: ...
    def GetSpareCurrentValue(self, row: int, column: int, idCurrentParameter: ElementId) -> float: ...
    def GetSpareLoadValue(self, row: int, column: int, idLoadParameter: ElementId) -> float: ...
    def GetTableData(self) -> PanelScheduleData: ...
    def GetTemplate(self) -> ElementId: ...
    def IsCellInPhaseLoads(self, nRow: int, nCol: int) -> bool: ...
    def IsColumnInLoadSummary(self, nCol: int) -> bool: ...
    def IsPanelScheduleTemplate(self) -> bool: ...
    def IsRowInCircuitTable(self, nRow: int) -> bool: ...
    def IsSlotGrouped(self, nRow: int, nCol: int) -> int: ...
    def IsSlotLocked(self, nRow: int, nCol: int) -> bool: ...
    def IsSpace(self, nRow: int, nCol: int) -> bool: ...
    def IsSpare(self, nRow: int, nCol: int) -> bool: ...
    def MoveSlotTo(self, nMovingRow: int, nMovingCol: int, nToRow: int, nToCol: int) -> None: ...
    def RemoveSpace(self, nRow: int, nCol: int) -> None: ...
    def RemoveSpare(self, nRow: int, nCol: int) -> None: ...
    def RenumberIndexes(self) -> None: ...
    def SetLockSlot(self, nRow: int, nCol: int, bLock: bool) -> None: ...
    def SetParamValue(self, sectionType: SectionType, nRow: int, nCol: int, sValue: str) -> bool: ...
    def SetSpareCurrentValue(self, row: int, column: int, idCurrentParameter: ElementId, value: float) -> None: ...
    def SetSpareLoadValue(self, row: int, column: int, idLoadParameter: ElementId, value: float) -> None: ...
    def SwitchPhases(self, nRow: int, nCol: int) -> None: ...
    # Skipped CreateInstanceView due to it being static, abstract and generic.

    CreateInstanceView : CreateInstanceView_MethodGroup
    class CreateInstanceView_MethodGroup:
        @typing.overload
        def __call__(self, ADoc: Document, panelId: ElementId) -> PanelScheduleView:...
        @typing.overload
        def __call__(self, ADoc: Document, templateId: ElementId, panelId: ElementId) -> PanelScheduleView:...



class PowerFactorStateType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Leading : PowerFactorStateType # 0
    Lagging : PowerFactorStateType # 1


class TemperatureRatingType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CorrectionFactors(self) -> CorrectionFactorSet: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def InsulationTypes(self) -> InsulationTypeSet: ...
    @property
    def IsInUse(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MaterialType(self) -> WireMaterialType: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WireSizes(self) -> WireSizeSet: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddCorrectionFactor(self, temperature: float, factor: float) -> CorrectionFactor: ...
    def AddInsulationType(self, name: str) -> InsulationType: ...
    def AddWireSize(self, size: str, ampacity: int, diameter: float) -> WireSize: ...
    def RemoveCorrectionFactor(self, correctionFactor: CorrectionFactor) -> None: ...
    def RemoveInsulationType(self, insulationType: InsulationType) -> None: ...
    def RemoveWireSize(self, wireSize: WireSize) -> None: ...


class TemperatureRatingTypeSet(APIObject, IEnumerable):
    def __init__(self) -> None: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Size(self) -> int: ...
    def Clear(self) -> None: ...
    def Contains(self, item: TemperatureRatingType) -> bool: ...
    def Erase(self, item: TemperatureRatingType) -> int: ...
    def ForwardIterator(self) -> TemperatureRatingTypeSetIterator: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def Insert(self, item: TemperatureRatingType) -> bool: ...
    def ReverseIterator(self) -> TemperatureRatingTypeSetIterator: ...


class TemperatureRatingTypeSetIterator(APIObject, IEnumerator, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def Current(self) -> typing.Any: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class VoltageType(ElementType):
    @property
    def ActualValue(self) -> float: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsInUse(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MaxValue(self) -> float: ...
    @property
    def MinValue(self) -> float: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def SetVoltageValue(self, actualValue: float, minValue: float, maxValue: float) -> None: ...


class VoltageTypeSet(APIObject, IEnumerable):
    def __init__(self) -> None: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Size(self) -> int: ...
    def Clear(self) -> None: ...
    def Contains(self, item: VoltageType) -> bool: ...
    def Erase(self, item: VoltageType) -> int: ...
    def ForwardIterator(self) -> VoltageTypeSetIterator: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def Insert(self, item: VoltageType) -> bool: ...
    def ReverseIterator(self) -> VoltageTypeSetIterator: ...


class VoltageTypeSetIterator(APIObject, IEnumerator, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def Current(self) -> typing.Any: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class Wire(MEPCurve):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Diameter(self) -> float: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroundConductorNum(self) -> int: ...
    @GroundConductorNum.setter
    def GroundConductorNum(self, value: int) -> int: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Height(self) -> float: ...
    @property
    def HotConductorNum(self) -> int: ...
    @HotConductorNum.setter
    def HotConductorNum(self, value: int) -> int: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LevelOffset(self) -> float: ...
    @LevelOffset.setter
    def LevelOffset(self, value: float) -> float: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MEPSystem(self) -> MEPSystem: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def NeutralConductorNum(self) -> int: ...
    @NeutralConductorNum.setter
    def NeutralConductorNum(self, value: int) -> int: ...
    @property
    def NumberOfVertices(self) -> int: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ReferenceLevel(self) -> Level: ...
    @ReferenceLevel.setter
    def ReferenceLevel(self, value: Level) -> Level: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Width(self) -> float: ...
    @property
    def WiringType(self) -> WiringType: ...
    @WiringType.setter
    def WiringType(self, value: WiringType) -> WiringType: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AppendVertex(self, vertexPoint: XYZ) -> None: ...
    @staticmethod
    def AreVertexPointsValid(vertexPoints: IList_1[XYZ], startConnector: Connector, endConnector: Connector) -> bool: ...
    def ConnectTo(self, startConnectorTo: Connector, endConnectorTo: Connector) -> None: ...
    @staticmethod
    def Create(document: Document, wireTypeId: ElementId, viewId: ElementId, wiringType: WiringType, vertexPoints: IList_1[XYZ], startConnectorTo: Connector, endConnectorTo: Connector) -> Wire: ...
    def GetMEPSystems(self) -> IList_1[ElementId]: ...
    def GetVertex(self, index: int) -> XYZ: ...
    def InsertVertex(self, index: int, vertexPoint: XYZ) -> None: ...
    def IsVertexPointValid(self, vertexPoint: XYZ) -> bool: ...
    def RemoveVertex(self, index: int) -> None: ...
    def SetVertex(self, index: int, vertexPoint: XYZ) -> None: ...


class WireConduitType(APIObject):
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Name(self) -> str: ...


class WireConduitTypeSet(APIObject, IEnumerable):
    def __init__(self) -> None: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Size(self) -> int: ...
    def Clear(self) -> None: ...
    def Contains(self, item: WireConduitType) -> bool: ...
    def Erase(self, item: WireConduitType) -> int: ...
    def ForwardIterator(self) -> WireConduitTypeSetIterator: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def Insert(self, item: WireConduitType) -> bool: ...
    def ReverseIterator(self) -> WireConduitTypeSetIterator: ...


class WireConduitTypeSetIterator(APIObject, IEnumerator, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def Current(self) -> typing.Any: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class WireMaterialType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroundConductorSizes(self) -> GroundConductorSizeSet: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsInUse(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def TemperatureRatings(self) -> TemperatureRatingTypeSet: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddGroundConductorSize(self, ampacity: int, size: str) -> GroundConductorSize: ...
    def AddTemperatureRatingType(self, name: str, baseOn: TemperatureRatingType) -> TemperatureRatingType: ...
    def RemoveGroundConductorSize(self, grdConductorSize: GroundConductorSize) -> None: ...
    def RemoveTemperatureRatingType(self, temperatureRating: TemperatureRatingType) -> None: ...


class WireMaterialTypeSet(APIObject, IEnumerable):
    def __init__(self) -> None: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Size(self) -> int: ...
    def Clear(self) -> None: ...
    def Contains(self, item: WireMaterialType) -> bool: ...
    def Erase(self, item: WireMaterialType) -> int: ...
    def ForwardIterator(self) -> WireMaterialTypeSetIterator: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def Insert(self, item: WireMaterialType) -> bool: ...
    def ReverseIterator(self) -> WireMaterialTypeSetIterator: ...


class WireMaterialTypeSetIterator(APIObject, IEnumerator, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def Current(self) -> typing.Any: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class WireSet(APIObject, IEnumerable):
    def __init__(self) -> None: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Size(self) -> int: ...
    def Clear(self) -> None: ...
    def Contains(self, item: Wire) -> bool: ...
    def Erase(self, item: Wire) -> int: ...
    def ForwardIterator(self) -> WireSetIterator: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def Insert(self, item: Wire) -> bool: ...
    def ReverseIterator(self) -> WireSetIterator: ...


class WireSetIterator(APIObject, IEnumerator, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def Current(self) -> typing.Any: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class WireSize(APIObject):
    @property
    def Ampacity(self) -> int: ...
    @property
    def Diameter(self) -> float: ...
    @property
    def InUse(self) -> bool: ...
    @InUse.setter
    def InUse(self, value: bool) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Size(self) -> str: ...


class WireSizeSet(APIObject, IEnumerable):
    def __init__(self) -> None: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Size(self) -> int: ...
    def Clear(self) -> None: ...
    def Contains(self, item: WireSize) -> bool: ...
    def Erase(self, item: WireSize) -> int: ...
    def ForwardIterator(self) -> WireSizeSetIterator: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def Insert(self, item: WireSize) -> bool: ...
    def ReverseIterator(self) -> WireSizeSetIterator: ...


class WireSizeSetIterator(APIObject, IEnumerator, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def Current(self) -> typing.Any: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class WireType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def Conduit(self) -> WireConduitType: ...
    @Conduit.setter
    def Conduit(self, value: WireConduitType) -> WireConduitType: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def Insulation(self) -> InsulationType: ...
    @Insulation.setter
    def Insulation(self, value: InsulationType) -> InsulationType: ...
    @property
    def IsInUse(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MaxSize(self) -> WireSize: ...
    @MaxSize.setter
    def MaxSize(self, value: WireSize) -> WireSize: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def NeutralMultiplier(self) -> float: ...
    @NeutralMultiplier.setter
    def NeutralMultiplier(self, value: float) -> float: ...
    @property
    def NeutralRequired(self) -> bool: ...
    @NeutralRequired.setter
    def NeutralRequired(self, value: bool) -> bool: ...
    @property
    def NeutralSize(self) -> NeutralMode: ...
    @NeutralSize.setter
    def NeutralSize(self, value: NeutralMode) -> NeutralMode: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def TemperatureRating(self) -> TemperatureRatingType: ...
    @TemperatureRating.setter
    def TemperatureRating(self, value: TemperatureRatingType) -> TemperatureRatingType: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WireMaterial(self) -> WireMaterialType: ...
    @WireMaterial.setter
    def WireMaterial(self, value: WireMaterialType) -> WireMaterialType: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class WireTypeSet(APIObject, IEnumerable):
    def __init__(self) -> None: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Size(self) -> int: ...
    def Clear(self) -> None: ...
    def Contains(self, item: WireType) -> bool: ...
    def Erase(self, item: WireType) -> int: ...
    def ForwardIterator(self) -> WireTypeSetIterator: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def Insert(self, item: WireType) -> bool: ...
    def ReverseIterator(self) -> WireTypeSetIterator: ...


class WireTypeSetIterator(APIObject, IEnumerator, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def Current(self) -> typing.Any: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class WiringType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Arc : WiringType # 0
    Chamfer : WiringType # 1

