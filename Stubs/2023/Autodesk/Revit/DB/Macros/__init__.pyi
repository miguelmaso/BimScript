import typing, abc
from System import Attribute, ValueType, Guid
from Autodesk.Revit.ApplicationServices import Application, LanguageType, ProductType
from Autodesk.Revit.DB import AddInId, Color, CitySet, ViewDiscipline, DocumentSet, Document, ProjectLocation, View, DisplayUnit, FamilyManager, MassDisplayTemporaryOverrideType, MullionTypeSet, Family, PanelTypeSet, BindingMap, PhaseArray, PlanTopologySet, PlanTopology, PrintManager, ProjectInfo, ProjectLocationSet, Settings, SiteLocation, StorageType
from Autodesk.Revit.Creation import Application, Document, FamilyItemFactory

class AddInIdAttribute(Attribute):
    def __init__(self, addInIdStr: str) -> None: ...
    @property
    def TypeId(self) -> typing.Any: ...
    @property
    def Value(self) -> ValueType: ...


class ApplicationEntryPoint(Application, IEntryPoint, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def ActiveAddInId(self) -> AddInId: ...
    @property
    def AddinFolder(self) -> str: ...
    @property
    def AllowNavigationDuringRedraw(self) -> bool: ...
    @AllowNavigationDuringRedraw.setter
    def AllowNavigationDuringRedraw(self, value: bool) -> bool: ...
    @property
    def AllUsersAddinsLocation(self) -> str: ...
    @property
    def AngleTolerance(self) -> float: ...
    @property
    def BackgroundColor(self) -> Color: ...
    @BackgroundColor.setter
    def BackgroundColor(self, value: Color) -> Color: ...
    @property
    def Cities(self) -> CitySet: ...
    @property
    def Create(self) -> Application: ...
    @property
    def CurrentRevitServerAccelerator(self) -> str: ...
    @CurrentRevitServerAccelerator.setter
    def CurrentRevitServerAccelerator(self, value: str) -> str: ...
    @property
    def CurrentUserAddinsLocation(self) -> str: ...
    @property
    def CurrentUsersAddinsDataFolderPath(self) -> str: ...
    @property
    def CurrentUsersDataFolderPath(self) -> str: ...
    @property
    def DefaultIFCProjectTemplate(self) -> str: ...
    @property
    def DefaultProjectTemplate(self) -> str: ...
    @property
    def DefaultViewDiscipline(self) -> ViewDiscipline: ...
    @DefaultViewDiscipline.setter
    def DefaultViewDiscipline(self, value: ViewDiscipline) -> ViewDiscipline: ...
    @property
    def Documents(self) -> DocumentSet: ...
    @property
    def ExportIFCCategoryTable(self) -> str: ...
    @property
    def FamilyTemplatePath(self) -> str: ...
    @property
    def ImportIFCCategoryTable(self) -> str: ...
    @property
    def IsArchitectureEnabled(self) -> bool: ...
    @IsArchitectureEnabled.setter
    def IsArchitectureEnabled(self, value: bool) -> bool: ...
    @property
    def IsElectricalAnalysisEnabled(self) -> bool: ...
    @IsElectricalAnalysisEnabled.setter
    def IsElectricalAnalysisEnabled(self, value: bool) -> bool: ...
    @property
    def IsElectricalEnabled(self) -> bool: ...
    @IsElectricalEnabled.setter
    def IsElectricalEnabled(self, value: bool) -> bool: ...
    @property
    def IsEnergyAnalysisEnabled(self) -> bool: ...
    @IsEnergyAnalysisEnabled.setter
    def IsEnergyAnalysisEnabled(self, value: bool) -> bool: ...
    @property
    def IsInfrastructureEnabled(self) -> bool: ...
    @IsInfrastructureEnabled.setter
    def IsInfrastructureEnabled(self, value: bool) -> bool: ...
    @property
    def IsMassingEnabled(self) -> bool: ...
    @IsMassingEnabled.setter
    def IsMassingEnabled(self, value: bool) -> bool: ...
    @property
    def IsMechanicalAnalysisEnabled(self) -> bool: ...
    @IsMechanicalAnalysisEnabled.setter
    def IsMechanicalAnalysisEnabled(self, value: bool) -> bool: ...
    @property
    def IsMechanicalEnabled(self) -> bool: ...
    @IsMechanicalEnabled.setter
    def IsMechanicalEnabled(self, value: bool) -> bool: ...
    @property
    def IsPipingAnalysisEnabled(self) -> bool: ...
    @IsPipingAnalysisEnabled.setter
    def IsPipingAnalysisEnabled(self, value: bool) -> bool: ...
    @property
    def IsPipingEnabled(self) -> bool: ...
    @IsPipingEnabled.setter
    def IsPipingEnabled(self, value: bool) -> bool: ...
    @property
    def IsRouteAnalysisEnabled(self) -> bool: ...
    @IsRouteAnalysisEnabled.setter
    def IsRouteAnalysisEnabled(self, value: bool) -> bool: ...
    @property
    def IsStructuralAnalysisEnabled(self) -> bool: ...
    @IsStructuralAnalysisEnabled.setter
    def IsStructuralAnalysisEnabled(self, value: bool) -> bool: ...
    @property
    def IsStructureEnabled(self) -> bool: ...
    @IsStructureEnabled.setter
    def IsStructureEnabled(self, value: bool) -> bool: ...
    @property
    def IsSystemsEnabled(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Language(self) -> LanguageType: ...
    @property
    def LoginUserId(self) -> str: ...
    @property
    def PointCloudsRootPath(self) -> str: ...
    @property
    def Product(self) -> ProductType: ...
    @property
    def RecordingJournalFilename(self) -> str: ...
    @property
    def SharedParametersFilename(self) -> str: ...
    @SharedParametersFilename.setter
    def SharedParametersFilename(self, value: str) -> str: ...
    @property
    def ShortCurveTolerance(self) -> float: ...
    @property
    def ShowGraphicalOpenEndsAreaBasedLoadBoundaryDisconnects(self) -> bool: ...
    @ShowGraphicalOpenEndsAreaBasedLoadBoundaryDisconnects.setter
    def ShowGraphicalOpenEndsAreaBasedLoadBoundaryDisconnects(self, value: bool) -> bool: ...
    @property
    def ShowGraphicalWarningCableTrayConduitDisconnects(self) -> bool: ...
    @ShowGraphicalWarningCableTrayConduitDisconnects.setter
    def ShowGraphicalWarningCableTrayConduitDisconnects(self, value: bool) -> bool: ...
    @property
    def ShowGraphicalWarningDuctDisconnects(self) -> bool: ...
    @ShowGraphicalWarningDuctDisconnects.setter
    def ShowGraphicalWarningDuctDisconnects(self, value: bool) -> bool: ...
    @property
    def ShowGraphicalWarningElectricalDisconnects(self) -> bool: ...
    @ShowGraphicalWarningElectricalDisconnects.setter
    def ShowGraphicalWarningElectricalDisconnects(self, value: bool) -> bool: ...
    @property
    def ShowGraphicalWarningHangerDisconnects(self) -> bool: ...
    @ShowGraphicalWarningHangerDisconnects.setter
    def ShowGraphicalWarningHangerDisconnects(self, value: bool) -> bool: ...
    @property
    def ShowGraphicalWarningPipeDisconnects(self) -> bool: ...
    @ShowGraphicalWarningPipeDisconnects.setter
    def ShowGraphicalWarningPipeDisconnects(self, value: bool) -> bool: ...
    @property
    def SubVersionNumber(self) -> str: ...
    @property
    def SystemsAnalysisWorkfilesRootPath(self) -> str: ...
    @property
    def Username(self) -> str: ...
    @property
    def VersionBuild(self) -> str: ...
    @property
    def VersionName(self) -> str: ...
    @property
    def VersionNumber(self) -> str: ...
    @property
    def VertexTolerance(self) -> float: ...
    def FinishInitializationEO(self) -> None: ...
    def Initialize(self, obj: typing.Any, addinFolder: str) -> None: ...
    def OnShutdownEO(self) -> None: ...


class DocumentEntryPoint(Document, IEntryPoint, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def ActiveProjectLocation(self) -> ProjectLocation: ...
    @ActiveProjectLocation.setter
    def ActiveProjectLocation(self, value: ProjectLocation) -> ProjectLocation: ...
    @property
    def ActiveView(self) -> View: ...
    @property
    def AddinFolder(self) -> str: ...
    @property
    def Application(self) -> Application: ...
    @property
    def Create(self) -> Document: ...
    @property
    def DisplayUnitSystem(self) -> DisplayUnit: ...
    @property
    def FamilyCreate(self) -> FamilyItemFactory: ...
    @property
    def FamilyManager(self) -> FamilyManager: ...
    @property
    def IsDetached(self) -> bool: ...
    @property
    def IsFamilyDocument(self) -> bool: ...
    @property
    def IsLinked(self) -> bool: ...
    @property
    def IsModelInCloud(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsModified(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def IsReadOnlyFile(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def IsWorkshared(self) -> bool: ...
    @property
    def MassDisplayTemporaryOverride(self) -> MassDisplayTemporaryOverrideType: ...
    @MassDisplayTemporaryOverride.setter
    def MassDisplayTemporaryOverride(self, value: MassDisplayTemporaryOverrideType) -> MassDisplayTemporaryOverrideType: ...
    @property
    def MullionTypes(self) -> MullionTypeSet: ...
    @property
    def OwnerFamily(self) -> Family: ...
    @property
    def PanelTypes(self) -> PanelTypeSet: ...
    @property
    def ParameterBindings(self) -> BindingMap: ...
    @property
    def PathName(self) -> str: ...
    @property
    def Phases(self) -> PhaseArray: ...
    @property
    def PlanTopologies(self) -> PlanTopologySet: ...
    @property
    def PlanTopologies(self) -> PlanTopologySet: ...
    @property
    def PlanTopology(self) -> PlanTopology: ...
    @property
    def PlanTopology(self) -> PlanTopology: ...
    @property
    def PrintManager(self) -> PrintManager: ...
    @property
    def ProjectInformation(self) -> ProjectInfo: ...
    @property
    def ProjectLocations(self) -> ProjectLocationSet: ...
    @property
    def ReactionsAreUpToDate(self) -> bool: ...
    @property
    def Settings(self) -> Settings: ...
    @property
    def SiteLocation(self) -> SiteLocation: ...
    @property
    def Title(self) -> str: ...
    @property
    def TypeOfStorage(self) -> StorageType: ...
    @property
    def WorksharingCentralGUID(self) -> Guid: ...
    def FinishInitializationEO(self) -> None: ...
    def Initialize(self, obj: typing.Any, addinFolder: str) -> None: ...
    def OnShutdownEO(self) -> None: ...


class IEntryPoint(typing.Protocol):
    @property
    def AddinFolder(self) -> str: ...
    @abc.abstractmethod
    def FinishInitialization(self) -> None: ...
    @abc.abstractmethod
    def Initialize(self, obj: typing.Any, addinFolder: str) -> None: ...
    @abc.abstractmethod
    def OnShutdown(self) -> None: ...


class VendorIdAttribute(Attribute):
    def __init__(self, vendorIdStr: str) -> None: ...
    @property
    def TypeId(self) -> typing.Any: ...
    @property
    def Value(self) -> str: ...

