import typing
from System import IDisposable, Guid
from Autodesk.Revit.DB import ElementId, CeilingAndFloor, BoundingBoxXYZ, Category, DesignOption, Document, GeometryElement, Location, Parameter, ParameterSet, ParameterMap, WorksetId, CurveLoop, Element, Curve, ElementType, HostedSweep, Reference, HostedSweepType, Subelement, SpatialElement, Level, SpatialElementType, XYZ, ElementSlowFilter, SpatialElementTag, LinkElementId, SpatialElementTagOrientation, View, FamilySymbol, Family, SketchedStairsCurveData, Line, EditScope, LinkLoadResult, Outline, PolymeshFacet
from System.Collections.Generic import IList_1, ISet_1, ICollection_1
from Autodesk.Revit.DB.Structure import StructuralMaterialType

class BalusterInfo(IDisposable):
    @property
    def BalusterFamilyId(self) -> ElementId: ...
    @BalusterFamilyId.setter
    def BalusterFamilyId(self, value: ElementId) -> ElementId: ...
    @property
    def BaseOffset(self) -> float: ...
    @BaseOffset.setter
    def BaseOffset(self, value: float) -> float: ...
    @property
    def BaseReferenceName(self) -> str: ...
    @BaseReferenceName.setter
    def BaseReferenceName(self, value: str) -> str: ...
    @property
    def DistanceFromPreviousOrSpace(self) -> float: ...
    @DistanceFromPreviousOrSpace.setter
    def DistanceFromPreviousOrSpace(self, value: float) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def Offset(self) -> float: ...
    @Offset.setter
    def Offset(self, value: float) -> float: ...
    @property
    def TopOffset(self) -> float: ...
    @TopOffset.setter
    def TopOffset(self, value: float) -> float: ...
    @property
    def TopReferenceName(self) -> str: ...
    @TopReferenceName.setter
    def TopReferenceName(self, value: str) -> str: ...
    def Dispose(self) -> None: ...
    @staticmethod
    def GetReferenceNameForHost() -> str: ...
    @staticmethod
    def GetReferenceNameForTopRail() -> str: ...


class BalusterPattern(IDisposable):
    @property
    def BreakPattern(self) -> BreakPatternCondition: ...
    @BreakPattern.setter
    def BreakPattern(self, value: BreakPatternCondition) -> BreakPatternCondition: ...
    @property
    def DistributionJustification(self) -> PatternJustification: ...
    @DistributionJustification.setter
    def DistributionJustification(self, value: PatternJustification) -> PatternJustification: ...
    @property
    def EndSpace(self) -> float: ...
    @EndSpace.setter
    def EndSpace(self, value: float) -> float: ...
    @property
    def ExcessLengthFillBalusterId(self) -> ElementId: ...
    @ExcessLengthFillBalusterId.setter
    def ExcessLengthFillBalusterId(self, value: ElementId) -> ElementId: ...
    @property
    def ExcessLengthFillSpacing(self) -> float: ...
    @ExcessLengthFillSpacing.setter
    def ExcessLengthFillSpacing(self, value: float) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Length(self) -> float: ...
    @property
    def PatternAngle(self) -> float: ...
    @PatternAngle.setter
    def PatternAngle(self, value: float) -> float: ...
    def Dispose(self) -> None: ...
    def DuplicateBaluster(self, index: int) -> BalusterInfo: ...
    def GetBaluster(self, index: int) -> BalusterInfo: ...
    def GetBalusterCount(self) -> int: ...
    def RemoveBaluster(self, index: int) -> None: ...


class BalusterPlacement(IDisposable):
    @property
    def BalusterPattern(self) -> BalusterPattern: ...
    @property
    def BalusterPerTreadFamilyId(self) -> ElementId: ...
    @BalusterPerTreadFamilyId.setter
    def BalusterPerTreadFamilyId(self, value: ElementId) -> ElementId: ...
    @property
    def BalusterPerTreadNumber(self) -> int: ...
    @BalusterPerTreadNumber.setter
    def BalusterPerTreadNumber(self, value: int) -> int: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def PostPattern(self) -> PostPattern: ...
    @property
    def UseBalusterPerTreadOnStairs(self) -> bool: ...
    @UseBalusterPerTreadOnStairs.setter
    def UseBalusterPerTreadOnStairs(self, value: bool) -> bool: ...
    def Dispose(self) -> None: ...


class BreakCornerCondition(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    EachSegmentEnd : BreakCornerCondition # 0
    AnglesGreaterThan : BreakCornerCondition # 1
    Never : BreakCornerCondition # 2


class BreakPatternCondition(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    EachSegmentEnd : BreakPatternCondition # 0
    AnglesGreaterThan : BreakPatternCondition # 1
    Never : BreakPatternCondition # 2


class BuildingPad(CeilingAndFloor):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def AssociatedTopographySurfaceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HostId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(document: Document, buildingPadTypeId: ElementId, levelId: ElementId, curveLoops: IList_1[CurveLoop]) -> BuildingPad: ...
    def GetBoundary(self) -> IList_1[CurveLoop]: ...
    def SetBoundary(self, curveLoops: IList_1[CurveLoop]) -> None: ...


class ContinuousRail(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HostRailingId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Length(self) -> float: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def GetEndExtensionPath(self) -> IList_1[Curve]: ...
    def GetPath(self) -> IList_1[Curve]: ...
    def GetStartExtensionPath(self) -> IList_1[Curve]: ...
    def GetSupports(self) -> IList_1[ElementId]: ...


class ContinuousRailType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DefaultJoinOption(self) -> RailTypeDefaultJoinOption: ...
    @DefaultJoinOption.setter
    def DefaultJoinOption(self, value: RailTypeDefaultJoinOption) -> RailTypeDefaultJoinOption: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def EndOrTopExtensionLength(self) -> float: ...
    @EndOrTopExtensionLength.setter
    def EndOrTopExtensionLength(self, value: float) -> float: ...
    @property
    def EndOrTopExtensionStyle(self) -> RailExtensionStyle: ...
    @EndOrTopExtensionStyle.setter
    def EndOrTopExtensionStyle(self, value: RailExtensionStyle) -> RailExtensionStyle: ...
    @property
    def EndOrTopTermination(self) -> ElementId: ...
    @EndOrTopTermination.setter
    def EndOrTopTermination(self, value: ElementId) -> ElementId: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def FilletRadius(self) -> float: ...
    @FilletRadius.setter
    def FilletRadius(self, value: float) -> float: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HandClearance(self) -> float: ...
    @HandClearance.setter
    def HandClearance(self, value: float) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ProfileId(self) -> ElementId: ...
    @ProfileId.setter
    def ProfileId(self, value: ElementId) -> ElementId: ...
    @property
    def Projection(self) -> float: ...
    @property
    def StartOrBottomExtensionLength(self) -> float: ...
    @StartOrBottomExtensionLength.setter
    def StartOrBottomExtensionLength(self, value: float) -> float: ...
    @property
    def StartOrBottomExtensionStyle(self) -> RailExtensionStyle: ...
    @StartOrBottomExtensionStyle.setter
    def StartOrBottomExtensionStyle(self, value: RailExtensionStyle) -> RailExtensionStyle: ...
    @property
    def StartOrBottomTermination(self) -> ElementId: ...
    @StartOrBottomTermination.setter
    def StartOrBottomTermination(self, value: ElementId) -> ElementId: ...
    @property
    def Transition(self) -> RailTransitionOption: ...
    @Transition.setter
    def Transition(self, value: RailTransitionOption) -> RailTransitionOption: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class CutLineType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    SingleLine : CutLineType # 0
    DoubleLine : CutLineType # 1


class CutMarkSymbol(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    None_ : CutMarkSymbol # 0
    Zigzag : CutMarkSymbol # 1
    Curve : CutMarkSymbol # 2


class CutMarkType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def CutLineAngle(self) -> float: ...
    @CutLineAngle.setter
    def CutLineAngle(self, value: float) -> float: ...
    @property
    def CutLineDistance(self) -> float: ...
    @CutLineDistance.setter
    def CutLineDistance(self, value: float) -> float: ...
    @property
    def CutLineExtension(self) -> float: ...
    @CutLineExtension.setter
    def CutLineExtension(self, value: float) -> float: ...
    @property
    def CutLineType(self) -> CutLineType: ...
    @CutLineType.setter
    def CutLineType(self, value: CutLineType) -> CutLineType: ...
    @property
    def CutMarkSymbol(self) -> CutMarkSymbol: ...
    @CutMarkSymbol.setter
    def CutMarkSymbol(self, value: CutMarkSymbol) -> CutMarkSymbol: ...
    @property
    def CutMarkSymbolSize(self) -> float: ...
    @CutMarkSymbolSize.setter
    def CutMarkSymbolSize(self, value: float) -> float: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class Fascia(HostedSweep):
    @property
    def Angle(self) -> float: ...
    @Angle.setter
    def Angle(self, value: float) -> float: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FasciaType(self) -> FasciaType: ...
    @FasciaType.setter
    def FasciaType(self, value: FasciaType) -> FasciaType: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HorizontalFlipped(self) -> bool: ...
    @property
    def HorizontalOffset(self) -> float: ...
    @HorizontalOffset.setter
    def HorizontalOffset(self, value: float) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Length(self) -> float: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ReferenceCurve(self) -> Curve: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def VerticalFlipped(self) -> bool: ...
    @property
    def VerticalOffset(self) -> float: ...
    @VerticalOffset.setter
    def VerticalOffset(self, value: float) -> float: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddSegment(self, targetRef: Reference) -> None: ...


class FasciaType(HostedSweepType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class Gutter(HostedSweep):
    @property
    def Angle(self) -> float: ...
    @Angle.setter
    def Angle(self, value: float) -> float: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def GutterType(self) -> GutterType: ...
    @GutterType.setter
    def GutterType(self, value: GutterType) -> GutterType: ...
    @property
    def HorizontalFlipped(self) -> bool: ...
    @property
    def HorizontalOffset(self) -> float: ...
    @HorizontalOffset.setter
    def HorizontalOffset(self, value: float) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Length(self) -> float: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ReferenceCurve(self) -> Curve: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def VerticalFlipped(self) -> bool: ...
    @property
    def VerticalOffset(self) -> float: ...
    @VerticalOffset.setter
    def VerticalOffset(self, value: float) -> float: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddSegment(self, targetRef: Reference) -> None: ...


class GutterType(HostedSweepType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class HandRail(ContinuousRail):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HostRailingId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Length(self) -> float: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class HandRailPosition(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    None_ : HandRailPosition # 0
    Left : HandRailPosition # 1
    Right : HandRailPosition # 2
    LeftAndRight : HandRailPosition # 3


class HandRailType(ContinuousRailType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DefaultJoinOption(self) -> RailTypeDefaultJoinOption: ...
    @DefaultJoinOption.setter
    def DefaultJoinOption(self, value: RailTypeDefaultJoinOption) -> RailTypeDefaultJoinOption: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def EndOrTopExtensionLength(self) -> float: ...
    @EndOrTopExtensionLength.setter
    def EndOrTopExtensionLength(self, value: float) -> float: ...
    @property
    def EndOrTopExtensionStyle(self) -> RailExtensionStyle: ...
    @EndOrTopExtensionStyle.setter
    def EndOrTopExtensionStyle(self, value: RailExtensionStyle) -> RailExtensionStyle: ...
    @property
    def EndOrTopTermination(self) -> ElementId: ...
    @EndOrTopTermination.setter
    def EndOrTopTermination(self, value: ElementId) -> ElementId: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def FilletRadius(self) -> float: ...
    @FilletRadius.setter
    def FilletRadius(self, value: float) -> float: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HandClearance(self) -> float: ...
    @HandClearance.setter
    def HandClearance(self, value: float) -> float: ...
    @property
    def Height(self) -> float: ...
    @Height.setter
    def Height(self, value: float) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ProfileId(self) -> ElementId: ...
    @ProfileId.setter
    def ProfileId(self, value: ElementId) -> ElementId: ...
    @property
    def Projection(self) -> float: ...
    @property
    def StartOrBottomExtensionLength(self) -> float: ...
    @StartOrBottomExtensionLength.setter
    def StartOrBottomExtensionLength(self, value: float) -> float: ...
    @property
    def StartOrBottomExtensionStyle(self) -> RailExtensionStyle: ...
    @StartOrBottomExtensionStyle.setter
    def StartOrBottomExtensionStyle(self, value: RailExtensionStyle) -> RailExtensionStyle: ...
    @property
    def StartOrBottomTermination(self) -> ElementId: ...
    @StartOrBottomTermination.setter
    def StartOrBottomTermination(self, value: ElementId) -> ElementId: ...
    @property
    def SupportJustification(self) -> RailSupportJustification: ...
    @SupportJustification.setter
    def SupportJustification(self, value: RailSupportJustification) -> RailSupportJustification: ...
    @property
    def SupportLayout(self) -> RailSupportsLayout: ...
    @SupportLayout.setter
    def SupportLayout(self, value: RailSupportsLayout) -> RailSupportsLayout: ...
    @property
    def SupportNumber(self) -> int: ...
    @SupportNumber.setter
    def SupportNumber(self, value: int) -> int: ...
    @property
    def SupportSpacing(self) -> float: ...
    @SupportSpacing.setter
    def SupportSpacing(self, value: float) -> float: ...
    @property
    def SupportTypeId(self) -> ElementId: ...
    @SupportTypeId.setter
    def SupportTypeId(self, value: ElementId) -> ElementId: ...
    @property
    def Transition(self) -> RailTransitionOption: ...
    @Transition.setter
    def Transition(self, value: RailTransitionOption) -> RailTransitionOption: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class MultistoryStairs(Element):
    @property
    def ActualTreadDepth(self) -> float: ...
    @ActualTreadDepth.setter
    def ActualTreadDepth(self, value: float) -> float: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def StandardStairsId(self) -> ElementId: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def CanConnectLevel(self, levelId: ElementId) -> bool: ...
    def CanDisconnectLevel(self, levelId: ElementId) -> bool: ...
    def ConnectLevels(self, levelIds: ISet_1[ElementId]) -> None: ...
    @staticmethod
    def Create(stairs: Stairs) -> MultistoryStairs: ...
    def DisconnectLevels(self, levelIds: ISet_1[ElementId]) -> None: ...
    def GetAllConnectedLevels(self) -> ISet_1[ElementId]: ...
    def GetAllStairsIds(self) -> ISet_1[ElementId]: ...
    def GetStairsOnLevel(self, levelId: ElementId) -> Stairs: ...
    def GetStairsPlacementLevels(self, stairs: Stairs) -> ISet_1[ElementId]: ...
    @staticmethod
    def IsAcceptableForMultistoryStairs(stairs: Stairs) -> bool: ...
    def IsPinned(self, stairs: Stairs) -> bool: ...
    def Pin(self, levelId: ElementId) -> Stairs: ...
    def Unpin(self, levelId: ElementId) -> Stairs: ...


class NonContinuousRailInfo(IDisposable):
    @property
    def Height(self) -> float: ...
    @Height.setter
    def Height(self, value: float) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def MaterialId(self) -> ElementId: ...
    @MaterialId.setter
    def MaterialId(self, value: ElementId) -> ElementId: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def Offset(self) -> float: ...
    @Offset.setter
    def Offset(self, value: float) -> float: ...
    @property
    def ProfileId(self) -> ElementId: ...
    @ProfileId.setter
    def ProfileId(self, value: ElementId) -> ElementId: ...
    def Dispose(self) -> None: ...
    def IsValidNonContinuousRailHeight(self, height: float) -> bool: ...
    def IsValidNonContinuousRailMaterial(self, materialId: ElementId) -> bool: ...
    def IsValidNonContinuousRailName(self, name: str) -> bool: ...
    def IsValidNonContinuousRailProfile(self, profileId: ElementId) -> bool: ...


class NonContinuousRailStructure(IDisposable):
    @property
    def IsValidObject(self) -> bool: ...
    def AddNonContinuousRail(self, name: str, height: float, offset: float) -> NonContinuousRailInfo: ...
    def Dispose(self) -> None: ...
    def GetNonContinuousRail(self, index: int) -> NonContinuousRailInfo: ...
    def GetNonContinuousRailCount(self) -> int: ...
    def IsValidNonContinuousRailProfile(self, profileId: ElementId) -> bool: ...
    def RemoveNonContinuousRail(self, index: int) -> None: ...


class PatternJustification(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Beginning : PatternJustification # 0
    End : PatternJustification # 1
    Center : PatternJustification # 2
    SpreadPatternToFit : PatternJustification # 3


class PostPattern(IDisposable):
    @property
    def CornerPost(self) -> BalusterInfo: ...
    @property
    def CornerPostAngle(self) -> float: ...
    @CornerPostAngle.setter
    def CornerPostAngle(self, value: float) -> float: ...
    @property
    def CornerPostCondition(self) -> BreakCornerCondition: ...
    @CornerPostCondition.setter
    def CornerPostCondition(self, value: BreakCornerCondition) -> BreakCornerCondition: ...
    @property
    def EndPost(self) -> BalusterInfo: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def StartPost(self) -> BalusterInfo: ...
    def Dispose(self) -> None: ...


class RailAngledJoinOption(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    AddVerticalOrHorizontalSegments : RailAngledJoinOption # 0
    NoConnector : RailAngledJoinOption # 1


class RailConnectionOption(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Trim : RailConnectionOption # 0
    Weld : RailConnectionOption # 1


class RailExtensionStyle(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    None_ : RailExtensionStyle # 0
    Wall : RailExtensionStyle # 1
    Floor : RailExtensionStyle # 2
    Post : RailExtensionStyle # 3


class RailIndex(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Top : RailIndex # 0
    LeftPrimary : RailIndex # 1
    RightPrimary : RailIndex # 2
    LeftSecondary : RailIndex # 3
    RightSecondary : RailIndex # 4


class Railing(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanReset(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Flipped(self) -> bool: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HasHost(self) -> bool: ...
    @property
    def HostId(self) -> ElementId: ...
    @HostId.setter
    def HostId(self, value: ElementId) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsDefault(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def TopRail(self) -> ElementId: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def Flip(self) -> None: ...
    def GetHandRails(self) -> IList_1[ElementId]: ...
    def GetMultistoryStairsPlacementLevels(self) -> ISet_1[ElementId]: ...
    def GetPath(self) -> IList_1[Curve]: ...
    def GetSubelementOnLevel(self, levelId: ElementId) -> Subelement: ...
    @staticmethod
    def IsValidHostForNewRailing(document: Document, elementId: ElementId) -> bool: ...
    @staticmethod
    def IsValidPathForRailing(curveLoop: CurveLoop) -> bool: ...
    def RailingCanBeHostedByElement(self, hostId: ElementId) -> bool: ...
    def RemoveHost(self) -> None: ...
    def Reset(self) -> None: ...
    def ResetSupportPosition(self) -> None: ...
    def SetMultistoryStairsPlacementLevels(self, levelIds: ISet_1[ElementId]) -> None: ...
    def SetPath(self, curveLoop: CurveLoop) -> None: ...
    # Skipped Create due to it being static, abstract and generic.

    Create : Create_MethodGroup
    class Create_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, curveLoop: CurveLoop, railingTypeId: ElementId, baseLevelId: ElementId) -> Railing:...
        @typing.overload
        def __call__(self, document: Document, stairsOrRampId: ElementId, railingTypeId: ElementId, placePosition: RailingPlacementPosition) -> ICollection_1[ElementId]:...
        @typing.overload
        def __call__(self, document: Document, multistoryStairsId: ElementId, levelId: ElementId, railingTypeId: ElementId, placePosition: RailingPlacementPosition) -> ISet_1[ElementId]:...



class RailingHeightCorrectionOption(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    ByType : RailingHeightCorrectionOption # 0
    Custom : RailingHeightCorrectionOption # 1


class RailingPathCurveJoinOption(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    ByType : RailingPathCurveJoinOption # 0
    ExtendRailsToMeet : RailingPathCurveJoinOption # 1
    AddVerticalOrHorizontalSegments : RailingPathCurveJoinOption # 2
    NoConnector : RailingPathCurveJoinOption # 3


class RailingPlacementPosition(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Treads : RailingPlacementPosition # 0
    Stringer : RailingPlacementPosition # 1
    Undefined : RailingPlacementPosition # -1


class RailingSlopeOption(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    ByHost : RailingSlopeOption # 0
    Flat : RailingSlopeOption # 1
    Sloped : RailingSlopeOption # 2


class RailingType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BalusterPlacement(self) -> BalusterPlacement: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def PrimaryHandrailHeight(self) -> float: ...
    @property
    def PrimaryHandrailLateralOffset(self) -> float: ...
    @property
    def PrimaryHandRailPosition(self) -> HandRailPosition: ...
    @PrimaryHandRailPosition.setter
    def PrimaryHandRailPosition(self, value: HandRailPosition) -> HandRailPosition: ...
    @property
    def PrimaryHandrailType(self) -> ElementId: ...
    @PrimaryHandrailType.setter
    def PrimaryHandrailType(self, value: ElementId) -> ElementId: ...
    @property
    def RailStructure(self) -> NonContinuousRailStructure: ...
    @property
    def SecondaryHandrailHeight(self) -> float: ...
    @property
    def SecondaryHandrailLateralOffset(self) -> float: ...
    @property
    def SecondaryHandRailPosition(self) -> HandRailPosition: ...
    @SecondaryHandRailPosition.setter
    def SecondaryHandRailPosition(self, value: HandRailPosition) -> HandRailPosition: ...
    @property
    def SecondaryHandrailType(self) -> ElementId: ...
    @SecondaryHandrailType.setter
    def SecondaryHandrailType(self, value: ElementId) -> ElementId: ...
    @property
    def TopRailHeight(self) -> float: ...
    @TopRailHeight.setter
    def TopRailHeight(self, value: float) -> float: ...
    @property
    def TopRailType(self) -> ElementId: ...
    @TopRailType.setter
    def TopRailType(self, value: ElementId) -> ElementId: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class RailJoinOption(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Miter : RailJoinOption # 0
    Fillet : RailJoinOption # 1
    ByType : RailJoinOption # -1


class RailSupportJustification(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Begin : RailSupportJustification # 0
    Center : RailSupportJustification # 1
    End : RailSupportJustification # 2


class RailSupportsLayout(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    None_ : RailSupportsLayout # 0
    FixedDistance : RailSupportsLayout # 1
    AlignWithRailingPosts : RailSupportsLayout # 2
    FixedNumber : RailSupportsLayout # 3
    MaxSpacing : RailSupportsLayout # 4
    MinSpacing : RailSupportsLayout # 5


class RailTagentJoinOption(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    AddVerticalOrHorizontalSegments : RailTagentJoinOption # 0
    NoConnector : RailTagentJoinOption # 1
    ExtendRailsToMeet : RailTagentJoinOption # 2


class RailTransitionOption(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    None_ : RailTransitionOption # 0
    Gooseneck : RailTransitionOption # 1
    Simple : RailTransitionOption # 2


class RailTypeDefaultJoinOption(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Miter : RailTypeDefaultJoinOption # 0
    Fillet : RailTypeDefaultJoinOption # 1


class RiserToTreadConnectionOption(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    RiserBehindTread : RiserToTreadConnectionOption # 0
    TreadUnderRiser : RiserToTreadConnectionOption # 1
    JoinAll : RiserToTreadConnectionOption # 2


class Room(SpatialElement):
    @property
    def Area(self) -> float: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BaseOffset(self) -> float: ...
    @BaseOffset.setter
    def BaseOffset(self, value: float) -> float: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ClosedShell(self) -> GeometryElement: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Level(self) -> Level: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LimitOffset(self) -> float: ...
    @LimitOffset.setter
    def LimitOffset(self, value: float) -> float: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def Number(self) -> str: ...
    @Number.setter
    def Number(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Perimeter(self) -> float: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def SpatialElementType(self) -> SpatialElementType: ...
    @property
    def UnboundedHeight(self) -> float: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def UpperLimit(self) -> Level: ...
    @UpperLimit.setter
    def UpperLimit(self, value: Level) -> Level: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Volume(self) -> float: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def IsPointInRoom(self, point: XYZ) -> bool: ...
    def Unplace(self) -> None: ...


class RoomFilter(ElementSlowFilter):
    def __init__(self) -> None: ...
    @property
    def Inverted(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...


class RoomTag(SpatialElementTag):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HasElbow(self) -> bool: ...
    @property
    def HasLeader(self) -> bool: ...
    @HasLeader.setter
    def HasLeader(self, value: bool) -> bool: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsInRoom(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsOrphaned(self) -> bool: ...
    @property
    def IsTaggingLink(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LeaderElbow(self) -> XYZ: ...
    @LeaderElbow.setter
    def LeaderElbow(self, value: XYZ) -> XYZ: ...
    @property
    def LeaderEnd(self) -> XYZ: ...
    @LeaderEnd.setter
    def LeaderEnd(self, value: XYZ) -> XYZ: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def Room(self) -> Room: ...
    @property
    def RoomTagType(self) -> RoomTagType: ...
    @RoomTagType.setter
    def RoomTagType(self, value: RoomTagType) -> RoomTagType: ...
    @property
    def RotationAngle(self) -> float: ...
    @RotationAngle.setter
    def RotationAngle(self, value: float) -> float: ...
    @property
    def TaggedLocalRoomId(self) -> ElementId: ...
    @property
    def TaggedRoomId(self) -> LinkElementId: ...
    @property
    def TagHeadPosition(self) -> XYZ: ...
    @TagHeadPosition.setter
    def TagHeadPosition(self, value: XYZ) -> XYZ: ...
    @property
    def TagOrientation(self) -> SpatialElementTagOrientation: ...
    @TagOrientation.setter
    def TagOrientation(self, value: SpatialElementTagOrientation) -> SpatialElementTagOrientation: ...
    @property
    def TagText(self) -> str: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def View(self) -> View: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class RoomTagFilter(ElementSlowFilter):
    def __init__(self) -> None: ...
    @property
    def Inverted(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...


class RoomTagType(FamilySymbol):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Family(self) -> Family: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def StructuralMaterialType(self) -> StructuralMaterialType: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class SiteSubRegion(IDisposable):
    @property
    def HostId(self) -> ElementId: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def TopographySurface(self) -> TopographySurface: ...
    def Dispose(self) -> None: ...
    def GetBoundary(self) -> IList_1[CurveLoop]: ...
    @staticmethod
    def IsValidBoundary(curveLoops: IList_1[CurveLoop]) -> bool: ...
    def SetBoundary(self, curveLoops: IList_1[CurveLoop]) -> None: ...
    # Skipped Create due to it being static, abstract and generic.

    Create : Create_MethodGroup
    class Create_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, curveLoops: IList_1[CurveLoop]) -> SiteSubRegion:...
        @typing.overload
        def __call__(self, document: Document, curveLoops: IList_1[CurveLoop], hostTopoSurfaceId: ElementId) -> SiteSubRegion:...



class SketchedCurveSlopeOption(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Auto : SketchedCurveSlopeOption # 0
    Flat : SketchedCurveSlopeOption # 1
    Sloped : SketchedCurveSlopeOption # 2


class Stairs(Element):
    @property
    def ActualRiserHeight(self) -> float: ...
    @property
    def ActualRisersNumber(self) -> int: ...
    @property
    def ActualTreadDepth(self) -> float: ...
    @ActualTreadDepth.setter
    def ActualTreadDepth(self, value: float) -> float: ...
    @property
    def ActualTreadsNumber(self) -> int: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BaseElevation(self) -> float: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def DesiredRisersNumber(self) -> int: ...
    @DesiredRisersNumber.setter
    def DesiredRisersNumber(self, value: int) -> int: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Height(self) -> float: ...
    @Height.setter
    def Height(self, value: float) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MultistoryStairsId(self) -> ElementId: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def NumberOfStories(self) -> int: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def TopElevation(self) -> float: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def GetAssociatedRailings(self) -> ICollection_1[ElementId]: ...
    def GetStairsLandings(self) -> ICollection_1[ElementId]: ...
    def GetStairsRuns(self) -> ICollection_1[ElementId]: ...
    def GetStairsSupports(self) -> ICollection_1[ElementId]: ...
    @staticmethod
    def IsByComponent(document: Document, stairsId: ElementId) -> bool: ...
    def IsInEditMode(self) -> bool: ...


class StairsComponentConnection(IDisposable):
    @property
    def ConnectionType(self) -> StairsComponentConnectionEndType: ...
    @property
    def ElementId(self) -> ElementId: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def PeerConnectionType(self) -> StairsComponentConnectionEndType: ...
    @property
    def PeerElementId(self) -> ElementId: ...
    def Dispose(self) -> None: ...


class StairsComponentConnectionEndType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    ET_Landing : StairsComponentConnectionEndType # 0
    ET_RunStart : StairsComponentConnectionEndType # 1
    ET_RunEnd : StairsComponentConnectionEndType # 2


class StairsConstructionMethod(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Assembled : StairsConstructionMethod # 0
    CastInPlace : StairsConstructionMethod # 1
    Precast : StairsConstructionMethod # 2


class StairsEndConnectionType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    StraightCut : StairsEndConnectionType # 0
    Notch : StairsEndConnectionType # 1


class StairsEndNotchOption(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    FullRunWidth : StairsEndNotchOption # 0
    Custom : StairsEndNotchOption # 1


class StairsLanding(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BaseElevation(self) -> float: ...
    @BaseElevation.setter
    def BaseElevation(self, value: float) -> float: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsAutomaticLanding(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def Thickness(self) -> float: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def CanCreateAutomaticLanding(document: Document, firstRunId: ElementId, secondRunId: ElementId) -> bool: ...
    @staticmethod
    def CreateAutomaticLanding(document: Document, firstRunId: ElementId, secondRunId: ElementId) -> IList_1[ElementId]: ...
    @staticmethod
    def CreateSketchedLanding(document: Document, stairsId: ElementId, curveLoop: CurveLoop, baseElevation: float) -> StairsLanding: ...
    @staticmethod
    def CreateSketchedLandingWithSlopeData(document: Document, stairsId: ElementId, curveLoop: IList_1[SketchedStairsCurveData], baseElevation: float) -> StairsLanding: ...
    def GetAllSupports(self) -> IList_1[ElementId]: ...
    def GetConnections(self) -> IList_1[StairsComponentConnection]: ...
    def GetFootprintBoundary(self) -> CurveLoop: ...
    def GetStairs(self) -> Stairs: ...
    def GetStairsPath(self) -> CurveLoop: ...
    def SetSketchedLandingBoundaryAndPath(self, document: Document, boundaryCurveLoop: CurveLoop, pathCurveLoop: CurveLoop) -> None: ...


class StairsLandingType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsMonolithic(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def Thickness(self) -> float: ...
    @Thickness.setter
    def Thickness(self, value: float) -> float: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class StairsNumberSystemReferenceOption(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Center : StairsNumberSystemReferenceOption # 0
    Left : StairsNumberSystemReferenceOption # 1
    Right : StairsNumberSystemReferenceOption # 2
    LeftQuarter : StairsNumberSystemReferenceOption # 3
    RightQuarter : StairsNumberSystemReferenceOption # 4


class StairsPath(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def DownText(self) -> str: ...
    @DownText.setter
    def DownText(self, value: str) -> str: ...
    @property
    def DownTextOffset(self) -> XYZ: ...
    @DownTextOffset.setter
    def DownTextOffset(self, value: XYZ) -> XYZ: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ShowDownText(self) -> bool: ...
    @ShowDownText.setter
    def ShowDownText(self, value: bool) -> bool: ...
    @property
    def ShowUpText(self) -> bool: ...
    @ShowUpText.setter
    def ShowUpText(self, value: bool) -> bool: ...
    @property
    def StairsId(self) -> LinkElementId: ...
    @property
    def StairsPathOffset(self) -> float: ...
    @StairsPathOffset.setter
    def StairsPathOffset(self, value: float) -> float: ...
    @property
    def TextOrientation(self) -> StairsTextOrientation: ...
    @TextOrientation.setter
    def TextOrientation(self, value: StairsTextOrientation) -> StairsTextOrientation: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def UpText(self) -> str: ...
    @UpText.setter
    def UpText(self, value: str) -> str: ...
    @property
    def UpTextOffset(self) -> XYZ: ...
    @UpTextOffset.setter
    def UpTextOffset(self, value: XYZ) -> XYZ: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def CanCreateOnMultistoryStairs(document: Document, multistoryStairsId: LinkElementId) -> bool: ...
    @staticmethod
    def Create(document: Document, stairsId: LinkElementId, typeId: ElementId, planViewId: ElementId) -> StairsPath: ...
    @staticmethod
    def CreateOnMultistoryStairs(document: Document, multistoryStairsId: LinkElementId, typeId: ElementId) -> IList_1[StairsPath]: ...


class StairsPathDirection(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    AlwaysUp : StairsPathDirection # 0
    AutomaticUpDown : StairsPathDirection # 1


class StairsPathLineShapeAtCorner(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Straight : StairsPathLineShapeAtCorner # 0
    Curved : StairsPathLineShapeAtCorner # 1


class StairsPathType(ElementType):
    @property
    def ArrowheadTypeId(self) -> ElementId: ...
    @ArrowheadTypeId.setter
    def ArrowheadTypeId(self, value: ElementId) -> ElementId: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def DistanceToCutMark(self) -> float: ...
    @DistanceToCutMark.setter
    def DistanceToCutMark(self, value: float) -> float: ...
    @property
    def Document(self) -> Document: ...
    @property
    def DrawForEachRun(self) -> bool: ...
    @DrawForEachRun.setter
    def DrawForEachRun(self, value: bool) -> bool: ...
    @property
    def EndAtRiser(self) -> bool: ...
    @EndAtRiser.setter
    def EndAtRiser(self, value: bool) -> bool: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def FullStepArrow(self) -> bool: ...
    @FullStepArrow.setter
    def FullStepArrow(self, value: bool) -> bool: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LineShapeAtCorner(self) -> StairsPathLineShapeAtCorner: ...
    @LineShapeAtCorner.setter
    def LineShapeAtCorner(self, value: StairsPathLineShapeAtCorner) -> StairsPathLineShapeAtCorner: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ShowArrowheadToCutMark(self) -> bool: ...
    @ShowArrowheadToCutMark.setter
    def ShowArrowheadToCutMark(self, value: bool) -> bool: ...
    @property
    def StairsPathDirection(self) -> StairsPathDirection: ...
    @property
    def StartExtension(self) -> float: ...
    @StartExtension.setter
    def StartExtension(self, value: float) -> float: ...
    @property
    def StartFromRiser(self) -> bool: ...
    @StartFromRiser.setter
    def StartFromRiser(self, value: bool) -> bool: ...
    @property
    def StartSymbolTypeId(self) -> ElementId: ...
    @StartSymbolTypeId.setter
    def StartSymbolTypeId(self, value: ElementId) -> ElementId: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class StairsRun(Element):
    @property
    def ActualRisersNumber(self) -> int: ...
    @property
    def ActualRunWidth(self) -> float: ...
    @ActualRunWidth.setter
    def ActualRunWidth(self, value: float) -> float: ...
    @property
    def ActualTreadsNumber(self) -> int: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BaseElevation(self) -> float: ...
    @BaseElevation.setter
    def BaseElevation(self, value: float) -> float: ...
    @property
    def BeginsWithRiser(self) -> bool: ...
    @BeginsWithRiser.setter
    def BeginsWithRiser(self, value: bool) -> bool: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def EndsWithRiser(self) -> bool: ...
    @EndsWithRiser.setter
    def EndsWithRiser(self, value: bool) -> bool: ...
    @property
    def ExtensionBelowRiserBase(self) -> float: ...
    @ExtensionBelowRiserBase.setter
    def ExtensionBelowRiserBase(self, value: float) -> float: ...
    @property
    def ExtensionBelowTreadBase(self) -> float: ...
    @ExtensionBelowTreadBase.setter
    def ExtensionBelowTreadBase(self, value: float) -> float: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Height(self) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def LocationLineJustification(self) -> StairsRunJustification: ...
    @LocationLineJustification.setter
    def LocationLineJustification(self, value: StairsRunJustification) -> StairsRunJustification: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def StairsRunStyle(self) -> StairsRunStyle: ...
    @property
    def TopElevation(self) -> float: ...
    @TopElevation.setter
    def TopElevation(self, value: float) -> float: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def CreateSketchedRun(document: Document, stairsId: ElementId, baseElevation: float, boundaryCurves: IList_1[Curve], riserCurves: IList_1[Curve], stairsPath: IList_1[Curve]) -> StairsRun: ...
    @staticmethod
    def CreateSketchedRunWithSlopeData(document: Document, stairsId: ElementId, baseElevation: float, boundaryCurves: IList_1[SketchedStairsCurveData], riserCurves: IList_1[Curve], stairsPath: IList_1[Curve]) -> StairsRun: ...
    @staticmethod
    def CreateSpiralRun(document: Document, stairsId: ElementId, center: XYZ, radius: float, startAngle: float, includedAngle: float, clockwise: bool, justification: StairsRunJustification) -> StairsRun: ...
    @staticmethod
    def CreateStraightRun(document: Document, stairsId: ElementId, locationPath: Line, justification: StairsRunJustification) -> StairsRun: ...
    def GetAllSupports(self) -> IList_1[ElementId]: ...
    def GetConnections(self) -> IList_1[StairsComponentConnection]: ...
    def GetFootprintBoundary(self) -> CurveLoop: ...
    def GetLeftSupports(self) -> IList_1[ElementId]: ...
    def GetNumberSystemReference(self, referenceOption: StairsNumberSystemReferenceOption) -> Reference: ...
    def GetRightSupports(self) -> IList_1[ElementId]: ...
    def GetStairs(self) -> Stairs: ...
    def GetStairsPath(self) -> CurveLoop: ...
    @staticmethod
    def SetLocationPathForSpiralRun(stairsRun: StairsRun, center: XYZ, radius: float, startAngle: float, includedAngle: float, clockwise: bool, justification: StairsRunJustification) -> bool: ...
    @staticmethod
    def SetLocationPathForStraightRun(stairsRun: StairsRun, locationPath: Line) -> bool: ...


class StairsRunJustification(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Left : StairsRunJustification # 0
    Center : StairsRunJustification # 1
    Right : StairsRunJustification # 2
    LeftExterior : StairsRunJustification # 3
    RightExterior : StairsRunJustification # 4


class StairsRunStyle(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Winder : StairsRunStyle # 1
    Sketched : StairsRunStyle # 2
    Straight : StairsRunStyle # 3
    Spiral : StairsRunStyle # 4


class StairsRunType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HasRisers(self) -> bool: ...
    @HasRisers.setter
    def HasRisers(self, value: bool) -> bool: ...
    @property
    def HasTreads(self) -> bool: ...
    @HasTreads.setter
    def HasTreads(self, value: bool) -> bool: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsMonolithic(self) -> bool: ...
    @property
    def IsSlanted(self) -> bool: ...
    @IsSlanted.setter
    def IsSlanted(self, value: bool) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MaterialId(self) -> ElementId: ...
    @MaterialId.setter
    def MaterialId(self, value: ElementId) -> ElementId: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def NosingLength(self) -> float: ...
    @NosingLength.setter
    def NosingLength(self, value: float) -> float: ...
    @property
    def NosingProfile(self) -> ElementId: ...
    @NosingProfile.setter
    def NosingProfile(self, value: ElementId) -> ElementId: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def RiserProfile(self) -> ElementId: ...
    @RiserProfile.setter
    def RiserProfile(self, value: ElementId) -> ElementId: ...
    @property
    def RiserThickness(self) -> float: ...
    @RiserThickness.setter
    def RiserThickness(self, value: float) -> float: ...
    @property
    def RiserToTreadConnect(self) -> RiserToTreadConnectionOption: ...
    @RiserToTreadConnect.setter
    def RiserToTreadConnect(self, value: RiserToTreadConnectionOption) -> RiserToTreadConnectionOption: ...
    @property
    def StructuralDepth(self) -> float: ...
    @StructuralDepth.setter
    def StructuralDepth(self, value: float) -> float: ...
    @property
    def TotalDepth(self) -> float: ...
    @property
    def TreadNosingPosition(self) -> TreadNosingPosition: ...
    @TreadNosingPosition.setter
    def TreadNosingPosition(self, value: TreadNosingPosition) -> TreadNosingPosition: ...
    @property
    def TreadProfile(self) -> ElementId: ...
    @TreadProfile.setter
    def TreadProfile(self, value: ElementId) -> ElementId: ...
    @property
    def TreadThickness(self) -> float: ...
    @TreadThickness.setter
    def TreadThickness(self, value: float) -> float: ...
    @property
    def UndersideSurfaceStyle(self) -> StairsUndersideSurfaceStyle: ...
    @UndersideSurfaceStyle.setter
    def UndersideSurfaceStyle(self, value: StairsUndersideSurfaceStyle) -> StairsUndersideSurfaceStyle: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class StairsSupportTopsideSurfaceType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Closed : StairsSupportTopsideSurfaceType # 0
    Open : StairsSupportTopsideSurfaceType # 1


class StairsTextOrientation(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Horizontal : StairsTextOrientation # 0
    Vertical : StairsTextOrientation # 1


class StairsType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConstructionMethod(self) -> StairsConstructionMethod: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def EndConnectionType(self) -> StairsEndConnectionType: ...
    @EndConnectionType.setter
    def EndConnectionType(self, value: StairsEndConnectionType) -> StairsEndConnectionType: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HasMiddleSupports(self) -> bool: ...
    @HasMiddleSupports.setter
    def HasMiddleSupports(self, value: bool) -> bool: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LandingType(self) -> ElementId: ...
    @LandingType.setter
    def LandingType(self, value: ElementId) -> ElementId: ...
    @property
    def LeftLateralOffset(self) -> float: ...
    @LeftLateralOffset.setter
    def LeftLateralOffset(self, value: float) -> float: ...
    @property
    def LeftSideSupportType(self) -> ElementId: ...
    @LeftSideSupportType.setter
    def LeftSideSupportType(self, value: ElementId) -> ElementId: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MaxRiserHeight(self) -> float: ...
    @MaxRiserHeight.setter
    def MaxRiserHeight(self, value: float) -> float: ...
    @property
    def MiddleSupportsNumber(self) -> int: ...
    @MiddleSupportsNumber.setter
    def MiddleSupportsNumber(self, value: int) -> int: ...
    @property
    def MiddleSupportType(self) -> ElementId: ...
    @MiddleSupportType.setter
    def MiddleSupportType(self, value: ElementId) -> ElementId: ...
    @property
    def MinRunWidth(self) -> float: ...
    @MinRunWidth.setter
    def MinRunWidth(self, value: float) -> float: ...
    @property
    def MinTreadDepth(self) -> float: ...
    @MinTreadDepth.setter
    def MinTreadDepth(self, value: float) -> float: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def NotchExtension(self) -> float: ...
    @NotchExtension.setter
    def NotchExtension(self, value: float) -> float: ...
    @property
    def NotchHorizontalGap(self) -> float: ...
    @NotchHorizontalGap.setter
    def NotchHorizontalGap(self, value: float) -> float: ...
    @property
    def NotchThickness(self) -> float: ...
    @NotchThickness.setter
    def NotchThickness(self, value: float) -> float: ...
    @property
    def NotchVerticalGap(self) -> float: ...
    @NotchVerticalGap.setter
    def NotchVerticalGap(self, value: float) -> float: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def RightLateralOffset(self) -> float: ...
    @RightLateralOffset.setter
    def RightLateralOffset(self, value: float) -> float: ...
    @property
    def RightSideSupportType(self) -> ElementId: ...
    @RightSideSupportType.setter
    def RightSideSupportType(self, value: ElementId) -> ElementId: ...
    @property
    def RunType(self) -> ElementId: ...
    @RunType.setter
    def RunType(self, value: ElementId) -> ElementId: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class StairsUndersideSurfaceStyle(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Stepped : StairsUndersideSurfaceStyle # 0
    Smooth : StairsUndersideSurfaceStyle # 1


class StairsWinderStyle(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Balanced : StairsWinderStyle # 0
    SinglePoint : StairsWinderStyle # 2


class TopographyEditScope(EditScope):
    def __init__(self, document: Document, transactionName: str) -> None: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def IsPermitted(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    def Start(self, topoSurfaceId: ElementId) -> ElementId: ...


class TopographyLinkType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def Reload(self) -> LinkLoadResult: ...


class TopographySurface(Element):
    @property
    def ArePointsEditable(self) -> bool: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def AssociatedBuildingPadId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsAssociatedWithBuildingPad(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsSiteSubRegion(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MaterialId(self) -> ElementId: ...
    @MaterialId.setter
    def MaterialId(self, value: ElementId) -> ElementId: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddPoints(self, points: IList_1[XYZ]) -> None: ...
    @staticmethod
    def ArePointsDistinct(points: IList_1[XYZ]) -> bool: ...
    def AsSiteSubRegion(self) -> SiteSubRegion: ...
    def ChangePointElevation(self, point: XYZ, elevationValue: float) -> None: ...
    def ChangePointsElevation(self, points: IList_1[XYZ], elevationValue: float) -> None: ...
    def ContainsPoint(self, point: XYZ) -> bool: ...
    def DeletePoints(self, points: IList_1[XYZ]) -> None: ...
    def FindPoints(self, boundingBox: Outline) -> IList_1[XYZ]: ...
    def GetBoundaryPoints(self) -> IList_1[XYZ]: ...
    def GetHostedSubRegionIds(self) -> IList_1[ElementId]: ...
    def GetInteriorPoints(self) -> IList_1[XYZ]: ...
    def GetPoints(self) -> IList_1[XYZ]: ...
    def IsBoundaryPoint(self, point: XYZ) -> bool: ...
    @staticmethod
    def IsValidFaceSet(facets: IList_1[PolymeshFacet], points: IList_1[XYZ]) -> bool: ...
    @staticmethod
    def IsValidRegion(points: IList_1[XYZ]) -> bool: ...
    def MovePoint(self, movedPoint: XYZ, targetPoint: XYZ) -> None: ...
    def MovePoints(self, movedPoints: IList_1[XYZ], moveVector: XYZ) -> None: ...
    # Skipped Create due to it being static, abstract and generic.

    Create : Create_MethodGroup
    class Create_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, points: IList_1[XYZ]) -> TopographySurface:...
        @typing.overload
        def __call__(self, document: Document, points: IList_1[XYZ], facets: IList_1[PolymeshFacet]) -> TopographySurface:...



class TopRail(ContinuousRail):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HostRailingId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Length(self) -> float: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class TopRailType(ContinuousRailType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DefaultJoinOption(self) -> RailTypeDefaultJoinOption: ...
    @DefaultJoinOption.setter
    def DefaultJoinOption(self, value: RailTypeDefaultJoinOption) -> RailTypeDefaultJoinOption: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def EndOrTopExtensionLength(self) -> float: ...
    @EndOrTopExtensionLength.setter
    def EndOrTopExtensionLength(self, value: float) -> float: ...
    @property
    def EndOrTopExtensionStyle(self) -> RailExtensionStyle: ...
    @EndOrTopExtensionStyle.setter
    def EndOrTopExtensionStyle(self, value: RailExtensionStyle) -> RailExtensionStyle: ...
    @property
    def EndOrTopTermination(self) -> ElementId: ...
    @EndOrTopTermination.setter
    def EndOrTopTermination(self, value: ElementId) -> ElementId: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def FilletRadius(self) -> float: ...
    @FilletRadius.setter
    def FilletRadius(self, value: float) -> float: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HandClearance(self) -> float: ...
    @HandClearance.setter
    def HandClearance(self, value: float) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ProfileId(self) -> ElementId: ...
    @ProfileId.setter
    def ProfileId(self, value: ElementId) -> ElementId: ...
    @property
    def Projection(self) -> float: ...
    @property
    def StartOrBottomExtensionLength(self) -> float: ...
    @StartOrBottomExtensionLength.setter
    def StartOrBottomExtensionLength(self, value: float) -> float: ...
    @property
    def StartOrBottomExtensionStyle(self) -> RailExtensionStyle: ...
    @StartOrBottomExtensionStyle.setter
    def StartOrBottomExtensionStyle(self, value: RailExtensionStyle) -> RailExtensionStyle: ...
    @property
    def StartOrBottomTermination(self) -> ElementId: ...
    @StartOrBottomTermination.setter
    def StartOrBottomTermination(self, value: ElementId) -> ElementId: ...
    @property
    def Transition(self) -> RailTransitionOption: ...
    @Transition.setter
    def Transition(self, value: RailTransitionOption) -> RailTransitionOption: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class TreadNosingPosition(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    FrontOnly : TreadNosingPosition # 0
    FrontAndLeft : TreadNosingPosition # 1
    FrontAndRight : TreadNosingPosition # 2
    FrontLeftAndRight : TreadNosingPosition # 3


class WinderPathResult(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Success : WinderPathResult # 0
    NumberOutOfRange : WinderPathResult # 1
    Unbound : WinderPathResult # 2
    Noncontinuous : WinderPathResult # 3
    NotOpenLoop : WinderPathResult # 4
    TooShort : WinderPathResult # 5
    ColinearOrOverlap : WinderPathResult # 6
    SelfIntersect : WinderPathResult # 7
    InvalidCurveType : WinderPathResult # 8
    NotSupported : WinderPathResult # 9

