import typing, abc
from Autodesk.Revit.DB import MEPCurve, ElementId, BoundingBoxXYZ, Category, ConnectorManager, DesignOption, Document, XYZ, GeometryElement, Location, MEPSystem, Parameter, ParameterSet, ParameterMap, Level, WorksetId, MEPCurveType, FamilySymbol, JunctionType, RoutingPreferenceManager, ConnectorProfileType, ElementType, Connector, FlowDirectionType, Transform, PartType, MEPSystemClassification, InsulationLiningBase, Segment, MEPSize, Element, FittingAngleUsage, MEPCalculationServerInfo, FamilyInstance, ElementSet, MEPSystemType, Color
from System.Collections.Generic import IList_1, IEnumerator_1, IEnumerable_1, ICollection_1, ISet_1
from System import Guid, IDisposable
from Autodesk.Revit.DB.ExternalService import IExternalServer
from Autodesk.Revit.DB.ExtensibleStorage import Schema, Entity
from Autodesk.Revit.DB.Mechanical import SystemCalculationLevel, RiseDropSymbol

class FlexPipe(MEPCurve):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Diameter(self) -> float: ...
    @property
    def Document(self) -> Document: ...
    @property
    def EndTangent(self) -> XYZ: ...
    @EndTangent.setter
    def EndTangent(self, value: XYZ) -> XYZ: ...
    @property
    def FlexPipeType(self) -> FlexPipeType: ...
    @FlexPipeType.setter
    def FlexPipeType(self, value: FlexPipeType) -> FlexPipeType: ...
    @property
    def FlowState(self) -> PipeFlowState: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Height(self) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LevelOffset(self) -> float: ...
    @LevelOffset.setter
    def LevelOffset(self, value: float) -> float: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MEPSystem(self) -> MEPSystem: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def Points(self) -> IList_1[XYZ]: ...
    @Points.setter
    def Points(self, value: IList_1[XYZ]) -> IList_1[XYZ]: ...
    @property
    def ReferenceLevel(self) -> Level: ...
    @ReferenceLevel.setter
    def ReferenceLevel(self, value: Level) -> Level: ...
    @property
    def StartTangent(self) -> XYZ: ...
    @StartTangent.setter
    def StartTangent(self, value: XYZ) -> XYZ: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Width(self) -> float: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def IsFlexPipeTypeId(document: Document, pipeTypeId: ElementId) -> bool: ...
    @staticmethod
    def IsPipingSystemTypeId(document: Document, systemTypeId: ElementId) -> bool: ...
    # Skipped Create due to it being static, abstract and generic.

    Create : Create_MethodGroup
    class Create_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, systemTypeId: ElementId, pipeTypeId: ElementId, levelId: ElementId, points: IList_1[XYZ]) -> FlexPipe:...
        @typing.overload
        def __call__(self, document: Document, systemTypeId: ElementId, pipeTypeId: ElementId, levelId: ElementId, startTangent: XYZ, endTangent: XYZ, points: IList_1[XYZ]) -> FlexPipe:...



class FlexPipeType(MEPCurveType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def Cross(self) -> FamilySymbol: ...
    @Cross.setter
    def Cross(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Elbow(self) -> FamilySymbol: ...
    @Elbow.setter
    def Elbow(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MultiShapeTransition(self) -> FamilySymbol: ...
    @MultiShapeTransition.setter
    def MultiShapeTransition(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def PreferredJunctionType(self) -> JunctionType: ...
    @PreferredJunctionType.setter
    def PreferredJunctionType(self, value: JunctionType) -> JunctionType: ...
    @property
    def Roughness(self) -> float: ...
    @Roughness.setter
    def Roughness(self, value: float) -> float: ...
    @property
    def RoutingPreferenceManager(self) -> RoutingPreferenceManager: ...
    @property
    def Shape(self) -> ConnectorProfileType: ...
    @property
    def Tap(self) -> FamilySymbol: ...
    @Tap.setter
    def Tap(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Tee(self) -> FamilySymbol: ...
    @Tee.setter
    def Tee(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Transition(self) -> FamilySymbol: ...
    @Transition.setter
    def Transition(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Union(self) -> FamilySymbol: ...
    @Union.setter
    def Union(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class FlowConversionMode(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Valves : FlowConversionMode # 0
    Tanks : FlowConversionMode # 1
    Invalid : FlowConversionMode # -1


class FluidTemperature(IDisposable):
    def __init__(self, temperature: float, viscosity: float, density: float) -> None: ...
    @property
    def Density(self) -> float: ...
    @Density.setter
    def Density(self, value: float) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Temperature(self) -> float: ...
    @Temperature.setter
    def Temperature(self, value: float) -> float: ...
    @property
    def Viscosity(self) -> float: ...
    @Viscosity.setter
    def Viscosity(self, value: float) -> float: ...
    def Dispose(self) -> None: ...


class FluidTemperatureSetIterator(IEnumerator_1[FluidTemperature]):
    @property
    def Current(self) -> FluidTemperature: ...
    @property
    def IsValidObject(self) -> bool: ...
    def Dispose(self) -> None: ...
    def GetCurrent(self) -> FluidTemperature: ...
    def IsDone(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class FluidType(ElementType, IEnumerable_1[FluidTemperature]):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddTemperature(self, fluidTemperature: FluidTemperature) -> None: ...
    def ClearAllTemperatures(self) -> None: ...
    def GetEnumerator(self) -> IEnumerator_1[FluidTemperature]: ...
    def GetFluidTemperatureSetIterator(self) -> FluidTemperatureSetIterator: ...
    @staticmethod
    def GetFluidType(document: Document, fluidTypeName: str) -> FluidType: ...
    def GetTemperature(self, temperature: float) -> FluidTemperature: ...
    @staticmethod
    def IsFluidInUse(document: Document, fluidId: ElementId) -> bool: ...
    def RemoveTemperature(self, temperature: float) -> None: ...
    # Skipped Create due to it being static, abstract and generic.

    Create : Create_MethodGroup
    class Create_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, fluidTypeName: str) -> FluidType:...
        @typing.overload
        def __call__(self, document: Document, fluidTypeName: str, basedOnFluidType: FluidType) -> FluidType:...



class IPipeFittingAndAccessoryPressureDropServer(IExternalServer, typing.Protocol):
    @abc.abstractmethod
    def Calculate(self, data: PipeFittingAndAccessoryPressureDropData) -> bool: ...
    @abc.abstractmethod
    def GetDataSchema(self) -> Schema: ...
    @abc.abstractmethod
    def IsApplicable(self, data: PipeFittingAndAccessoryPressureDropData) -> bool: ...


class IPipePlumbingFixtureFlowServer(IExternalServer, typing.Protocol):
    @abc.abstractmethod
    def Calculate(self, data: PipePlumbingFixtureFlowData) -> None: ...
    @abc.abstractmethod
    def GetHtmlDescription(self) -> str: ...
    @abc.abstractmethod
    def GetInformationLink(self) -> str: ...


class IPipePressureDropServer(IExternalServer, typing.Protocol):
    @abc.abstractmethod
    def Calculate(self, data: PipePressureDropData) -> None: ...
    @abc.abstractmethod
    def GetHtmlDescription(self) -> str: ...
    @abc.abstractmethod
    def GetInformationLink(self) -> str: ...


class Pipe(MEPCurve):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Diameter(self) -> float: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FlowState(self) -> PipeFlowState: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Height(self) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsPlaceholder(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LevelOffset(self) -> float: ...
    @LevelOffset.setter
    def LevelOffset(self, value: float) -> float: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MEPSystem(self) -> MEPSystem: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def PipeSegment(self) -> PipeSegment: ...
    @property
    def PipeType(self) -> PipeType: ...
    @PipeType.setter
    def PipeType(self, value: PipeType) -> PipeType: ...
    @property
    def ReferenceLevel(self) -> Level: ...
    @ReferenceLevel.setter
    def ReferenceLevel(self, value: Level) -> Level: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Width(self) -> float: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def CreatePlaceholder(document: Document, systemTypeId: ElementId, pipeTypeId: ElementId, levelId: ElementId, startPoint: XYZ, endPoint: XYZ) -> Pipe: ...
    @staticmethod
    def IsPipeTypeId(document: Document, pipeTypeId: ElementId) -> bool: ...
    @staticmethod
    def IsPipingConnector(connector: Connector) -> bool: ...
    @staticmethod
    def IsPipingSystemTypeId(document: Document, systemTypeId: ElementId) -> bool: ...
    def SetSystemType(self, systemTypeId: ElementId) -> None: ...
    # Skipped Create due to it being static, abstract and generic.

    Create : Create_MethodGroup
    class Create_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, pipeTypeId: ElementId, levelId: ElementId, startConnector: Connector, endConnector: Connector) -> Pipe:...
        @typing.overload
        def __call__(self, document: Document, pipeTypeId: ElementId, levelId: ElementId, startConnector: Connector, endPoint: XYZ) -> Pipe:...
        @typing.overload
        def __call__(self, document: Document, systemTypeId: ElementId, pipeTypeId: ElementId, levelId: ElementId, startPoint: XYZ, endPoint: XYZ) -> Pipe:...



class PipeFittingAndAccessoryConnectorData(IDisposable):
    @property
    def Angle(self) -> float: ...
    @property
    def Diameter(self) -> float: ...
    @property
    def Flow(self) -> float: ...
    @property
    def FlowDirection(self) -> FlowDirectionType: ...
    @property
    def Height(self) -> float: ...
    @property
    def Index(self) -> int: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LinkIndex(self) -> int: ...
    @property
    def Profile(self) -> ConnectorProfileType: ...
    @property
    def VelocityPressure(self) -> float: ...
    @property
    def Width(self) -> float: ...
    def Dispose(self) -> None: ...
    def GetCoordination(self) -> Transform: ...


class PipeFittingAndAccessoryData(IDisposable):
    @property
    def BehaviorType(self) -> int: ...
    @property
    def FluidDensity(self) -> float: ...
    @property
    def FluidViscosity(self) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Origin(self) -> XYZ: ...
    @property
    def PartType(self) -> PartType: ...
    @property
    def ServerGUID(self) -> Guid: ...
    @property
    def SystemClassification(self) -> MEPSystemClassification: ...
    def Dispose(self) -> None: ...
    def GetAllConnectorData(self) -> IList_1[PipeFittingAndAccessoryConnectorData]: ...
    def GetEntity(self) -> Entity: ...
    def GetFamilyInstanceId(self) -> ElementId: ...


class PipeFittingAndAccessoryPressureDropData(IDisposable):
    @property
    def CalculationType(self) -> int: ...
    @property
    def IsCurrentEntityValid(self) -> bool: ...
    @IsCurrentEntityValid.setter
    def IsCurrentEntityValid(self, value: bool) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    def Dispose(self) -> None: ...
    def GetPipeFittingAndAccessoryData(self) -> PipeFittingAndAccessoryData: ...
    def GetPresureDropItems(self) -> IList_1[PipeFittingAndAccessoryPressureDropItem]: ...
    def SetDefaultEntity(self, defaultEntity: Entity) -> None: ...


class PipeFittingAndAccessoryPressureDropItem(IDisposable):
    @property
    def BeginConnectorIndex(self) -> int: ...
    @property
    def Coefficient(self) -> float: ...
    @Coefficient.setter
    def Coefficient(self, value: float) -> float: ...
    @property
    def EndConnectorIndex(self) -> int: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def VelocityPressure(self) -> float: ...
    def Dispose(self) -> None: ...


class PipeFlowConfigurationType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Calculated : PipeFlowConfigurationType # 0
    Preset : PipeFlowConfigurationType # 1
    System : PipeFlowConfigurationType # 2
    Demand : PipeFlowConfigurationType # 3


class PipeFlowState(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    LaminarState : PipeFlowState # 0
    TransitionState : PipeFlowState # 1
    TurbulentState : PipeFlowState # 2
    MultiValues : PipeFlowState # -1


class PipeInsulation(InsulationLiningBase):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Diameter(self) -> float: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Height(self) -> float: ...
    @property
    def HostElementId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LevelOffset(self) -> float: ...
    @LevelOffset.setter
    def LevelOffset(self, value: float) -> float: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MEPSystem(self) -> MEPSystem: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ReferenceLevel(self) -> Level: ...
    @ReferenceLevel.setter
    def ReferenceLevel(self, value: Level) -> Level: ...
    @property
    def Thickness(self) -> float: ...
    @Thickness.setter
    def Thickness(self, value: float) -> float: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Width(self) -> float: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(document: Document, pipeOrContentElementId: ElementId, pipeInsulationTypeId: ElementId, Thickness: float) -> PipeInsulation: ...


class PipeInsulationType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class PipeLossMethodType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    NotDefined : PipeLossMethodType # 0
    Table : PipeLossMethodType # 1
    SpecificLoss : PipeLossMethodType # 4
    Coefficient : PipeLossMethodType # 6


class PipePlumbingFixtureFlowData(IDisposable):
    @property
    def DimensionFlow(self) -> float: ...
    @property
    def FixtureUnits(self) -> float: ...
    @property
    def Flow(self) -> float: ...
    @Flow.setter
    def Flow(self, value: float) -> float: ...
    @property
    def FlowConfiguration(self) -> PipeFlowConfigurationType: ...
    @property
    def FlowConversionMode(self) -> FlowConversionMode: ...
    @property
    def IsValidObject(self) -> bool: ...
    def Dispose(self) -> None: ...


class PipePressureDropData(IDisposable):
    @property
    def CategoryId(self) -> ElementId: ...
    @property
    def Coefficient(self) -> float: ...
    @Coefficient.setter
    def Coefficient(self, value: float) -> float: ...
    @property
    def Density(self) -> float: ...
    @property
    def Flow(self) -> float: ...
    @property
    def FlowState(self) -> PipeFlowState: ...
    @FlowState.setter
    def FlowState(self, value: PipeFlowState) -> PipeFlowState: ...
    @property
    def Friction(self) -> float: ...
    @Friction.setter
    def Friction(self, value: float) -> float: ...
    @property
    def FrictionFactor(self) -> float: ...
    @FrictionFactor.setter
    def FrictionFactor(self, value: float) -> float: ...
    @property
    def InsideDiameter(self) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def KLevel(self) -> SystemCalculationLevel: ...
    @property
    def Length(self) -> float: ...
    @property
    def NominalDiameter(self) -> float: ...
    @property
    def OutsideDiameter(self) -> float: ...
    @property
    def PressureDrop(self) -> float: ...
    @PressureDrop.setter
    def PressureDrop(self, value: float) -> float: ...
    @property
    def RelativeRoughness(self) -> float: ...
    @RelativeRoughness.setter
    def RelativeRoughness(self, value: float) -> float: ...
    @property
    def ReynoldsNumber(self) -> float: ...
    @ReynoldsNumber.setter
    def ReynoldsNumber(self, value: float) -> float: ...
    @property
    def Roughness(self) -> float: ...
    @property
    def Velocity(self) -> float: ...
    @Velocity.setter
    def Velocity(self, value: float) -> float: ...
    @property
    def VelocityPressure(self) -> float: ...
    @VelocityPressure.setter
    def VelocityPressure(self, value: float) -> float: ...
    @property
    def Viscosity(self) -> float: ...
    def Dispose(self) -> None: ...


class PipeScheduleType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(doc: Document, name: str) -> PipeScheduleType: ...
    @staticmethod
    def GetPipeScheduleId(doc: Document, name: str) -> ElementId: ...


class PipeSegment(Segment):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def Description(self) -> str: ...
    @Description.setter
    def Description(self, value: str) -> str: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MaterialId(self) -> ElementId: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def Roughness(self) -> float: ...
    @Roughness.setter
    def Roughness(self, value: float) -> float: ...
    @property
    def ScheduleTypeId(self) -> ElementId: ...
    @property
    def SizeCount(self) -> int: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(ADocument: Document, MaterialId: ElementId, ScheduleId: ElementId, sizeSet: ICollection_1[MEPSize]) -> PipeSegment: ...


class PipeSettings(Element):
    @property
    def AnalysisForClosedLoopHydronicPipingNetworks(self) -> bool: ...
    @AnalysisForClosedLoopHydronicPipingNetworks.setter
    def AnalysisForClosedLoopHydronicPipingNetworks(self, value: bool) -> bool: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def Centerline(self) -> str: ...
    @Centerline.setter
    def Centerline(self, value: str) -> str: ...
    @property
    def ConnectorSeparator(self) -> str: ...
    @ConnectorSeparator.setter
    def ConnectorSeparator(self, value: str) -> str: ...
    @property
    def ConnectorTolerance(self) -> float: ...
    @ConnectorTolerance.setter
    def ConnectorTolerance(self, value: float) -> float: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FittingAngleUsage(self) -> FittingAngleUsage: ...
    @FittingAngleUsage.setter
    def FittingAngleUsage(self, value: FittingAngleUsage) -> FittingAngleUsage: ...
    @property
    def FittingAnnotationSize(self) -> float: ...
    @FittingAnnotationSize.setter
    def FittingAnnotationSize(self, value: float) -> float: ...
    @property
    def FlatOnBottom(self) -> str: ...
    @FlatOnBottom.setter
    def FlatOnBottom(self, value: str) -> str: ...
    @property
    def FlatOnTop(self) -> str: ...
    @FlatOnTop.setter
    def FlatOnTop(self, value: str) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def SetDown(self) -> str: ...
    @SetDown.setter
    def SetDown(self, value: str) -> str: ...
    @property
    def SetDownFromBottom(self) -> str: ...
    @SetDownFromBottom.setter
    def SetDownFromBottom(self, value: str) -> str: ...
    @property
    def SetUp(self) -> str: ...
    @SetUp.setter
    def SetUp(self, value: str) -> str: ...
    @property
    def SetUpFromBottom(self) -> str: ...
    @SetUpFromBottom.setter
    def SetUpFromBottom(self, value: str) -> str: ...
    @property
    def SizePrefix(self) -> str: ...
    @SizePrefix.setter
    def SizePrefix(self, value: str) -> str: ...
    @property
    def SizeSuffix(self) -> str: ...
    @SizeSuffix.setter
    def SizeSuffix(self, value: str) -> str: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def UseAnnotationScaleForSingleLineFittings(self) -> bool: ...
    @UseAnnotationScaleForSingleLineFittings.setter
    def UseAnnotationScaleForSingleLineFittings(self, value: bool) -> bool: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddPipeSlope(self, slope: float) -> None: ...
    def GetFlowConvertionServerInfo(self) -> MEPCalculationServerInfo: ...
    @staticmethod
    def GetPipeSettings(document: Document) -> PipeSettings: ...
    def GetPipeSlopes(self) -> IList_1[float]: ...
    def GetSpecificFittingAngles(self) -> IList_1[float]: ...
    def GetSpecificFittingAngleStatus(self, angle: float) -> bool: ...
    @staticmethod
    def IsAnalysisForClosedLoopHydronicPipingNetworksEnabled(ccda: Document) -> bool: ...
    def IsValidSpecificFittingAngle(self, angle: float) -> bool: ...
    def SetFlowConvertionServerInfo(self, serverInfo: MEPCalculationServerInfo) -> None: ...
    def SetPipeSlopes(self, slopes: IList_1[float]) -> None: ...
    def SetSpecificFittingAngleStatus(self, angle: float, bStatus: bool) -> None: ...


class PipeSystemType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    UndefinedSystemType : PipeSystemType # 0
    SupplyHydronic : PipeSystemType # 7
    ReturnHydronic : PipeSystemType # 8
    Sanitary : PipeSystemType # 16
    Vent : PipeSystemType # 17
    DomesticHotWater : PipeSystemType # 19
    DomesticColdWater : PipeSystemType # 20
    OtherPipe : PipeSystemType # 22
    FireProtectWet : PipeSystemType # 23
    FireProtectDry : PipeSystemType # 24
    FireProtectPreaction : PipeSystemType # 25
    FireProtectOther : PipeSystemType # 26
    Fitting : PipeSystemType # 28
    Global : PipeSystemType # 29


class PipeType(MEPCurveType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def Cross(self) -> FamilySymbol: ...
    @Cross.setter
    def Cross(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Elbow(self) -> FamilySymbol: ...
    @Elbow.setter
    def Elbow(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MultiShapeTransition(self) -> FamilySymbol: ...
    @MultiShapeTransition.setter
    def MultiShapeTransition(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def PreferredJunctionType(self) -> JunctionType: ...
    @PreferredJunctionType.setter
    def PreferredJunctionType(self, value: JunctionType) -> JunctionType: ...
    @property
    def Roughness(self) -> float: ...
    @Roughness.setter
    def Roughness(self, value: float) -> float: ...
    @property
    def RoutingPreferenceManager(self) -> RoutingPreferenceManager: ...
    @property
    def Shape(self) -> ConnectorProfileType: ...
    @property
    def Tap(self) -> FamilySymbol: ...
    @Tap.setter
    def Tap(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Tee(self) -> FamilySymbol: ...
    @Tee.setter
    def Tee(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Transition(self) -> FamilySymbol: ...
    @Transition.setter
    def Transition(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Union(self) -> FamilySymbol: ...
    @Union.setter
    def Union(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class PipingSystem(MEPSystem):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BaseEquipment(self) -> FamilyInstance: ...
    @property
    def BaseEquipmentConnector(self) -> Connector: ...
    @BaseEquipmentConnector.setter
    def BaseEquipmentConnector(self, value: Connector) -> Connector: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Elements(self) -> ElementSet: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HasDesignParts(self) -> bool: ...
    @property
    def HasFabricationParts(self) -> bool: ...
    @property
    def HasPlaceholders(self) -> bool: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsMultipleNetwork(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def IsWellConnected(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def PipingNetwork(self) -> ElementSet: ...
    @property
    def PressureLossOfCriticalPath(self) -> float: ...
    @property
    def SectionsCount(self) -> int: ...
    @property
    def SystemType(self) -> PipeSystemType: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def CanBeHydraulicLoopBoundary(element: Element) -> bool: ...
    @staticmethod
    def CreateHydraulicSeparation(document: Document, pipeElementIds: ISet_1[ElementId]) -> ISet_1[ElementId]: ...
    @staticmethod
    def DeleteHydraulicSeparation(document: Document, pipeElementIds: ISet_1[ElementId]) -> None: ...
    def GetFixtureUnits(self) -> float: ...
    def GetFlow(self) -> float: ...
    def GetPumpSets(self) -> ISet_1[ElementId]: ...
    def GetStaticPressure(self) -> float: ...
    def GetVolume(self) -> float: ...
    def IsFlowServerMissing(self) -> bool: ...
    @staticmethod
    def IsHydraulicLoopBoundary(element: Element) -> bool: ...
    def IsPressureDropServerMissing(self) -> bool: ...
    # Skipped Create due to it being static, abstract and generic.

    Create : Create_MethodGroup
    class Create_MethodGroup:
        @typing.overload
        def __call__(self, ADocument: Document, typeId: ElementId) -> PipingSystem:...
        @typing.overload
        def __call__(self, ADocument: Document, typeId: ElementId, name: str) -> PipingSystem:...



class PipingSystemType(MEPSystemType):
    @property
    def Abbreviation(self) -> str: ...
    @Abbreviation.setter
    def Abbreviation(self, value: str) -> str: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CalculationLevel(self) -> SystemCalculationLevel: ...
    @CalculationLevel.setter
    def CalculationLevel(self, value: SystemCalculationLevel) -> SystemCalculationLevel: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def FillColor(self) -> Color: ...
    @FillColor.setter
    def FillColor(self, value: Color) -> Color: ...
    @property
    def FillPatternId(self) -> ElementId: ...
    @FillPatternId.setter
    def FillPatternId(self, value: ElementId) -> ElementId: ...
    @property
    def FillVisible(self) -> bool: ...
    @FillVisible.setter
    def FillVisible(self, value: bool) -> bool: ...
    @property
    def FlowConversionMethod(self) -> FlowConversionMode: ...
    @FlowConversionMethod.setter
    def FlowConversionMethod(self, value: FlowConversionMode) -> FlowConversionMode: ...
    @property
    def FluidTemperature(self) -> float: ...
    @FluidTemperature.setter
    def FluidTemperature(self, value: float) -> float: ...
    @property
    def FluidType(self) -> ElementId: ...
    @FluidType.setter
    def FluidType(self, value: ElementId) -> ElementId: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsModifiable(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LineColor(self) -> Color: ...
    @LineColor.setter
    def LineColor(self, value: Color) -> Color: ...
    @property
    def LinePatternId(self) -> ElementId: ...
    @LinePatternId.setter
    def LinePatternId(self, value: ElementId) -> ElementId: ...
    @property
    def LineWeight(self) -> int: ...
    @LineWeight.setter
    def LineWeight(self, value: int) -> int: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MaterialId(self) -> ElementId: ...
    @MaterialId.setter
    def MaterialId(self, value: ElementId) -> ElementId: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def SingleLineBendDropType(self) -> RiseDropSymbol: ...
    @SingleLineBendDropType.setter
    def SingleLineBendDropType(self, value: RiseDropSymbol) -> RiseDropSymbol: ...
    @property
    def SingleLineBendRiseType(self) -> RiseDropSymbol: ...
    @SingleLineBendRiseType.setter
    def SingleLineBendRiseType(self, value: RiseDropSymbol) -> RiseDropSymbol: ...
    @property
    def SingleLineJunctionDropType(self) -> RiseDropSymbol: ...
    @SingleLineJunctionDropType.setter
    def SingleLineJunctionDropType(self, value: RiseDropSymbol) -> RiseDropSymbol: ...
    @property
    def SingleLineJunctionRiseType(self) -> RiseDropSymbol: ...
    @SingleLineJunctionRiseType.setter
    def SingleLineJunctionRiseType(self, value: RiseDropSymbol) -> RiseDropSymbol: ...
    @property
    def SystemClassification(self) -> MEPSystemClassification: ...
    @property
    def TwoLineDropType(self) -> RiseDropSymbol: ...
    @TwoLineDropType.setter
    def TwoLineDropType(self, value: RiseDropSymbol) -> RiseDropSymbol: ...
    @property
    def TwoLineRiseType(self) -> RiseDropSymbol: ...
    @TwoLineRiseType.setter
    def TwoLineRiseType(self, value: RiseDropSymbol) -> RiseDropSymbol: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(ADoc: Document, systemClassification: MEPSystemClassification, name: str) -> PipingSystemType: ...
    def ValidateRiseDropSymbolType(self, risedropType: RiseDropSymbol) -> bool: ...


class PlumbingUtils(abc.ABC):
    @staticmethod
    def BreakCurve(document: Document, pipeId: ElementId, ptBreak: XYZ) -> ElementId: ...
    @staticmethod
    def ConvertPipePlaceholders(document: Document, placeholderIds: ICollection_1[ElementId]) -> ICollection_1[ElementId]: ...
    @staticmethod
    def HasOpenConnector(document: Document, elemId: ElementId) -> bool: ...
    @staticmethod
    def PlaceCapOnOpenEnds(document: Document, elemId: ElementId, typeId: ElementId) -> None: ...
    # Skipped ConnectPipePlaceholdersAtCross due to it being static, abstract and generic.

    ConnectPipePlaceholdersAtCross : ConnectPipePlaceholdersAtCross_MethodGroup
    class ConnectPipePlaceholdersAtCross_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, placeholder1Id: ElementId, placeholder2Id: ElementId) -> bool:...
        @typing.overload
        def __call__(self, document: Document, placeholder1Id: ElementId, placeholder2Id: ElementId, placeholder3Id: ElementId) -> bool:...
        @typing.overload
        def __call__(self, document: Document, connector1: Connector, connector2: Connector, connector3: Connector, connector4: Connector) -> bool:...

    # Skipped ConnectPipePlaceholdersAtElbow due to it being static, abstract and generic.

    ConnectPipePlaceholdersAtElbow : ConnectPipePlaceholdersAtElbow_MethodGroup
    class ConnectPipePlaceholdersAtElbow_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, connector1: Connector, connector2: Connector) -> bool:...
        @typing.overload
        def __call__(self, document: Document, placeholder1Id: ElementId, placeholder2Id: ElementId) -> bool:...

    # Skipped ConnectPipePlaceholdersAtTee due to it being static, abstract and generic.

    ConnectPipePlaceholdersAtTee : ConnectPipePlaceholdersAtTee_MethodGroup
    class ConnectPipePlaceholdersAtTee_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, placeholder1Id: ElementId, placeholder2Id: ElementId) -> bool:...
        @typing.overload
        def __call__(self, document: Document, connector1: Connector, connector2: Connector, connector3: Connector) -> bool:...


