import typing, abc
from System import IDisposable, Guid
from Autodesk.Revit.DB import ElementId, MEPCurve, BoundingBoxXYZ, Category, ConnectorManager, DesignOption, Document, GeometryElement, Location, MEPSystem, Parameter, ParameterSet, ParameterMap, Level, WorksetId, XYZ, Connector, FlowDirectionType, ConnectorProfileType, Transform, PartType, MEPSystemClassification, InsulationLiningBase, ElementType, Element, FittingAngleUsage, MEPCalculationServerInfo, MEPSize, MEPCurveType, FamilySymbol, JunctionType, RoutingPreferenceManager, MEPModel, FamilyInstance, ElementSet, MEPSystemType, Color, Construction, APIObject, SpatialElement, BaseLoadOn, ElementSlowFilter, SpatialElementTag, SpatialElementTagOrientation, View, Family, CurveArray, Phase, ServiceType
from System.Collections.Generic import IList_1, IEnumerator_1, IEnumerable_1, KeyValuePair_2, ISet_1, ICollection_1
from Autodesk.Revit.DB.ExtensibleStorage import Entity, Schema
from Autodesk.Revit.DB.ExternalService import IExternalServer
from Autodesk.Revit.DB.Analysis import ConstructionType, OutdoorAirFlowStandard, GenericZoneDomainData
from System.Collections import IEnumerable, IEnumerator
from Autodesk.Revit.DB.Architecture import Room
from Autodesk.Revit.DB.Structure import StructuralMaterialType

class AirCoolingCoilType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    None_ : AirCoolingCoilType # 0
    ChilledWater : AirCoolingCoilType # 1
    DirectExpansion : AirCoolingCoilType # 2


class AirFanType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    ConstantVolume : AirFanType # 0
    VariableVolume : AirFanType # 1


class AirHeatExchangerType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    None_ : AirHeatExchangerType # 0
    Enthalpy : AirHeatExchangerType # 1
    Sensible : AirHeatExchangerType # 2


class AirHeatingCoilType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    None_ : AirHeatingCoilType # 0
    ElectricResistance : AirHeatingCoilType # 1
    Furnace : AirHeatingCoilType # 2
    HotWater : AirHeatingCoilType # 3


class AirSystemData(IDisposable):
    @property
    def AirFanType(self) -> AirFanType: ...
    @AirFanType.setter
    def AirFanType(self, value: AirFanType) -> AirFanType: ...
    @property
    def ChilledWaterLoopId(self) -> ElementId: ...
    @ChilledWaterLoopId.setter
    def ChilledWaterLoopId(self, value: ElementId) -> ElementId: ...
    @property
    def CoolingCoilType(self) -> AirCoolingCoilType: ...
    @CoolingCoilType.setter
    def CoolingCoilType(self, value: AirCoolingCoilType) -> AirCoolingCoilType: ...
    @property
    def HeatExchangerType(self) -> AirHeatExchangerType: ...
    @HeatExchangerType.setter
    def HeatExchangerType(self, value: AirHeatExchangerType) -> AirHeatExchangerType: ...
    @property
    def HeatingCoilType(self) -> AirHeatingCoilType: ...
    @HeatingCoilType.setter
    def HeatingCoilType(self, value: AirHeatingCoilType) -> AirHeatingCoilType: ...
    @property
    def HeatingHotWaterLoopId(self) -> ElementId: ...
    @HeatingHotWaterLoopId.setter
    def HeatingHotWaterLoopId(self, value: ElementId) -> ElementId: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def PreheatCoilType(self) -> AirHeatingCoilType: ...
    @PreheatCoilType.setter
    def PreheatCoilType(self, value: AirHeatingCoilType) -> AirHeatingCoilType: ...
    @property
    def PreheatHotWaterLoopId(self) -> ElementId: ...
    @PreheatHotWaterLoopId.setter
    def PreheatHotWaterLoopId(self, value: ElementId) -> ElementId: ...
    def Dispose(self) -> None: ...


class AnalyticalSystemDomain(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    WaterLoop : AnalyticalSystemDomain # 0
    AirSystem : AnalyticalSystemDomain # 1
    ElectricalSystem : AnalyticalSystemDomain # 2


class ComponentClassification(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Undefined : ComponentClassification # 0
    Pipe : ComponentClassification # 1
    Duct : ComponentClassification # 2
    FlexPipe : ComponentClassification # 11
    FlexDuct : ComponentClassification # 12
    Elbow : ComponentClassification # 101
    Tee : ComponentClassification # 102
    Tap : ComponentClassification # 103
    Transition : ComponentClassification # 104
    Cross : ComponentClassification # 105
    Endcap : ComponentClassification # 106
    Coupling : ComponentClassification # 107
    Union : ComponentClassification # 108
    Flange : ComponentClassification # 109
    Wye : ComponentClassification # 110
    Valve : ComponentClassification # 111
    Sensor : ComponentClassification # 112
    Hanger : ComponentClassification # 113
    Sleeve : ComponentClassification # 114


class ConditionType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Heated : ConditionType # 0
    Cooled : ConditionType # 1
    HeatedAndCooled : ConditionType # 2
    Unconditioned : ConditionType # 3
    Vented : ConditionType # 4
    NaturallyVentedOnly : ConditionType # 5
    NoOfConditionTypes : ConditionType # 6


class Duct(MEPCurve):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Diameter(self) -> float: ...
    @property
    def Document(self) -> Document: ...
    @property
    def DuctType(self) -> DuctType: ...
    @DuctType.setter
    def DuctType(self, value: DuctType) -> DuctType: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Height(self) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsPlaceholder(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LevelOffset(self) -> float: ...
    @LevelOffset.setter
    def LevelOffset(self, value: float) -> float: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MEPSystem(self) -> MEPSystem: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ReferenceLevel(self) -> Level: ...
    @ReferenceLevel.setter
    def ReferenceLevel(self, value: Level) -> Level: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Width(self) -> float: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def CreatePlaceholder(document: Document, systemTypeId: ElementId, ductTypeId: ElementId, levelId: ElementId, startPoint: XYZ, endPoint: XYZ) -> Duct: ...
    @staticmethod
    def IsDuctTypeId(document: Document, ductTypeId: ElementId) -> bool: ...
    @staticmethod
    def IsHvacSystemTypeId(document: Document, systemTypeId: ElementId) -> bool: ...
    def SetSystemType(self, systemTypeId: ElementId) -> None: ...
    # Skipped Create due to it being static, abstract and generic.

    Create : Create_MethodGroup
    class Create_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, ductTypeId: ElementId, levelId: ElementId, startConnector: Connector, endConnector: Connector) -> Duct:...
        @typing.overload
        def __call__(self, document: Document, ductTypeId: ElementId, levelId: ElementId, startConnector: Connector, endPoint: XYZ) -> Duct:...
        @typing.overload
        def __call__(self, document: Document, systemTypeId: ElementId, ductTypeId: ElementId, levelId: ElementId, startPoint: XYZ, endPoint: XYZ) -> Duct:...



class DuctFittingAndAccessoryConnectorData(IDisposable):
    @property
    def Angle(self) -> float: ...
    @property
    def Diameter(self) -> float: ...
    @property
    def Flow(self) -> float: ...
    @property
    def FlowDirection(self) -> FlowDirectionType: ...
    @property
    def Height(self) -> float: ...
    @property
    def Index(self) -> int: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LinkIndex(self) -> int: ...
    @property
    def Profile(self) -> ConnectorProfileType: ...
    @property
    def VelocityPressure(self) -> float: ...
    @property
    def Width(self) -> float: ...
    def Dispose(self) -> None: ...
    def GetCoordination(self) -> Transform: ...


class DuctFittingAndAccessoryData(IDisposable):
    @property
    def AirViscosity(self) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Origin(self) -> XYZ: ...
    @property
    def PartType(self) -> PartType: ...
    @property
    def ServerGUID(self) -> Guid: ...
    @property
    def SystemClassification(self) -> MEPSystemClassification: ...
    def Dispose(self) -> None: ...
    def GetAllConnectorData(self) -> IList_1[DuctFittingAndAccessoryConnectorData]: ...
    def GetEntity(self) -> Entity: ...
    def GetFamilyInstanceId(self) -> ElementId: ...


class DuctFittingAndAccessoryPressureDropData(IDisposable):
    @property
    def CalculationType(self) -> int: ...
    @property
    def IsCurrentEntityValid(self) -> bool: ...
    @IsCurrentEntityValid.setter
    def IsCurrentEntityValid(self, value: bool) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    def Dispose(self) -> None: ...
    def GetDuctFittingAndAccessoryData(self) -> DuctFittingAndAccessoryData: ...
    def GetPresureDropItems(self) -> IList_1[DuctFittingAndAccessoryPressureDropItem]: ...
    def SetDefaultEntity(self, defaultEntity: Entity) -> None: ...


class DuctFittingAndAccessoryPressureDropItem(IDisposable):
    @property
    def BeginConnectorIndex(self) -> int: ...
    @property
    def Coefficient(self) -> float: ...
    @Coefficient.setter
    def Coefficient(self, value: float) -> float: ...
    @property
    def EndConnectorIndex(self) -> int: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def VelocityPressure(self) -> float: ...
    def Dispose(self) -> None: ...


class DuctFlowConfigurationType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Calculated : DuctFlowConfigurationType # 0
    Preset : DuctFlowConfigurationType # 1
    System : DuctFlowConfigurationType # 2


class DuctInsulation(InsulationLiningBase):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Diameter(self) -> float: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Height(self) -> float: ...
    @property
    def HostElementId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LevelOffset(self) -> float: ...
    @LevelOffset.setter
    def LevelOffset(self, value: float) -> float: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MEPSystem(self) -> MEPSystem: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ReferenceLevel(self) -> Level: ...
    @ReferenceLevel.setter
    def ReferenceLevel(self, value: Level) -> Level: ...
    @property
    def Thickness(self) -> float: ...
    @Thickness.setter
    def Thickness(self, value: float) -> float: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Width(self) -> float: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(document: Document, ductOrContentElementId: ElementId, ductInsulationTypeId: ElementId, Thickness: float) -> DuctInsulation: ...


class DuctInsulationType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class DuctLining(InsulationLiningBase):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Diameter(self) -> float: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Height(self) -> float: ...
    @property
    def HostElementId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LevelOffset(self) -> float: ...
    @LevelOffset.setter
    def LevelOffset(self, value: float) -> float: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MEPSystem(self) -> MEPSystem: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ReferenceLevel(self) -> Level: ...
    @ReferenceLevel.setter
    def ReferenceLevel(self, value: Level) -> Level: ...
    @property
    def Thickness(self) -> float: ...
    @Thickness.setter
    def Thickness(self, value: float) -> float: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Width(self) -> float: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(document: Document, ductOrContentElementId: ElementId, ductLiningTypeId: ElementId, Thickness: float) -> DuctLining: ...


class DuctLiningType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def Roughness(self) -> float: ...
    @Roughness.setter
    def Roughness(self, value: float) -> float: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def IsValidRoughness(self, roughness: float) -> bool: ...


class DuctLossMethodType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    NotDefined : DuctLossMethodType # 0
    SpecificLoss : DuctLossMethodType # 4
    Coefficient : DuctLossMethodType # 6


class DuctPressureDropData(IDisposable):
    @property
    def CategoryId(self) -> ElementId: ...
    @property
    def Coefficient(self) -> float: ...
    @Coefficient.setter
    def Coefficient(self, value: float) -> float: ...
    @property
    def Density(self) -> float: ...
    @property
    def EquivalentDiameter(self) -> float: ...
    @EquivalentDiameter.setter
    def EquivalentDiameter(self, value: float) -> float: ...
    @property
    def Flow(self) -> float: ...
    @property
    def Friction(self) -> float: ...
    @Friction.setter
    def Friction(self, value: float) -> float: ...
    @property
    def Height(self) -> float: ...
    @property
    def HydraulicDiameter(self) -> float: ...
    @HydraulicDiameter.setter
    def HydraulicDiameter(self, value: float) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Length(self) -> float: ...
    @property
    def Level(self) -> SystemCalculationLevel: ...
    @property
    def PressureDrop(self) -> float: ...
    @PressureDrop.setter
    def PressureDrop(self, value: float) -> float: ...
    @property
    def ReynoldsNumber(self) -> float: ...
    @ReynoldsNumber.setter
    def ReynoldsNumber(self, value: float) -> float: ...
    @property
    def Roughness(self) -> float: ...
    @property
    def Shape(self) -> ConnectorProfileType: ...
    @property
    def Velocity(self) -> float: ...
    @Velocity.setter
    def Velocity(self, value: float) -> float: ...
    @property
    def VelocityPressure(self) -> float: ...
    @VelocityPressure.setter
    def VelocityPressure(self, value: float) -> float: ...
    @property
    def Viscosity(self) -> float: ...
    @property
    def WidthOrDiameter(self) -> float: ...
    def Dispose(self) -> None: ...


class DuctSettings(Element):
    @property
    def AirDensity(self) -> float: ...
    @AirDensity.setter
    def AirDensity(self, value: float) -> float: ...
    @property
    def AirViscosity(self) -> float: ...
    @AirViscosity.setter
    def AirViscosity(self, value: float) -> float: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def Centerline(self) -> str: ...
    @Centerline.setter
    def Centerline(self, value: str) -> str: ...
    @property
    def ConnectorSeparator(self) -> str: ...
    @ConnectorSeparator.setter
    def ConnectorSeparator(self, value: str) -> str: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FittingAngleUsage(self) -> FittingAngleUsage: ...
    @FittingAngleUsage.setter
    def FittingAngleUsage(self, value: FittingAngleUsage) -> FittingAngleUsage: ...
    @property
    def FittingAnnotationSize(self) -> float: ...
    @FittingAnnotationSize.setter
    def FittingAnnotationSize(self, value: float) -> float: ...
    @property
    def FlatOnBottom(self) -> str: ...
    @FlatOnBottom.setter
    def FlatOnBottom(self, value: str) -> str: ...
    @property
    def FlatOnTop(self) -> str: ...
    @FlatOnTop.setter
    def FlatOnTop(self, value: str) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OvalDuctSizeSeparator(self) -> str: ...
    @OvalDuctSizeSeparator.setter
    def OvalDuctSizeSeparator(self, value: str) -> str: ...
    @property
    def OvalDuctSizeSuffix(self) -> str: ...
    @OvalDuctSizeSuffix.setter
    def OvalDuctSizeSuffix(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def RectangularDuctSizeSeparator(self) -> str: ...
    @RectangularDuctSizeSeparator.setter
    def RectangularDuctSizeSeparator(self, value: str) -> str: ...
    @property
    def RectangularDuctSizeSuffix(self) -> str: ...
    @RectangularDuctSizeSuffix.setter
    def RectangularDuctSizeSuffix(self, value: str) -> str: ...
    @property
    def RiseDropAnnotationSize(self) -> float: ...
    @RiseDropAnnotationSize.setter
    def RiseDropAnnotationSize(self, value: float) -> float: ...
    @property
    def RoundDuctSizePrefix(self) -> str: ...
    @RoundDuctSizePrefix.setter
    def RoundDuctSizePrefix(self, value: str) -> str: ...
    @property
    def RoundDuctSizeSuffix(self) -> str: ...
    @RoundDuctSizeSuffix.setter
    def RoundDuctSizeSuffix(self, value: str) -> str: ...
    @property
    def SetDown(self) -> str: ...
    @SetDown.setter
    def SetDown(self, value: str) -> str: ...
    @property
    def SetDownFromBottom(self) -> str: ...
    @SetDownFromBottom.setter
    def SetDownFromBottom(self, value: str) -> str: ...
    @property
    def SetUp(self) -> str: ...
    @SetUp.setter
    def SetUp(self, value: str) -> str: ...
    @property
    def SetUpFromBottom(self) -> str: ...
    @SetUpFromBottom.setter
    def SetUpFromBottom(self, value: str) -> str: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def UseAnnotationScaleForSingleLineFittings(self) -> bool: ...
    @UseAnnotationScaleForSingleLineFittings.setter
    def UseAnnotationScaleForSingleLineFittings(self, value: bool) -> bool: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def GetDuctSettings(document: Document) -> DuctSettings: ...
    def GetPressLossCalculationServerInfo(self) -> MEPCalculationServerInfo: ...
    def GetSpecificFittingAngles(self) -> IList_1[float]: ...
    def GetSpecificFittingAngleStatus(self, angle: float) -> bool: ...
    def IsValidSpecificFittingAngle(self, angle: float) -> bool: ...
    def SetPressLossCalculationServerInfo(self, serverInfo: MEPCalculationServerInfo) -> None: ...
    def SetSpecificFittingAngleStatus(self, angle: float, useInLayout: bool) -> None: ...


class DuctShape(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Round : DuctShape # 0
    Rectangular : DuctShape # 1
    Oval : DuctShape # 2


class DuctSizeIterator(IEnumerator_1[MEPSize]):
    @property
    def Current(self) -> MEPSize: ...
    @property
    def IsValidObject(self) -> bool: ...
    def Dispose(self) -> None: ...
    def GetCurrent(self) -> MEPSize: ...
    def HasCurrent(self) -> bool: ...
    def IsDone(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class DuctSizes(IEnumerable_1[MEPSize], IDisposable):
    @property
    def Count(self) -> int: ...
    @property
    def IsValidObject(self) -> bool: ...
    def Contains(self, nominalDiameter: float) -> bool: ...
    def Dispose(self) -> None: ...
    def GetDuctSizeIterator(self) -> DuctSizeIterator: ...
    def GetEnumerator(self) -> IEnumerator_1[MEPSize]: ...


class DuctSizeSettingIterator(IEnumerator_1[KeyValuePair_2[DuctShape, DuctSizes]]):
    @property
    def Current(self) -> KeyValuePair_2[DuctShape, DuctSizes]: ...
    @property
    def IsValidObject(self) -> bool: ...
    def Dispose(self) -> None: ...
    def HasCurrent(self) -> bool: ...
    def IsDone(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class DuctSizeSettings(Element, IEnumerable_1[KeyValuePair_2[DuctShape, DuctSizes]]):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Item(self) -> DuctSizes: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddSize(self, shape: DuctShape, sizeInfo: MEPSize) -> None: ...
    def GetDuctSizeSettingIterator(self) -> DuctSizeSettingIterator: ...
    @staticmethod
    def GetDuctSizeSettings(aDoc: Document) -> DuctSizeSettings: ...
    def GetEnumerator(self) -> IEnumerator_1[KeyValuePair_2[DuctShape, DuctSizes]]: ...
    def GetSizeCount(self, shape: DuctShape) -> int: ...
    def RemoveSize(self, shape: DuctShape, nominalDiameter: float) -> None: ...


class DuctSystemType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    UndefinedSystemType : DuctSystemType # 0
    SupplyAir : DuctSystemType # 1
    ReturnAir : DuctSystemType # 2
    ExhaustAir : DuctSystemType # 3
    OtherAir : DuctSystemType # 4
    Fitting : DuctSystemType # 28
    Global : DuctSystemType # 29


class DuctType(MEPCurveType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def Cross(self) -> FamilySymbol: ...
    @Cross.setter
    def Cross(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Elbow(self) -> FamilySymbol: ...
    @Elbow.setter
    def Elbow(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MultiShapeTransition(self) -> FamilySymbol: ...
    @MultiShapeTransition.setter
    def MultiShapeTransition(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def PreferredJunctionType(self) -> JunctionType: ...
    @PreferredJunctionType.setter
    def PreferredJunctionType(self, value: JunctionType) -> JunctionType: ...
    @property
    def Roughness(self) -> float: ...
    @Roughness.setter
    def Roughness(self, value: float) -> float: ...
    @property
    def RoutingPreferenceManager(self) -> RoutingPreferenceManager: ...
    @property
    def Shape(self) -> ConnectorProfileType: ...
    @property
    def Tap(self) -> FamilySymbol: ...
    @Tap.setter
    def Tap(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Tee(self) -> FamilySymbol: ...
    @Tee.setter
    def Tee(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Transition(self) -> FamilySymbol: ...
    @Transition.setter
    def Transition(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Union(self) -> FamilySymbol: ...
    @Union.setter
    def Union(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class EquipmentClassification(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    None_ : EquipmentClassification # 0
    Pump : EquipmentClassification # 5


class FlexDuct(MEPCurve):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Diameter(self) -> float: ...
    @property
    def Document(self) -> Document: ...
    @property
    def EndTangent(self) -> XYZ: ...
    @EndTangent.setter
    def EndTangent(self, value: XYZ) -> XYZ: ...
    @property
    def FlexDuctType(self) -> FlexDuctType: ...
    @FlexDuctType.setter
    def FlexDuctType(self, value: FlexDuctType) -> FlexDuctType: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Height(self) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LevelOffset(self) -> float: ...
    @LevelOffset.setter
    def LevelOffset(self, value: float) -> float: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MEPSystem(self) -> MEPSystem: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def Points(self) -> IList_1[XYZ]: ...
    @Points.setter
    def Points(self, value: IList_1[XYZ]) -> IList_1[XYZ]: ...
    @property
    def ReferenceLevel(self) -> Level: ...
    @ReferenceLevel.setter
    def ReferenceLevel(self, value: Level) -> Level: ...
    @property
    def StartTangent(self) -> XYZ: ...
    @StartTangent.setter
    def StartTangent(self, value: XYZ) -> XYZ: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Width(self) -> float: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def IsFlexDuctTypeId(document: Document, ductTypeId: ElementId) -> bool: ...
    @staticmethod
    def IsHVACSystemTypeId(document: Document, systemTypeId: ElementId) -> bool: ...
    # Skipped Create due to it being static, abstract and generic.

    Create : Create_MethodGroup
    class Create_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, systemTypeId: ElementId, ductTypeId: ElementId, levelId: ElementId, points: IList_1[XYZ]) -> FlexDuct:...
        @typing.overload
        def __call__(self, document: Document, systemTypeId: ElementId, ductTypeId: ElementId, levelId: ElementId, startTangent: XYZ, endTangent: XYZ, points: IList_1[XYZ]) -> FlexDuct:...



class FlexDuctType(MEPCurveType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def Cross(self) -> FamilySymbol: ...
    @Cross.setter
    def Cross(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Elbow(self) -> FamilySymbol: ...
    @Elbow.setter
    def Elbow(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MultiShapeTransition(self) -> FamilySymbol: ...
    @MultiShapeTransition.setter
    def MultiShapeTransition(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def PreferredJunctionType(self) -> JunctionType: ...
    @PreferredJunctionType.setter
    def PreferredJunctionType(self, value: JunctionType) -> JunctionType: ...
    @property
    def Roughness(self) -> float: ...
    @Roughness.setter
    def Roughness(self, value: float) -> float: ...
    @property
    def RoutingPreferenceManager(self) -> RoutingPreferenceManager: ...
    @property
    def Shape(self) -> ConnectorProfileType: ...
    @property
    def Tap(self) -> FamilySymbol: ...
    @Tap.setter
    def Tap(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Tee(self) -> FamilySymbol: ...
    @Tee.setter
    def Tee(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Transition(self) -> FamilySymbol: ...
    @Transition.setter
    def Transition(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def Union(self) -> FamilySymbol: ...
    @Union.setter
    def Union(self, value: FamilySymbol) -> FamilySymbol: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class IDuctFittingAndAccessoryPressureDropServer(IExternalServer, typing.Protocol):
    @abc.abstractmethod
    def Calculate(self, data: DuctFittingAndAccessoryPressureDropData) -> bool: ...
    @abc.abstractmethod
    def GetDataSchema(self) -> Schema: ...
    @abc.abstractmethod
    def IsApplicable(self, data: DuctFittingAndAccessoryPressureDropData) -> bool: ...


class IDuctPressureDropServer(IExternalServer, typing.Protocol):
    @abc.abstractmethod
    def Calculate(self, data: DuctPressureDropData) -> None: ...
    @abc.abstractmethod
    def GetHtmlDescription(self) -> str: ...
    @abc.abstractmethod
    def GetInformationLink(self) -> str: ...


class MechanicalEquipment(MEPModel):
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...


class MechanicalEquipmentSet(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def Classification(self) -> EquipmentClassification: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OnDuty(self) -> int: ...
    @OnDuty.setter
    def OnDuty(self, value: int) -> int: ...
    @property
    def OnStandby(self) -> int: ...
    @OnStandby.setter
    def OnStandby(self, value: int) -> int: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def Add(self, elemIds: ISet_1[ElementId]) -> None: ...
    @staticmethod
    def AreElementsNotConnectedInSeries(document: Document, elemIds: ISet_1[ElementId]) -> bool: ...
    @staticmethod
    def AreValidMembers(document: Document, memberIds: ISet_1[ElementId]) -> bool: ...
    @staticmethod
    def Create(document: Document, typeId: ElementId, memberIds: ISet_1[ElementId]) -> MechanicalEquipmentSet: ...
    def GetMembers(self) -> ISet_1[ElementId]: ...
    def Remove(self, elemIds: ISet_1[ElementId]) -> None: ...


class MechanicalEquipmentSetType(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(document: Document, name: str) -> MechanicalEquipmentSetType: ...


class MechanicalFitting(MEPModel):
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def PartType(self) -> PartType: ...


class MechanicalSystem(MEPSystem):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BaseEquipment(self) -> FamilyInstance: ...
    @property
    def BaseEquipmentConnector(self) -> Connector: ...
    @BaseEquipmentConnector.setter
    def BaseEquipmentConnector(self, value: Connector) -> Connector: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def ConnectorManager(self) -> ConnectorManager: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def DuctNetwork(self) -> ElementSet: ...
    @property
    def Elements(self) -> ElementSet: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HasDesignParts(self) -> bool: ...
    @property
    def HasFabricationParts(self) -> bool: ...
    @property
    def HasPlaceholders(self) -> bool: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsMultipleNetwork(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def IsWellConnected(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def PressureLossOfCriticalPath(self) -> float: ...
    @property
    def SectionsCount(self) -> int: ...
    @property
    def SystemType(self) -> DuctSystemType: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def GetFlow(self) -> float: ...
    def GetStaticPressure(self) -> float: ...
    def IsPressureDropServerMissing(self) -> bool: ...
    # Skipped Create due to it being static, abstract and generic.

    Create : Create_MethodGroup
    class Create_MethodGroup:
        @typing.overload
        def __call__(self, ADocument: Document, typeId: ElementId) -> MechanicalSystem:...
        @typing.overload
        def __call__(self, ADocument: Document, typeId: ElementId, name: str) -> MechanicalSystem:...



class MechanicalSystemType(MEPSystemType):
    @property
    def Abbreviation(self) -> str: ...
    @Abbreviation.setter
    def Abbreviation(self, value: str) -> str: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CalculationLevel(self) -> SystemCalculationLevel: ...
    @CalculationLevel.setter
    def CalculationLevel(self, value: SystemCalculationLevel) -> SystemCalculationLevel: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def FillColor(self) -> Color: ...
    @FillColor.setter
    def FillColor(self, value: Color) -> Color: ...
    @property
    def FillPatternId(self) -> ElementId: ...
    @FillPatternId.setter
    def FillPatternId(self, value: ElementId) -> ElementId: ...
    @property
    def FillVisible(self) -> bool: ...
    @FillVisible.setter
    def FillVisible(self, value: bool) -> bool: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LineColor(self) -> Color: ...
    @LineColor.setter
    def LineColor(self, value: Color) -> Color: ...
    @property
    def LinePatternId(self) -> ElementId: ...
    @LinePatternId.setter
    def LinePatternId(self, value: ElementId) -> ElementId: ...
    @property
    def LineWeight(self) -> int: ...
    @LineWeight.setter
    def LineWeight(self, value: int) -> int: ...
    @property
    def Location(self) -> Location: ...
    @property
    def MaterialId(self) -> ElementId: ...
    @MaterialId.setter
    def MaterialId(self, value: ElementId) -> ElementId: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def RiseDropSettings(self) -> RiseDropSymbol: ...
    @RiseDropSettings.setter
    def RiseDropSettings(self, value: RiseDropSymbol) -> RiseDropSymbol: ...
    @property
    def SystemClassification(self) -> MEPSystemClassification: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(ADoc: Document, systemClassification: MEPSystemClassification, name: str) -> MechanicalSystemType: ...
    def ValidateRiseDropSymbolType(self, risedropType: RiseDropSymbol) -> bool: ...


class MechanicalUtils(abc.ABC):
    @staticmethod
    def BreakCurve(document: Document, ductId: ElementId, ptBreak: XYZ) -> ElementId: ...
    @staticmethod
    def ConnectAirTerminalOnDuct(document: Document, airTerminalId: ElementId, ductCurveId: ElementId) -> bool: ...
    @staticmethod
    def ConvertDuctPlaceholders(document: Document, placeholderIds: ICollection_1[ElementId]) -> ICollection_1[ElementId]: ...
    # Skipped ConnectDuctPlaceholdersAtCross due to it being static, abstract and generic.

    ConnectDuctPlaceholdersAtCross : ConnectDuctPlaceholdersAtCross_MethodGroup
    class ConnectDuctPlaceholdersAtCross_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, placeholder1Id: ElementId, placeholder2Id: ElementId) -> bool:...
        @typing.overload
        def __call__(self, document: Document, placeholder1Id: ElementId, placeholder2Id: ElementId, placeholder3Id: ElementId) -> bool:...
        @typing.overload
        def __call__(self, document: Document, connector1: Connector, connector2: Connector, connector3: Connector, connector4: Connector) -> bool:...

    # Skipped ConnectDuctPlaceholdersAtElbow due to it being static, abstract and generic.

    ConnectDuctPlaceholdersAtElbow : ConnectDuctPlaceholdersAtElbow_MethodGroup
    class ConnectDuctPlaceholdersAtElbow_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, connector1: Connector, connector2: Connector) -> bool:...
        @typing.overload
        def __call__(self, document: Document, placeholder1Id: ElementId, placeholder2Id: ElementId) -> bool:...

    # Skipped ConnectDuctPlaceholdersAtTee due to it being static, abstract and generic.

    ConnectDuctPlaceholdersAtTee : ConnectDuctPlaceholdersAtTee_MethodGroup
    class ConnectDuctPlaceholdersAtTee_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, placeholder1Id: ElementId, placeholder2Id: ElementId) -> bool:...
        @typing.overload
        def __call__(self, document: Document, connector1: Connector, connector2: Connector, connector3: Connector) -> bool:...



class MEPAnalyticalSystem(Element):
    @property
    def AnalyticalSystemDomain(self) -> AnalyticalSystemDomain: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def Create(document: Document, domain: AnalyticalSystemDomain, name: str) -> MEPAnalyticalSystem: ...
    def GetAirSystemData(self) -> AirSystemData: ...
    def GetWaterLoopData(self) -> WaterLoopData: ...


class MEPBuildingConstruction(ElementType):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def GetBuildingConstruction(self, constructionType: ConstructionType) -> Construction: ...
    def GetBuildingConstructionOverride(self, constructionType: ConstructionType) -> bool: ...
    def GetConstructions(self, constructionType: ConstructionType) -> ICollection_1[Construction]: ...
    def SetBuildingConstruction(self, constructionType: ConstructionType, buildingConstruction: Construction) -> None: ...
    def SetBuildingConstructionOverride(self, constructionType: ConstructionType, override: bool) -> None: ...


class MEPBuildingConstructionSet(APIObject, IEnumerable):
    def __init__(self) -> None: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Size(self) -> int: ...
    def Clear(self) -> None: ...
    def Contains(self, item: MEPBuildingConstruction) -> bool: ...
    def Erase(self, item: MEPBuildingConstruction) -> int: ...
    def ForwardIterator(self) -> MEPBuildingConstructionSetIterator: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def Insert(self, item: MEPBuildingConstruction) -> bool: ...
    def ReverseIterator(self) -> MEPBuildingConstructionSetIterator: ...


class MEPBuildingConstructionSetIterator(APIObject, IEnumerator, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def Current(self) -> typing.Any: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class MEPHiddenLineSettings(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def DrawHiddenLine(self) -> bool: ...
    @DrawHiddenLine.setter
    def DrawHiddenLine(self, value: bool) -> bool: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def InsideGap(self) -> float: ...
    @InsideGap.setter
    def InsideGap(self, value: float) -> float: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LineStyle(self) -> ElementId: ...
    @LineStyle.setter
    def LineStyle(self, value: ElementId) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OutsideGap(self) -> float: ...
    @OutsideGap.setter
    def OutsideGap(self, value: float) -> float: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def SingleLineGap(self) -> float: ...
    @SingleLineGap.setter
    def SingleLineGap(self, value: float) -> float: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @staticmethod
    def GetMEPHiddenLineSettings(doc: Document) -> MEPHiddenLineSettings: ...


class MEPSection(IDisposable):
    @property
    def FixtureUnit(self) -> float: ...
    @property
    def Flow(self) -> float: ...
    @property
    def Friction(self) -> float: ...
    @property
    def FrictionFactor(self) -> float: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def Number(self) -> int: ...
    @property
    def ReynoldsNumber(self) -> float: ...
    @property
    def Roughness(self) -> float: ...
    @property
    def TotalCoefficient(self) -> float: ...
    @property
    def TotalCurveLength(self) -> float: ...
    @property
    def TotalPressureLoss(self) -> float: ...
    @property
    def Velocity(self) -> float: ...
    @property
    def VelocityPressure(self) -> float: ...
    def Dispose(self) -> None: ...
    def GetCoefficient(self, elemId: ElementId) -> float: ...
    def GetElementIds(self) -> IList_1[ElementId]: ...
    def GetPressureDrop(self, elemId: ElementId) -> float: ...
    def GetSegmentLength(self, segmentId: ElementId) -> float: ...
    def IsMain(self, fittingId: ElementId) -> bool: ...


class MEPSpaceConstruction:
    @property
    def CurrentConstruction(self) -> MEPBuildingConstruction: ...
    @CurrentConstruction.setter
    def CurrentConstruction(self, value: MEPBuildingConstruction) -> MEPBuildingConstruction: ...
    @property
    def SpaceConstructions(self) -> MEPBuildingConstructionSet: ...
    def DeleteConstruction(self, pCurrentConstruction: MEPBuildingConstruction) -> None: ...
    def DuplicateConstruction(self, pCurrentConstruction: MEPBuildingConstruction, pName: str) -> MEPBuildingConstruction: ...
    def NewConstruction(self, pName: str) -> MEPBuildingConstruction: ...


class OccupancyUnit(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    NumberOfPeople : OccupancyUnit # 0
    AreaPerPerson : OccupancyUnit # 1
    BySpaceType : OccupancyUnit # -1
    UseDefaultValues : OccupancyUnit # -1


class ReturnAirflowType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Specified : ReturnAirflowType # 0
    SpecifiedSupplyAirflow : ReturnAirflowType # 1
    CalculatedSupplyAirflow : ReturnAirflowType # 2
    ActualSupplyAirflow : ReturnAirflowType # 3


class RiseDropSymbol(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    NoSymbol : RiseDropSymbol # 0
    Outline : RiseDropSymbol # 1
    Cross : RiseDropSymbol # 2
    CrossFilled : RiseDropSymbol # 3
    Slash : RiseDropSymbol # 4
    SlashFilled : RiseDropSymbol # 5
    Backslash : RiseDropSymbol # 6
    BackslashFilled : RiseDropSymbol # 7
    Wye : RiseDropSymbol # 8
    ReverseWye : RiseDropSymbol # 9
    OutlineFilled : RiseDropSymbol # 10
    YinYang : RiseDropSymbol # 11
    YinYangFilled : RiseDropSymbol # 12
    BendThreeQuarterCircle : RiseDropSymbol # 13
    BendFullCircle : RiseDropSymbol # 14
    TeeHalfCircle : RiseDropSymbol # 15
    TeeFullCircle : RiseDropSymbol # 16
    CrossNoOutline : RiseDropSymbol # 17
    WyeFilled : RiseDropSymbol # 18
    ReverseWyeFilled : RiseDropSymbol # 19
    CustomSymbol : RiseDropSymbol # -1


class Space(SpatialElement):
    @property
    def ActualExhaustAirflow(self) -> float: ...
    @property
    def ActualHVACLoad(self) -> float: ...
    @property
    def ActualLightingLoad(self) -> float: ...
    @property
    def ActualOtherLoad(self) -> float: ...
    @property
    def ActualPowerLoad(self) -> float: ...
    @property
    def ActualReturnAirflow(self) -> float: ...
    @property
    def ActualSupplyAirflow(self) -> float: ...
    @property
    def AirChangesPerHour(self) -> float: ...
    @property
    def Area(self) -> float: ...
    @property
    def AreaperPerson(self) -> float: ...
    @AreaperPerson.setter
    def AreaperPerson(self, value: float) -> float: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def AverageEstimatedIllumination(self) -> float: ...
    @property
    def BaseHeatLoadOn(self) -> BaseLoadOn: ...
    @BaseHeatLoadOn.setter
    def BaseHeatLoadOn(self, value: BaseLoadOn) -> BaseLoadOn: ...
    @property
    def BaseOffset(self) -> float: ...
    @BaseOffset.setter
    def BaseOffset(self, value: float) -> float: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CalculatedCoolingLoad(self) -> float: ...
    @property
    def CalculatedHeatingLoad(self) -> float: ...
    @property
    def CalculatedSupplyAirflow(self) -> float: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CeilingReflectance(self) -> float: ...
    @CeilingReflectance.setter
    def CeilingReflectance(self, value: float) -> float: ...
    @property
    def ClosedShell(self) -> GeometryElement: ...
    @property
    def ConditionType(self) -> ConditionType: ...
    @ConditionType.setter
    def ConditionType(self, value: ConditionType) -> ConditionType: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignCoolingLoad(self) -> float: ...
    @DesignCoolingLoad.setter
    def DesignCoolingLoad(self, value: float) -> float: ...
    @property
    def DesignExhaustAirflow(self) -> float: ...
    @DesignExhaustAirflow.setter
    def DesignExhaustAirflow(self, value: float) -> float: ...
    @property
    def DesignHeatingLoad(self) -> float: ...
    @DesignHeatingLoad.setter
    def DesignHeatingLoad(self, value: float) -> float: ...
    @property
    def DesignHVACLoadperArea(self) -> float: ...
    @DesignHVACLoadperArea.setter
    def DesignHVACLoadperArea(self, value: float) -> float: ...
    @property
    def DesignLightingLoad(self) -> float: ...
    @DesignLightingLoad.setter
    def DesignLightingLoad(self, value: float) -> float: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def DesignOtherLoadperArea(self) -> float: ...
    @DesignOtherLoadperArea.setter
    def DesignOtherLoadperArea(self, value: float) -> float: ...
    @property
    def DesignPowerLoad(self) -> float: ...
    @DesignPowerLoad.setter
    def DesignPowerLoad(self, value: float) -> float: ...
    @property
    def DesignReturnAirflow(self) -> float: ...
    @DesignReturnAirflow.setter
    def DesignReturnAirflow(self, value: float) -> float: ...
    @property
    def DesignSupplyAirflow(self) -> float: ...
    @DesignSupplyAirflow.setter
    def DesignSupplyAirflow(self, value: float) -> float: ...
    @property
    def Document(self) -> Document: ...
    @property
    def FloorReflectance(self) -> float: ...
    @FloorReflectance.setter
    def FloorReflectance(self, value: float) -> float: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LatentHeatGainperPerson(self) -> float: ...
    @LatentHeatGainperPerson.setter
    def LatentHeatGainperPerson(self, value: float) -> float: ...
    @property
    def Level(self) -> Level: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def LightingCalculationWorkplane(self) -> float: ...
    @LightingCalculationWorkplane.setter
    def LightingCalculationWorkplane(self, value: float) -> float: ...
    @property
    def LightingLoadUnit(self) -> BaseLoadOn: ...
    @LightingLoadUnit.setter
    def LightingLoadUnit(self, value: BaseLoadOn) -> BaseLoadOn: ...
    @property
    def LimitOffset(self) -> float: ...
    @LimitOffset.setter
    def LimitOffset(self, value: float) -> float: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def Number(self) -> str: ...
    @Number.setter
    def Number(self, value: str) -> str: ...
    @property
    def NumberofPeople(self) -> float: ...
    @NumberofPeople.setter
    def NumberofPeople(self, value: float) -> float: ...
    @property
    def OccupancyUnit(self) -> OccupancyUnit: ...
    @OccupancyUnit.setter
    def OccupancyUnit(self, value: OccupancyUnit) -> OccupancyUnit: ...
    @property
    def Occupiable(self) -> bool: ...
    @property
    def OutdoorAirflow(self) -> float: ...
    @property
    def OutdoorAirFlowStandard(self) -> OutdoorAirFlowStandard: ...
    @property
    def OutdoorAirPerArea(self) -> float: ...
    @property
    def OutdoorAirPerPerson(self) -> float: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Perimeter(self) -> float: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def Plenum(self) -> bool: ...
    @property
    def PowerLoadUnit(self) -> BaseLoadOn: ...
    @PowerLoadUnit.setter
    def PowerLoadUnit(self, value: BaseLoadOn) -> BaseLoadOn: ...
    @property
    def ReturnAirflow(self) -> ReturnAirflowType: ...
    @ReturnAirflow.setter
    def ReturnAirflow(self, value: ReturnAirflowType) -> ReturnAirflowType: ...
    @property
    def Room(self) -> Room: ...
    @property
    def SensibleHeatGainperPerson(self) -> float: ...
    @SensibleHeatGainperPerson.setter
    def SensibleHeatGainperPerson(self, value: float) -> float: ...
    @property
    def SpaceCavityRatio(self) -> float: ...
    @property
    def SpaceConstruction(self) -> MEPSpaceConstruction: ...
    @property
    def SpaceType(self) -> SpaceType: ...
    @SpaceType.setter
    def SpaceType(self, value: SpaceType) -> SpaceType: ...
    @property
    def SpaceTypeId(self) -> ElementId: ...
    @SpaceTypeId.setter
    def SpaceTypeId(self, value: ElementId) -> ElementId: ...
    @property
    def UnboundedHeight(self) -> float: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def UpperLimit(self) -> Level: ...
    @UpperLimit.setter
    def UpperLimit(self, value: Level) -> Level: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Volume(self) -> float: ...
    @property
    def WallReflectance(self) -> float: ...
    @WallReflectance.setter
    def WallReflectance(self, value: float) -> float: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    @property
    def Zone(self) -> Zone: ...
    def IsPointInSpace(self, point: XYZ) -> bool: ...


class SpaceFilter(ElementSlowFilter):
    def __init__(self) -> None: ...
    @property
    def Inverted(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...


class SpaceSet(APIObject, IEnumerable):
    def __init__(self) -> None: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Size(self) -> int: ...
    def Clear(self) -> None: ...
    def Contains(self, item: Space) -> bool: ...
    def Erase(self, item: Space) -> int: ...
    def ForwardIterator(self) -> SpaceSetIterator: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def Insert(self, item: Space) -> bool: ...
    def ReverseIterator(self) -> SpaceSetIterator: ...


class SpaceSetIterator(APIObject, IEnumerator, abc.ABC):
    def __init__(self) -> None: ...
    @property
    def Current(self) -> typing.Any: ...
    @property
    def IsReadOnly(self) -> bool: ...
    def MoveNext(self) -> bool: ...
    def Reset(self) -> None: ...


class SpaceTag(SpatialElementTag):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HasElbow(self) -> bool: ...
    @property
    def HasLeader(self) -> bool: ...
    @HasLeader.setter
    def HasLeader(self, value: bool) -> bool: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsOrphaned(self) -> bool: ...
    @property
    def IsTaggingLink(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LeaderElbow(self) -> XYZ: ...
    @LeaderElbow.setter
    def LeaderElbow(self, value: XYZ) -> XYZ: ...
    @property
    def LeaderEnd(self) -> XYZ: ...
    @LeaderEnd.setter
    def LeaderEnd(self, value: XYZ) -> XYZ: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def RotationAngle(self) -> float: ...
    @RotationAngle.setter
    def RotationAngle(self, value: float) -> float: ...
    @property
    def Space(self) -> Space: ...
    @property
    def SpaceTagType(self) -> SpaceTagType: ...
    @SpaceTagType.setter
    def SpaceTagType(self, value: SpaceTagType) -> SpaceTagType: ...
    @property
    def TagHeadPosition(self) -> XYZ: ...
    @TagHeadPosition.setter
    def TagHeadPosition(self, value: XYZ) -> XYZ: ...
    @property
    def TagOrientation(self) -> SpatialElementTagOrientation: ...
    @TagOrientation.setter
    def TagOrientation(self, value: SpatialElementTagOrientation) -> SpatialElementTagOrientation: ...
    @property
    def TagText(self) -> str: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def View(self) -> View: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class SpaceTagFilter(ElementSlowFilter):
    def __init__(self) -> None: ...
    @property
    def Inverted(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...


class SpaceTagType(FamilySymbol):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CanBeCopied(self) -> bool: ...
    @property
    def CanBeDeleted(self) -> bool: ...
    @property
    def CanBeRenamed(self) -> bool: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Family(self) -> Family: ...
    @property
    def FamilyName(self) -> str: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def StructuralMaterialType(self) -> StructuralMaterialType: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...


class SpaceType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    kActiveStorage : SpaceType # 0
    kActiveStorageHospitalOrHealthcare : SpaceType # 1
    kAirOrTrainOrBusBaggageArea : SpaceType # 2
    kAirportConcourse : SpaceType # 3
    kAtriumEachAdditionalFloor : SpaceType # 4
    kAtriumFirstThreeFloors : SpaceType # 5
    kAudienceOrSeatingAreaPenitentiary : SpaceType # 6
    kAudienceOrSeatingAreaExerciseCenter : SpaceType # 7
    kAudienceOrSeatingAreaGymnasium : SpaceType # 8
    kAudienceOrSeatingAreaSportsArena : SpaceType # 9
    kAudienceOrSeatingAreaConventionCenter : SpaceType # 10
    kAudienceOrSeatingAreaMotionPictureTheatre : SpaceType # 11
    kAudienceOrSeatingAreaPerformingArtsTheatre : SpaceType # 12
    kAudienceOrSeatingAreaReligious : SpaceType # 13
    kAudienceOrSeatingAreaPoliceOrFireStations : SpaceType # 14
    kAudienceOrSeatingAreaCourtHouse : SpaceType # 15
    kAudienceOrSeatingAreaAuditorium : SpaceType # 16
    kBankCustomerArea : SpaceType # 17
    kBankingActivityAreaOffice : SpaceType # 18
    kBarberAndBeautyParlor : SpaceType # 19
    kCardFileAndCataloguingLibrary : SpaceType # 20
    kClassroomOrLectureOrTrainingPenitentiary : SpaceType # 21
    kClassroomOrLectureOrTraining : SpaceType # 22
    kConfinementCellsPenitentiary : SpaceType # 23
    kConfinementCellsCourtHouse : SpaceType # 24
    kConferenceMeetingOrMultipurpose : SpaceType # 25
    kCorridorOrTransition : SpaceType # 26
    kCorridorOrTransitionManufacturingFacility : SpaceType # 27
    kCorridorsWithPatientWaitingExamHospitalOrHealthcare : SpaceType # 28
    kCourtSportsAreaSportsArena : SpaceType # 29
    kCourtroomCourtHouse : SpaceType # 30
    kDepartmentStoreSalesAreaRetail : SpaceType # 31
    kDetailedManufacturingFacility : SpaceType # 32
    kDiningArea : SpaceType # 33
    kDiningAreaHotel : SpaceType # 34
    kDiningAreaFamilyDining : SpaceType # 35
    kDiningAreaLoungeOrLeisureDining : SpaceType # 36
    kDiningAreaMotel : SpaceType # 37
    kDiningAreaTransportation : SpaceType # 38
    kDiningAreaPenitentiary : SpaceType # 39
    kDiningAreaCivilServices : SpaceType # 40
    kDormitoryBedroom : SpaceType # 41
    kDormitoryStudyHall : SpaceType # 42
    kDressingOrLockerOrFittingRoomGymnasium : SpaceType # 43
    kDressingOrLockerOrFittingRoomCourtHouse : SpaceType # 44
    kDressingOrLockerOrFittingRoomPerformingArtsTheatre : SpaceType # 45
    kDressingOrLockerOrFittingRoomAuditorium : SpaceType # 46
    kDressingOrLockerOrFittingRoomExerciseCenter : SpaceType # 47
    kElectricalOrMechanical : SpaceType # 48
    kElevatorLobbies : SpaceType # 49
    kEmergencyHospitalOrHealthcare : SpaceType # 50
    kEquipmentRoomManufacturingFacility : SpaceType # 51
    kExamOrTreatmentHospitalOrHealthcare : SpaceType # 52
    kExerciseAreaExerciseCenter : SpaceType # 53
    kExerciseAreaGymnasium : SpaceType # 54
    kExhibitSpaceConventionCenter : SpaceType # 55
    kFellowshipHallReligiousBuildings : SpaceType # 56
    kFineMaterialWarehouse : SpaceType # 57
    kFineMerchandiseSalesAreaRetail : SpaceType # 58
    kFireStationEngineRoomPoliceOrFireStation : SpaceType # 59
    kFoodPreparation : SpaceType # 60
    kGarageServiceOrRepairAutomotiveFacility : SpaceType # 61
    kGeneralHighBayManufacturingFacility : SpaceType # 62
    kGeneralLowBayManufacturingFacility : SpaceType # 63
    kGeneralExhibitionMuseum : SpaceType # 64
    kHospitalNurseryHospitalOrHealthcare : SpaceType # 65
    kHospitalOrMedicalSuppliesHospitalOrHealthcare : SpaceType # 66
    kHospitalOrRadiologyHospitalOrHealthcare : SpaceType # 67
    kHotelOrConferenceCenterConferenceOrMeeting : SpaceType # 68
    kInactiveStorage : SpaceType # 69
    kJudgesChambersCourtHouse : SpaceType # 70
    kLaboratoryOffice : SpaceType # 71
    kLaundryIroningAndSorting : SpaceType # 72
    kLaundryWashingHospitalOrHealthcare : SpaceType # 73
    kLibraryAudioVisualLibraryAudioVisual : SpaceType # 74
    kLivingQuartersDormitory : SpaceType # 75
    kLivingQuartersMotel : SpaceType # 76
    kLivingQuartersHotel : SpaceType # 77
    kLobby : SpaceType # 78
    kLobbyReligiousBuildings : SpaceType # 79
    kLobbyMotionPictureTheatre : SpaceType # 80
    kLobbyAuditorium : SpaceType # 81
    kLobbyPerformingArtsTheatre : SpaceType # 82
    kLobbyPostOffice : SpaceType # 83
    kLobbyHotel : SpaceType # 84
    kLoungeOrRecreation : SpaceType # 85
    kMallConcourseSalesAreaRetail : SpaceType # 86
    kMassMerchandisingSalesAreaRetail : SpaceType # 87
    kMediumOrBulkyMaterialWarehouse : SpaceType # 88
    kMerchandisingSalesAreaRetail : SpaceType # 89
    kMuseumAndGalleryStorage : SpaceType # 90
    kNurseStationHospitalOrHealthcare : SpaceType # 91
    kOfficeEnclosed : SpaceType # 92
    kOfficeOpenPlan : SpaceType # 93
    kOfficeCommonActivityAreasInactiveStorage : SpaceType # 94
    kOperatingRoomHospitalOrHealthcare : SpaceType # 95
    kOtherTelevisedPlayingAreaSportsArena : SpaceType # 96
    kParkingAreaAttendantOnlyParkingGarage : SpaceType # 97
    kParkingAreaPedestrianParkingGarage : SpaceType # 98
    kPatientRoomHospitalOrHealthcare : SpaceType # 99
    kPersonalServicesSalesAreaRetail : SpaceType # 100
    kPharmacyHospitalOrHealthcare : SpaceType # 101
    kPhysicalTherapyHospitalOrHealthcare : SpaceType # 102
    kPlayingAreaGymnasium : SpaceType # 103
    kPlenum : SpaceType # 104
    kPoliceStationLaboratoryPoliceOrFireStations : SpaceType # 105
    kPublicAndStaffLoungeHospitalOrHealthcare : SpaceType # 106
    kReadingAreaLibrary : SpaceType # 107
    kReceptionOrWaitingTransportation : SpaceType # 108
    kReceptionOrWaitingMotel : SpaceType # 109
    kReceptionOrWaitingHotel : SpaceType # 110
    kRecoveryHospitalOrHealthcare : SpaceType # 111
    kRestorationMuseum : SpaceType # 112
    kRestrooms : SpaceType # 113
    kRingSportsAreaSportsArena : SpaceType # 114
    kSleepingQuartersPoliceOrFireStation : SpaceType # 115
    kSortingAreaPostOffice : SpaceType # 116
    kSpecialtyStoreSalesAreaRetail : SpaceType # 117
    kStacksLibrary : SpaceType # 118
    kStairsInactive : SpaceType # 119
    kStairway : SpaceType # 120
    kSupermarketSalesAreaRetail : SpaceType # 121
    kTerminalTicketCounterTransportation : SpaceType # 122
    kWorkshopWorkshop : SpaceType # 123
    kWorshipPulpitChoirReligious : SpaceType # 124
    kNoOfSpaceTypes : SpaceType # 125
    NoSpaceType : SpaceType # -1


class SystemCalculationLevel(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    None_ : SystemCalculationLevel # 0
    Flow : SystemCalculationLevel # 1
    Volume : SystemCalculationLevel # 2
    Performance : SystemCalculationLevel # 4
    All : SystemCalculationLevel # -1


class SystemZoneData(GenericZoneDomainData):
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def ZoneEquipmentId(self) -> ElementId: ...
    @ZoneEquipmentId.setter
    def ZoneEquipmentId(self, value: ElementId) -> ElementId: ...
    @staticmethod
    def Create() -> SystemZoneData: ...


class WaterChillerType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    AirCooled : WaterChillerType # 0
    WaterCooled : WaterChillerType # 1


class WaterLoopData(IDisposable):
    @property
    def ChillerType(self) -> WaterChillerType: ...
    @ChillerType.setter
    def ChillerType(self, value: WaterChillerType) -> WaterChillerType: ...
    @property
    def CondenserWaterLoopId(self) -> ElementId: ...
    @CondenserWaterLoopId.setter
    def CondenserWaterLoopId(self, value: ElementId) -> ElementId: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def WaterLoopType(self) -> WaterLoopType: ...
    @WaterLoopType.setter
    def WaterLoopType(self, value: WaterLoopType) -> WaterLoopType: ...
    def Dispose(self) -> None: ...


class WaterLoopType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Undefined : WaterLoopType # 0
    ChilledWater : WaterLoopType # 1
    CondenserWater : WaterLoopType # 2
    HotWater : WaterLoopType # 3
    VRF : WaterLoopType # 4


class Zone(Element):
    @property
    def Area(self) -> float: ...
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def Boundary(self) -> CurveArray: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def CalculatedCoolingLoad(self) -> float: ...
    @property
    def CalculatedHeatingLoad(self) -> float: ...
    @property
    def CalculatedSupplyAirflow(self) -> float: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CoolingAirTemperature(self) -> float: ...
    @CoolingAirTemperature.setter
    def CoolingAirTemperature(self, value: float) -> float: ...
    @property
    def CoolingSetPoint(self) -> float: ...
    @CoolingSetPoint.setter
    def CoolingSetPoint(self, value: float) -> float: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DehumidificationSetPoint(self) -> float: ...
    @DehumidificationSetPoint.setter
    def DehumidificationSetPoint(self, value: float) -> float: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GrossArea(self) -> float: ...
    @property
    def GrossVolume(self) -> float: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def HeatingAirTemperature(self) -> float: ...
    @HeatingAirTemperature.setter
    def HeatingAirTemperature(self, value: float) -> float: ...
    @property
    def HeatingSetPoint(self) -> float: ...
    @HeatingSetPoint.setter
    def HeatingSetPoint(self, value: float) -> float: ...
    @property
    def HumidificationSetPoint(self) -> float: ...
    @HumidificationSetPoint.setter
    def HumidificationSetPoint(self, value: float) -> float: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsDefaultZone(self) -> bool: ...
    @IsDefaultZone.setter
    def IsDefaultZone(self, value: bool) -> bool: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> None: ...
    @Name.setter
    def Name(self, value: str) -> None: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Perimeter(self) -> float: ...
    @property
    def Phase(self) -> Phase: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def ServiceType(self) -> ServiceType: ...
    @ServiceType.setter
    def ServiceType(self, value: ServiceType) -> ServiceType: ...
    @property
    def Spaces(self) -> SpaceSet: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def Volume(self) -> float: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def AddSpaces(self, spaces: SpaceSet) -> bool: ...
    def RemoveSpaces(self, spaces: SpaceSet) -> bool: ...


class ZoneEquipment(Element):
    @property
    def AssemblyInstanceId(self) -> ElementId: ...
    @property
    def BoundingBox(self) -> BoundingBoxXYZ: ...
    @property
    def Category(self) -> Category: ...
    @property
    def CreatedPhaseId(self) -> ElementId: ...
    @CreatedPhaseId.setter
    def CreatedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DemolishedPhaseId(self) -> ElementId: ...
    @DemolishedPhaseId.setter
    def DemolishedPhaseId(self, value: ElementId) -> ElementId: ...
    @property
    def DesignOption(self) -> DesignOption: ...
    @property
    def Document(self) -> Document: ...
    @property
    def Geometry(self) -> GeometryElement: ...
    @property
    def GroupId(self) -> ElementId: ...
    @property
    def Id(self) -> ElementId: ...
    @property
    def IsTransient(self) -> bool: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def LevelId(self) -> ElementId: ...
    @property
    def Location(self) -> Location: ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, value: str) -> str: ...
    @property
    def OwnerViewId(self) -> ElementId: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameter(self) -> Parameter: ...
    @property
    def Parameters(self) -> ParameterSet: ...
    @property
    def ParametersMap(self) -> ParameterMap: ...
    @property
    def Pinned(self) -> bool: ...
    @Pinned.setter
    def Pinned(self, value: bool) -> bool: ...
    @property
    def UniqueId(self) -> str: ...
    @property
    def VersionGuid(self) -> Guid: ...
    @property
    def ViewSpecific(self) -> bool: ...
    @property
    def WorksetId(self) -> WorksetId: ...
    def GetZoneEquipmentData(self) -> ZoneEquipmentData: ...
    @staticmethod
    def MoveSpaceToEquipment(document: Document, analyticalSpaceSet: ISet_1[ElementId], originalZoneEquipmentId: ElementId, targetZoneEquipmentId: ElementId) -> None: ...
    # Skipped Create due to it being static, abstract and generic.

    Create : Create_MethodGroup
    class Create_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, name: str) -> ZoneEquipment:...
        @typing.overload
        def __call__(self, document: Document, systemDomain: AnalyticalSystemDomain, name: str) -> ZoneEquipment:...

    # Skipped GetAssociatedZoneEquipment due to it being static, abstract and generic.

    GetAssociatedZoneEquipment : GetAssociatedZoneEquipment_MethodGroup
    class GetAssociatedZoneEquipment_MethodGroup:
        @typing.overload
        def __call__(self, document: Document, spaces: ISet_1[ElementId]) -> ISet_1[ElementId]:...
        @typing.overload
        def __call__(self, document: Document, spaceElementId: ElementId) -> ISet_1[ElementId]:...



class ZoneEquipmentBehavior(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    OnePerSpace : ZoneEquipmentBehavior # 0
    GroupSpaces : ZoneEquipmentBehavior # 1


class ZoneEquipmentData(IDisposable):
    @property
    def AirSystemId(self) -> ElementId: ...
    @AirSystemId.setter
    def AirSystemId(self, value: ElementId) -> ElementId: ...
    @property
    def ChilledWaterLoopId(self) -> ElementId: ...
    @ChilledWaterLoopId.setter
    def ChilledWaterLoopId(self, value: ElementId) -> ElementId: ...
    @property
    def CondenserWaterLoopId(self) -> ElementId: ...
    @CondenserWaterLoopId.setter
    def CondenserWaterLoopId(self, value: ElementId) -> ElementId: ...
    @property
    def CoolingCoilType(self) -> AirCoolingCoilType: ...
    @CoolingCoilType.setter
    def CoolingCoilType(self, value: AirCoolingCoilType) -> AirCoolingCoilType: ...
    @property
    def EquipmentBehavior(self) -> ZoneEquipmentBehavior: ...
    @EquipmentBehavior.setter
    def EquipmentBehavior(self, value: ZoneEquipmentBehavior) -> ZoneEquipmentBehavior: ...
    @property
    def EquipmentType(self) -> ZoneEquipmentHvacType: ...
    @EquipmentType.setter
    def EquipmentType(self, value: ZoneEquipmentHvacType) -> ZoneEquipmentHvacType: ...
    @property
    def HeatingCoilType(self) -> AirHeatingCoilType: ...
    @HeatingCoilType.setter
    def HeatingCoilType(self, value: AirHeatingCoilType) -> AirHeatingCoilType: ...
    @property
    def HotWaterLoopId(self) -> ElementId: ...
    @HotWaterLoopId.setter
    def HotWaterLoopId(self, value: ElementId) -> ElementId: ...
    @property
    def IsValidObject(self) -> bool: ...
    @property
    def VRFLoopId(self) -> ElementId: ...
    @VRFLoopId.setter
    def VRFLoopId(self, value: ElementId) -> ElementId: ...
    def Dispose(self) -> None: ...
    def IsDataCompleted(self) -> bool: ...


class ZoneEquipmentHvacType(typing.SupportsInt):
    @typing.overload
    def __init__(self, value : int) -> None: ...
    @typing.overload
    def __init__(self, value : int, force_if_true: bool) -> None: ...
    def __int__(self) -> int: ...
    
    # Values:
    Undefined : ZoneEquipmentHvacType # 0
    ChilledBeamActive : ZoneEquipmentHvacType # 1
    FourPipeFanCoil : ZoneEquipmentHvacType # 2
    PackagedTerminalAirConditioner : ZoneEquipmentHvacType # 3
    PackagedTerminalHeatPump : ZoneEquipmentHvacType # 4
    ParallelFanPoweredBox : ZoneEquipmentHvacType # 5
    VAVBox : ZoneEquipmentHvacType # 6
    CAVBox : ZoneEquipmentHvacType # 9
    RadiantPanel : ZoneEquipmentHvacType # 10
    SeriesFanPoweredBox : ZoneEquipmentHvacType # 11
    UnitHeater : ZoneEquipmentHvacType # 12
    UnitVentilator : ZoneEquipmentHvacType # 13
    WaterSourceHeatPump : ZoneEquipmentHvacType # 14
    ChilledBeamPassive : ZoneEquipmentHvacType # 15
    Unconditioned : ZoneEquipmentHvacType # 16
    VRFFanCoil : ZoneEquipmentHvacType # 17

